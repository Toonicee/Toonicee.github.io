{"version":3,"sources":["components/Control/Control.jsx","components/Control/index.js","components/Timer/Timer.jsx","components/Timer/index.js","components/Progress/Progress.jsx","components/Progress/index.js","components/IntegerStep/IntegerStep.jsx","components/IntegerStep/index.js","components/Countdown/Countdown.jsx","components/Countdown/index.js","components/Tabs/index.js","components/Tabs/Tabs.jsx","components/App/index.js","components/App/App.jsx","index.jsx"],"names":["Control","props","start","startDisabled","reset","stop","disabled","func","className","type","onClick","defaultProps","initialState","minutes","seconds","miliseconds","timerId","Timer","updateTime","setTimeout","state","stopwatch","mil","Math","floor","sec","min","setState","control","clearTimeout","this","React","Component","ProgressWrapper","percent","IntegerStep","value","change","max","progress","span","onChange","style","marginLeft","oldMin","oldSec","allTimeInSecind","Countdown","changeMin","Number","changeSec","startTimer","timeRanges","message","warning","second","minuts","num","document","getElementById","play","stopTimer","resetTimer","inputs","progressWrapper","node","id","src","kind","srcLang","label","Tab","TabPane","Tabs","defaultActiveKey","tab","key","App","ReactDOM","render"],"mappings":"yWAOMA,G,aAAU,SAAAC,GAAU,IAChBC,EAAgDD,EAAhDC,MAAOC,EAAyCF,EAAzCE,cAAeC,EAA0BH,EAA1BG,MAAOC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SACrCC,EAAQJ,EAAwBE,EAARH,EAC9B,OACE,yBAAKM,UAAU,mBACb,kBAAC,IAAD,CACEC,KAAMN,EAAgB,SAAW,UACjCO,QAAS,kBAAMH,KACfD,SAAUA,GAETH,EAAgB,OAAS,SAE5B,kBAAC,IAAD,CAAQK,UAAU,YAAYE,QAASN,GAAvC,YAONJ,EAAQW,aAAe,CACrBT,MAAO,aACPC,eAAe,EACfC,MAAO,aACPC,KAAM,aACNC,UAAU,GAWGN,ICxCAA,EDwCAA,EEtCTY,G,OAAe,CACnBC,QAAS,EACTC,QAAS,EACTC,YAAa,IAGXC,EAAU,KCRCC,E,YDUb,aAAe,IAAD,8BACZ,+CAWFf,MAAQ,WACN,EAAKgB,cAbO,EAgBdA,WAAa,WACXF,EAAUG,YAAW,WAAO,IAAD,EAGrB,EAAKC,MADPC,UAAaN,EAFU,EAEVA,YAAaD,EAFH,EAEGA,QAASD,EAFZ,EAEYA,QAEjCS,EAAMC,KAAKC,MAAMT,EAAc,KAC/BU,EAAMX,EACNY,EAAMb,EAENE,GAAe,KACjBU,EAAMX,EAAU,EAChBQ,EAAM,GAGQ,KAAZR,IACFY,EAAMb,EAAU,EAChBY,EAAM,GAER,EAAKE,SAAS,CACZN,UAAW,CACTP,QAASW,EACTV,YAAaO,EACbT,QAASa,KAGb,EAAKR,eACJ,IACH,EAAKS,SAAS,CACZC,QAAS,CACPzB,eAAe,MA7CP,EAkDdE,KAAO,WACLwB,aAAab,GACb,EAAKW,SAAS,CACZC,QAAS,CACPzB,eAAe,MAtDP,EA2DdC,MAAQ,WAAO,IAEAD,EACT,EAAKiB,MADPQ,QAAWzB,cAEb0B,aAAab,GACRb,GACH,EAAKwB,SAAS,CACZN,UAAU,eACLT,KAIT,EAAKe,SAAS,CACZC,QAAS,CACPzB,eAAe,MAvEnB,EAAKiB,MAAQ,CACXC,UAAU,eACLT,GAELgB,QAAS,CACPzB,eAAe,IAPP,E,sEA8EJ,IAAD,EAIH2B,KAAKV,MAJF,IAELC,UAAaP,EAFR,EAEQA,QAASC,EAFjB,EAEiBA,YAAaF,EAF9B,EAE8BA,QACxBV,EAHN,EAGLyB,QAAWzB,cAGb,OACE,yBAAKK,UAAU,mBACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,eAAb,UACMK,EAAU,GAAV,WAAmBA,GAAYA,EADrC,YACgDC,EAAU,GAAV,WAAmBA,GAAYA,EAD/E,KAEE,0BAAMN,UAAU,cAAhB,UACEO,EAAc,GAAd,WAAuBA,GAAgBA,MAI7C,kBAAC,EAAD,CACEX,MAAO0B,KAAK1B,MACZF,MAAO4B,KAAK5B,MACZC,cAAeA,EACfE,KAAMyB,KAAKzB,Y,GAnGD0B,IAAMC,W,kBELpBC,G,OAAkB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAAST,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACvC,OACE,yBAAKlB,UAAU,oBACb,kBAAC,IAAD,CAAUC,KAAK,SAASyB,QAASA,IACjC,uBAAG1B,UAAU,iBAAb,QACQkB,EADR,gBAC0BD,EAD1B,eAONQ,EAAgBtB,aAAe,CAC7BuB,QAAS,EACTT,IAAK,EACLC,IAAK,GASQO,IC3BAA,ED2BAA,E,oCEzBTE,EAAc,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SACzC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,KAAM,IACT,kBAAC,IAAD,CACEd,IAAK,EACLY,IAAKA,EACLhC,SAAUiC,EACVH,MAAwB,kBAAVA,EAAqBA,EAAQ,EAC3CK,SAAU,SAAAhB,GAAG,OAAIY,EAAOZ,OAG5B,kBAAC,IAAD,CAAKe,KAAM,GACT,kBAAC,IAAD,CACEd,IAAK,EACLY,IAAKA,EACLhC,SAAUiC,EACVG,MAAO,CAAEC,WAAY,IACrBP,MAAwB,kBAAVA,EAAqBA,EAAQ,EAC3CK,SAAU,SAAAf,GAAG,OAAIW,EAAOX,SAOlCS,EAAYxB,aAAe,CACzByB,MAAO,EACPE,IAAK,IACLD,OAAQ,aACRE,UAAU,GAUGJ,IC1CAA,ED0CAA,EEnCTvB,G,OAAe,CACnBa,IAAK,EACLC,IAAK,EACLkB,OAAQ,EACRC,OAAQ,EACRC,gBAAiB,EACjBZ,QAAS,EACTK,UAAU,IAGRvB,EAAU,KCjBC+B,E,YDmBb,aAAe,IAAD,8BACZ,+CAQFC,UAAY,SAAAZ,GACV,EAAKT,SAAS,CACZD,IAAKuB,OAAOb,GACZQ,OAAQK,OAAOb,MAZL,EAgBdc,UAAY,SAAAd,GACV,EAAKT,SAAS,CACZF,IAAKwB,OAAOb,GACZS,OAAQI,OAAOb,MAnBL,EAuBde,WAAa,WAAO,IAAD,EACU,EAAK/B,MAAxBwB,EADS,EACTA,OAAQC,EADC,EACDA,OAChB,GAAe,IAAXD,GAA2B,IAAXC,EAWpB,OALA,EAAKlB,SAAS,CACZY,UAAU,EACVO,gBAAiBD,EAAkB,GAATD,EAC1BzC,eAAe,IAEV,EAAKiD,aATRC,IAAQC,QAAQ,sBA3BR,EAuCdF,WAAa,WACXpC,EAAUG,YAAW,WAAO,IAAD,EACa,EAAKC,MAAnCK,EADiB,EACjBA,IAAKC,EADY,EACZA,IAAKoB,EADO,EACPA,gBACdS,EAAS9B,EAAM,EACf+B,EAAS9B,EACP+B,EAAMX,GAAmBS,EAAkB,GAATC,GACxC,EAAK7B,SAAS,CACZO,QAASX,KAAKC,MAAOiC,EAAMX,EAAmB,OAGpC,IAARrB,GAAqB,IAARC,IACf8B,GAAU,EACVD,EAAS,IAGX,EAAK5B,SAAS,CACZF,IAAK8B,EACL7B,IAAK8B,IAEP,EAAKJ,eACJ,KApBc,MAqBI,EAAKhC,MAAlBK,EArBS,EAqBTA,IAAKC,EArBI,EAqBJA,IACD,IAARD,GAAqB,IAARC,IACfgC,SAASC,eAAe,OAAOC,OAC/B/B,aAAab,GACb,EAAKW,SAAS,CACZxB,eAAe,EACfG,UAAU,MAlEF,EAuEduD,UAAY,WACVhC,aAAab,GACb,EAAKW,SAAS,CACZxB,eAAe,KA1EL,EA8Ed2D,WAAa,WAAO,IACV3D,EAAkB,EAAKiB,MAAvBjB,cACR0B,aAAab,GACRb,GACH,EAAKwB,SAAL,eACKf,IAGP,EAAKe,SAAS,CACZxB,eAAe,EACfG,UAAU,KAtFZ,EAAKc,MAAL,eACKR,EADL,CAEET,eAAe,EACfG,UAAU,IALA,E,sEA4FJ,IAAD,EAC0DwB,KAAKV,MAA9DM,EADD,EACCA,IAAKD,EADN,EACMA,IAAKc,EADX,EACWA,SAAUL,EADrB,EACqBA,QAAS/B,EAD9B,EAC8BA,cAAeG,EAD7C,EAC6CA,SAC9CyD,EACJ,oCACE,6BACE,wCACA,kBAAC,EAAD,CAAa3B,MAAOV,EAAKW,OAAQP,KAAKkB,UAAWV,IAAK,IAAKC,SAAUA,KAEvE,6BACE,yCACA,kBAAC,EAAD,CACEH,MAAOX,EACPY,OAAQP,KAAKoB,UACbZ,IAAa,MAARZ,EAAc,EAAI,GACvBa,SAAUA,MAMZyB,EACJ,kBAAC,EAAD,CACE9B,QAASA,EACTR,IAAKA,EACLD,IAAKA,EACLnB,SAAUH,EACV2D,WAAYhC,KAAKgC,aAIfG,EAAO1B,EAAWyB,EAAkBD,EAE1C,OACE,yBAAKvD,UAAU,oBACb,yBAAKA,UAAU,SAASyD,GACxB,2BAAOC,GAAG,OACR,4BAAQC,IAAI,2DAA2D1D,KAAK,cAC5E,2BAAO0D,IAAI,kBAAkBC,KAAK,WAAWC,QAAQ,KAAKC,MAAM,sBAElE,6BACE,kBAAC,EAAD,CACElE,MAAO0B,KAAKgC,WACZ5D,MAAO4B,KAAKqB,WACZ9C,KAAMyB,KAAK+B,UACX1D,cAAeA,EACfG,SAAUA,U,GA1IEyB,IAAMC,WElBfuC,ECMH,WAAO,IACTC,EAAYC,IAAZD,QACR,OACE,kBAAC,IAAD,CAAME,iBAAiB,KACrB,kBAACF,EAAD,CAASG,IAAI,QAAQC,IAAI,KACvB,kBAAC,EAAD,OAEF,kBAACJ,EAAD,CAASG,IAAI,WAAWC,IAAI,KAC1B,kBAAC,EAAD,SCdOC,G,OCGH,WACV,OACE,yBAAKrE,UAAU,kBACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,UCLRsE,IAASC,OAAO,kBAAC,EAAD,MAASrB,SAASC,eAAe,W","file":"static/js/main.f9dde4eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './Control.css';\r\n\r\nconst Control = props => {\r\n  const { start, startDisabled, reset, stop, disabled } = props;\r\n  const func = !startDisabled ? start : stop;\r\n  return (\r\n    <div className=\"wrapper-control\">\r\n      <Button\r\n        type={startDisabled ? 'danger' : 'primary'}\r\n        onClick={() => func()}\r\n        disabled={disabled}\r\n      >\r\n        {startDisabled ? 'Stop' : 'Start'}\r\n      </Button>\r\n      <Button className=\"btn-reset\" onClick={reset}>\r\n        Reset\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nControl.defaultProps = {\r\n  start: () => {},\r\n  startDisabled: false,\r\n  reset: () => {},\r\n  stop: () => {},\r\n  disabled: false,\r\n};\r\n\r\nControl.propTypes = {\r\n  start: PropTypes.func,\r\n  startDisabled: PropTypes.bool,\r\n  reset: PropTypes.func,\r\n  stop: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Control;\r\n","import Control from './Control';\n\nexport default Control;\n","import React from 'react';\r\nimport Control from '../Control';\r\nimport './Timer.css';\r\n\r\nconst initialState = {\r\n  minutes: 0,\r\n  seconds: 0,\r\n  miliseconds: 0,\r\n};\r\n\r\nlet timerId = null;\r\nclass Timer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stopwatch: {\r\n        ...initialState,\r\n      },\r\n      control: {\r\n        startDisabled: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  start = () => {\r\n    this.updateTime();\r\n  };\r\n\r\n  updateTime = () => {\r\n    timerId = setTimeout(() => {\r\n      const {\r\n        stopwatch: { miliseconds, seconds, minutes },\r\n      } = this.state;\r\n      let mil = Math.floor(miliseconds + 6.4);\r\n      let sec = seconds;\r\n      let min = minutes;\r\n\r\n      if (miliseconds >= 90) {\r\n        sec = seconds + 1;\r\n        mil = 0;\r\n      }\r\n\r\n      if (seconds === 60) {\r\n        min = minutes + 1;\r\n        sec = 0;\r\n      }\r\n      this.setState({\r\n        stopwatch: {\r\n          seconds: sec,\r\n          miliseconds: mil,\r\n          minutes: min,\r\n        },\r\n      });\r\n      this.updateTime();\r\n    }, 55);\r\n    this.setState({\r\n      control: {\r\n        startDisabled: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  stop = () => {\r\n    clearTimeout(timerId);\r\n    this.setState({\r\n      control: {\r\n        startDisabled: false,\r\n      },\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    const {\r\n      control: { startDisabled },\r\n    } = this.state;\r\n    clearTimeout(timerId);\r\n    if (!startDisabled) {\r\n      this.setState({\r\n        stopwatch: {\r\n          ...initialState,\r\n        },\r\n      });\r\n    }\r\n    this.setState({\r\n      control: {\r\n        startDisabled: false,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      stopwatch: { seconds, miliseconds, minutes },\r\n      control: { startDisabled },\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"timer-container\">\r\n        <div className=\"timer-wrapper\">\r\n          <p className=\"timer-clock\">\r\n            {`${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}.`}\r\n            <span className=\"timer-msec\">{`${\r\n              miliseconds < 10 ? `0${miliseconds}` : miliseconds\r\n            }`}</span>\r\n          </p>\r\n        </div>\r\n        <Control\r\n          reset={this.reset}\r\n          start={this.start}\r\n          startDisabled={startDisabled}\r\n          stop={this.stop}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import Timer from './Timer';\n\nexport default Timer;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Progress } from 'antd';\r\n\r\nimport './Progress.css';\r\n\r\nconst ProgressWrapper = ({ percent, sec, min }) => {\r\n  return (\r\n    <div className=\"progress-wrapper\">\r\n      <Progress type=\"circle\" percent={percent} />\r\n      <p className=\"progress-time\">\r\n        Left {min} minutes and {sec} seconds\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProgressWrapper.defaultProps = {\r\n  percent: 0,\r\n  sec: 0,\r\n  min: 0,\r\n};\r\n\r\nProgressWrapper.propTypes = {\r\n  percent: PropTypes.number,\r\n  min: PropTypes.number,\r\n  sec: PropTypes.number,\r\n};\r\n\r\nexport default ProgressWrapper;\r\n","import ProgressWrapper from './Progress';\n\nexport default ProgressWrapper;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Slider, InputNumber, Row, Col } from 'antd';\r\n\r\nconst IntegerStep = ({ value, change, max, progress }) => {\r\n  return (\r\n    <Row>\r\n      <Col span={16}>\r\n        <Slider\r\n          min={0}\r\n          max={max}\r\n          disabled={progress}\r\n          value={typeof value === 'number' ? value : 0}\r\n          onChange={sec => change(sec)}\r\n        />\r\n      </Col>\r\n      <Col span={4}>\r\n        <InputNumber\r\n          min={0}\r\n          max={max}\r\n          disabled={progress}\r\n          style={{ marginLeft: 16 }}\r\n          value={typeof value === 'number' ? value : 0}\r\n          onChange={min => change(min)}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nIntegerStep.defaultProps = {\r\n  value: 0,\r\n  max: 720,\r\n  change: () => {},\r\n  progress: false,\r\n};\r\n\r\nIntegerStep.propTypes = {\r\n  value: PropTypes.number,\r\n  max: PropTypes.number,\r\n  change: PropTypes.func,\r\n  progress: PropTypes.bool,\r\n};\r\n\r\nexport default IntegerStep;\r\n","import IntegerStep from './IntegerStep';\n\nexport default IntegerStep;\n","import React from 'react';\r\nimport { message } from 'antd';\r\n\r\nimport Control from '../Control';\r\nimport ProgressWrapper from '../Progress';\r\nimport IntegerStep from '../IntegerStep';\r\n\r\nimport './Countdown.css';\r\n\r\nconst initialState = {\r\n  sec: 0,\r\n  min: 0,\r\n  oldMin: 0,\r\n  oldSec: 0,\r\n  allTimeInSecind: 0,\r\n  percent: 0,\r\n  progress: false,\r\n};\r\n\r\nlet timerId = null;\r\nclass Countdown extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      ...initialState,\r\n      startDisabled: false,\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  changeMin = value => {\r\n    this.setState({\r\n      min: Number(value),\r\n      oldMin: Number(value),\r\n    });\r\n  };\r\n\r\n  changeSec = value => {\r\n    this.setState({\r\n      sec: Number(value),\r\n      oldSec: Number(value),\r\n    });\r\n  };\r\n\r\n  startTimer = () => {\r\n    const { oldMin, oldSec } = this.state;\r\n    if (oldMin === 0 && oldSec === 0) {\r\n      const warning = () => {\r\n        message.warning('Enter time timer!');\r\n      };\r\n      return warning();\r\n    }\r\n    this.setState({\r\n      progress: true,\r\n      allTimeInSecind: oldSec + oldMin * 60,\r\n      startDisabled: true,\r\n    });\r\n    return this.timeRanges();\r\n  };\r\n\r\n  timeRanges = () => {\r\n    timerId = setTimeout(() => {\r\n      const { sec, min, allTimeInSecind } = this.state;\r\n      let second = sec - 1;\r\n      let minuts = min;\r\n      const num = allTimeInSecind - (second + minuts * 60);\r\n      this.setState({\r\n        percent: Math.floor((num / allTimeInSecind) * 100),\r\n      });\r\n\r\n      if (sec === 0 && min !== 0) {\r\n        minuts -= 1;\r\n        second = 59;\r\n      }\r\n\r\n      this.setState({\r\n        sec: second,\r\n        min: minuts,\r\n      });\r\n      this.timeRanges();\r\n    }, 1000);\r\n    const { sec, min } = this.state;\r\n    if (sec === 0 && min === 0) {\r\n      document.getElementById('end').play();\r\n      clearTimeout(timerId);\r\n      this.setState({\r\n        startDisabled: false,\r\n        disabled: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  stopTimer = () => {\r\n    clearTimeout(timerId);\r\n    this.setState({\r\n      startDisabled: false,\r\n    });\r\n  };\r\n\r\n  resetTimer = () => {\r\n    const { startDisabled } = this.state;\r\n    clearTimeout(timerId);\r\n    if (!startDisabled) {\r\n      this.setState({\r\n        ...initialState,\r\n      });\r\n    }\r\n    this.setState({\r\n      startDisabled: false,\r\n      disabled: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { min, sec, progress, percent, startDisabled, disabled } = this.state;\r\n    const inputs = (\r\n      <>\r\n        <div>\r\n          <span>minuts</span>\r\n          <IntegerStep value={min} change={this.changeMin} max={720} progress={progress} />\r\n        </div>\r\n        <div>\r\n          <span>seconds</span>\r\n          <IntegerStep\r\n            value={sec}\r\n            change={this.changeSec}\r\n            max={min === 720 ? 0 : 60}\r\n            progress={progress}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n\r\n    const progressWrapper = (\r\n      <ProgressWrapper\r\n        percent={percent}\r\n        min={min}\r\n        sec={sec}\r\n        disabled={startDisabled}\r\n        resetTimer={this.resetTimer}\r\n      />\r\n    );\r\n\r\n    const node = progress ? progressWrapper : inputs;\r\n\r\n    return (\r\n      <div className=\"wrapper-progress\">\r\n        <div className=\"slide\">{node}</div>\r\n        <audio id=\"end\">\r\n          <source src=\"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\" type=\"audio/mp3\" />\r\n          <track src=\"captions_en.vtt\" kind=\"captions\" srcLang=\"en\" label=\"english_captions\" />\r\n        </audio>\r\n        <div>\r\n          <Control\r\n            reset={this.resetTimer}\r\n            start={this.startTimer}\r\n            stop={this.stopTimer}\r\n            startDisabled={startDisabled}\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countdown;\r\n","import Countdown from './Countdown';\n\nexport default Countdown;\n","import Tab from './Tabs';\n\nexport default Tab;\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\n\r\nimport Timer from '../Timer';\r\nimport Countdown from '../Countdown';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nconst Tab = () => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs defaultActiveKey=\"1\">\r\n      <TabPane tab=\"Timer\" key=\"1\">\r\n        <Timer />\r\n      </TabPane>\r\n      <TabPane tab=\"Cuntdown\" key=\"2\">\r\n        <Countdown />\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport Tab from '../Tabs';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"main-container\">\n      <div className=\"main-wrapper\">\n        <Tab />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["img/Shape.svg","img/Logo.svg","components/FilterItem/styled-components/styled-components.jsx","components/FilterItem/index.js","components/FilterItem/FilterItem.jsx","components/Filter/styled-component/styled-component.jsx","components/Filter/index.js","components/Filter/Filter.jsx","components/Tabs/styled-components/styled-components.jsx","components/Tabs/index.js","components/Tabs/Tabs.jsx","helper/formattingPrices.js","helper/transferFormatter.js","helper/calculationOfArrivalTime.js","components/TicketSegment/styled-components/styled-components.jsx","components/TicketSegment/index.js","components/TicketSegment/TicketSegment.jsx","components/Tickets/styled-components/styled-components.jsx","components/Tickets/index.js","components/Tickets/Tickets.jsx","components/Loading/index.js","components/Loading/loading.jsx","helper/ticketSorting.js","services/services.js","components/App/styled-components/styled-componets.jsx","components/App/index.jsx","components/App/App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Box","styled","span","FilterLabel","label","shape","FilterItem","checked","index","id","transferChange","type","onChange","className","FilterTitle","div","FilterWrapper","FilterList","ul","Filter","filterItems","map","key","TabsButton","button","props","active","Tabs","isActive","target","setState","name","state","sortAllTickets","this","onClick","e","React","Component","formattingPrices","price","toString","replace","transferFormatter","stops","postfix","length","calculationOfArrivalTime","data","hours","min","hour","getHours","allMinetes","getMinutes","minut","TicketPreviewSegment","TicketPreviewLabel","p","TicketPreviewInput","TicketPreviewFlight","TicketSegment","segments","getNormalTime","h","origin","destination","date","duration","transplant","reduce","acc","item","Math","floor","minutes","dateDeparture","Date","departureTime","TicketWrapper","TicketHeader","TicketCarrier","TicketPrice","Tickets","tickets","count","carrier","src","width","height","alt","Loading","ticketSorting","array","sort","prev","next","instance","axios","create","baseURL","API_URLS","Services","getTicketsId","get","getAllTickets","GlobalStyle","createGlobalStyle","AppWrapper","App","initialStateLabel","changeTransferHandler","forEach","filter","getTicketsInState","ticketId","then","res","stop","ticketsAll","loading","catch","filterAllTickets","ticket","searchId","logo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,8iDCI3C,IAAMC,EAAMC,IAAOC,KAAV,KASHC,EAAcF,IAAOG,MAAV,IAwCWC,KCnDbC,ECEI,SAAC,GAAmD,IAAjDF,EAAgD,EAAhDA,MAAOG,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eAS/C,OACE,6BACE,kBAACP,EAAD,KACE,2BACEQ,KAAK,WACLC,SAAU,WACRF,EAAeF,EAAOC,IAExBF,QAASA,IAEX,kBAACP,EAAD,CAAKa,UAAU,aACdT,K,gkBCtBT,IAAMU,EAAcb,IAAOc,IAAV,KAWXC,EAAgBf,IAAOc,IAAV,KAObE,EAAahB,IAAOiB,GAAV,KClBDC,ECIA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaV,EAAqB,EAArBA,eAK7B,OACE,kBAACM,EAAD,CAAeH,UAAU,wBACvB,kBAACC,EAAD,4HACA,6BACE,6BACE,kBAACG,EAAD,KACGG,EAAYC,KAAI,WAAyBb,GAAzB,IAAGJ,EAAH,EAAGA,MAAOK,EAAV,EAAUA,GAAIF,EAAd,EAAcA,QAAd,OACf,wBAAIe,IAAKb,GACP,kBAAC,EAAD,CACEL,MAAOA,EACPG,QAASA,EACTC,MAAOA,EACPC,GAAIA,EACJC,eAAgBA,a,4YCtBlC,IAkBea,EAlBItB,IAAOuB,OAAV,KAOA,SAAAC,GAAK,OAAKA,EAAMC,OAAS,UAAY,UAC1C,SAAAD,GAAK,OAAKA,EAAMC,OAAS,OAAS,aCR9BC,E,YCIb,aAAe,IAAD,8BACZ,+CAMFC,SAAW,YAAiB,IAAdC,EAAa,EAAbA,OACZ,EAAKC,SAAS,CAAEJ,OAAQG,EAAOE,QAN/B,EAAKC,MAAQ,CACXN,OAAQ,MAHE,E,sEAWJ,IAAD,OACCO,EAAmBC,KAAKT,MAAxBQ,eACAP,EAAWQ,KAAKF,MAAhBN,OACR,OACE,yBAAKb,UAAU,gBACb,kBAAC,EAAD,CACEkB,KAAK,WACLI,QAAS,SAAAC,GACPH,EAAeG,GACf,EAAKR,SAASQ,IAEhBV,OAAmB,aAAXA,GANV,6EAUA,kBAAC,EAAD,CACEK,KAAK,UACLI,QAAS,SAAAC,GACPH,EAAeG,GACf,EAAKR,SAASQ,IAEhBV,OAAmB,YAAXA,GANV,kF,GA3BWW,IAAMC,WCHVC,EAFU,SAAAC,GAAK,OAC5BA,EAAMC,WAAWC,QAAQ,kCAAzB,QCaaC,EAdW,SAAAC,GACxB,IAAIC,EAUJ,OATqB,IAAjBD,EAAME,SACRD,EAAO,UAAMD,EAAME,OAAZ,4DAELF,EAAME,OAAS,IACjBD,EAAO,UAAMD,EAAME,OAAZ,4DAEY,IAAjBF,EAAME,SACRD,EAAU,6EAELA,GCSME,EApBkB,SAACC,EAAMC,EAAOC,GAC7C,IAAIC,EAAOH,EAAKI,WAAaH,EACvBI,EAAaL,EAAKM,aAAeJ,EACnCK,EAAQ,EAcZ,OAbIJ,GAAQ,KACVA,GAAQ,KACI,KACVA,GAAQ,IAGRE,GAAc,IAChBE,EAAQF,EAAa,GACrBF,GAAQ,GAERI,EAAQF,EAGJ,GAAN,OAAUF,EAAO,GAAP,WAAgBA,GAASA,EAAnC,YAA2CI,EAAQ,GAAR,WAAiBA,GAAUA,I,uqBCfxE,IAAMC,EAAuBvD,IAAOc,IAAV,KASpB0C,EAAqBxD,IAAOyD,EAAV,KASlBC,EAAqB1D,IAAOyD,EAAV,KAQlBE,EAAsB3D,IAAOc,IAAV,KC1BV8C,ECUO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAKjBC,EAAgB,SAACC,EAAGd,GAAJ,gBAAec,EAAf,YAAoBd,EAAM,GAAN,WAAeA,GAAQA,IAEjE,OAAOY,EAASzC,KAAI,YAAqD,IAAlD4C,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUxB,EAAY,EAAZA,MACpDyB,EAAazB,EAAM0B,QAAO,SAACC,EAAKC,GAAN,gBAAkBA,EAAlB,YAA0BD,KAAO,IAC3DtB,EAAQwB,KAAKC,MAAMN,EAAW,IAC9BO,EAAUP,EAAmB,GAARnB,EACrB2B,EAAgB,IAAIC,KAAKV,GAEzBW,EAAgBf,EAAca,EAAcxB,WAAYwB,EAActB,cAC5E,OACE,kBAACE,EAAD,CAAsBlC,IAAK6C,GACzB,kBAACP,EAAD,KACE,kBAACH,EAAD,eAAwBQ,EAAxB,cAAoCC,IACpC,kBAACP,EAAD,eAAwBmB,EAAxB,cAA2C/B,EACzC6B,EACA3B,EACA0B,MAGJ,kBAACf,EAAD,KACE,kBAACH,EAAD,wCACA,kBAACE,EAAD,KAAqBI,EAAcd,EAAO0B,GAA1C,WAEF,kBAACf,EAAD,KACE,kBAACH,EAAD,KAAqBd,EAAkBC,IACvC,kBAACe,EAAD,KAAqBU,S,kkBCxCxB,IAAMU,EAAgB9E,IAAOc,IAAV,KAQbiE,EAAe/E,IAAOc,IAAV,KAKZkE,EAAgBhF,IAAOc,IAAV,KAIbmE,EAAcjF,IAAOc,IAAV,KCjBToE,ECUC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,EAAQ,EACZ,OACE,oCACGD,EAAQ/D,KAAI,YAAmC,IAAhCmB,EAA+B,EAA/BA,MAAO8C,EAAwB,EAAxBA,QAASxB,EAAe,EAAfA,SAE9B,OADAuB,GAAS,GACG,EACH,KAGP,kBAACN,EAAD,CAAezD,IAAK+D,EAAQ,GAC1B,kBAACL,EAAD,KACE,kBAACE,EAAD,KACE,wCAAU3C,EAAiBC,GAA3B,aAEF,yBAAK3B,UAAU,4BACb,kBAACoE,EAAD,KACE,yBACEpE,UAAU,sBACV0E,IAAG,8BAAyBD,EAAzB,QACHE,MAAM,MACNC,OAAO,KACPC,IAAI,2HAKZ,kBAAC,EAAD,CAAe5B,SAAUA,UCrCtB6B,G,MCEC,WACd,OACE,yBAAK9E,UAAU,yCACb,yBAAKA,UAAU,oBACb,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,kCCJO+E,GAfO,SAACC,GAA8B,IAAvB9D,EAAsB,uDAAf,WACnC,OAAO8D,EAAMC,MAAK,SAACC,EAAMC,GACvB,MAAa,aAATjE,EACKgE,EAAKvD,MAAQwD,EAAKxD,MAEd,YAATT,EAEAgE,EAAKjC,SAASQ,QAAO,SAACC,EAAD,YAAQH,SAA0BG,IAAK,GAC5DyB,EAAKlC,SAASQ,QAAO,SAACC,EAAD,YAAQH,SAA0BG,IAAK,GAGzD,S,SCTL0B,G,QAAWC,EAAMC,OAAO,CAC5BC,QAAS,0CAGLC,GACI,SADJA,GAEK,oBAGUC,G,oxBAAAA,GACZC,aAAe,kBAAMN,GAASO,IAAIH,KADtBC,GAGZG,cAAgB,SAAAhG,GAAE,OAAIwF,GAASO,IAAT,UAAgBH,IAAhB,OAAmC5F,KCZ3D,IAAMiG,GAAcC,YAAH,MAWXC,GAAa3G,IAAOc,IAAV,M,oBCXR8F,G,YCmBb,aAAe,IAAD,8BACZ,+CATFC,kBAAoB,CAClB,CAAE1G,MAAO,qBAAOK,GAAI,EAAGF,SAAS,GAChC,CAAEH,MAAO,4EAAiBK,GAAI,EAAGF,SAAS,GAC1C,CAAEH,MAAO,qDAAcK,GAAI,EAAGF,SAAS,GACvC,CAAEH,MAAO,2DAAeK,GAAI,EAAGF,SAAS,GACxC,CAAEH,MAAO,2DAAeK,GAAI,EAAGF,SAAS,IAG5B,EAiBdwG,sBAAwB,SAACvG,EAAOC,GAAQ,IAC9BW,EAAgB,EAAKY,MAArBZ,YACRA,EAAY4F,SAAQ,SAAAxC,GACdpD,EAAY,GAAGb,SACjB,EAAKuB,SAAS,CACZV,YAAcA,EAAYoD,EAAK/D,IAAIF,SAAU,IAG7CiE,EAAK/D,KAAOD,GACd,EAAKsB,SAAS,CACZV,YAAcA,EAAYoD,EAAK/D,IAAIF,SAAWa,EAAYoD,EAAK/D,IAAIF,UAGlEa,EAAY,GAAGb,SAAkB,IAAPE,GAC7B,EAAKqB,SAAS,CACZV,YAAcA,EAAYoD,EAAK/D,IAAIF,SAAU,IAG5Ca,EAAYoD,EAAK/D,IAAIF,SACxB,EAAKuB,SAAS,CACZV,YAAcA,EAAY,GAAGb,SAAU,OAInBa,EAAY6F,QAAO,qBAAG1G,WAC1BuC,SAAW1B,EAAY0B,OAAS,GACpD,EAAKhB,SAAS,CACZV,YAAcA,EAAY,GAAGb,SAAU,IAG3C,EAAKuB,SAAS,CAAEV,iBA/CJ,EAkDd8F,kBAAoB,WAAO,IACjBC,EAAa,EAAKnF,MAAlBmF,SACRb,GAASG,cAAcU,GACpBC,MAAK,SAAAC,GACJ,IAAIA,EAAIrE,KAAKsE,KAAb,CADW,IAIHlC,EAAYiC,EAAIrE,KAAhBoC,QACAmC,EAAe,EAAKvF,MAApBuF,WACR,EAAKzF,SAAS,CACZyF,WAAW,GAAD,mBAAMA,GAAN,YAAqBnC,IAC/BoC,SAAS,IAEX,EAAKN,wBAENO,OAAM,kBAAM,EAAKP,wBAjER,EAoEdQ,iBAAmB,WAAO,IAAD,EACa,EAAK1F,MAAjCuF,EADe,EACfA,WAAYnG,EADG,EACHA,YAIpB,OAH4BmG,EAAWN,QACrC,SAAAU,GAAM,OAAIvG,EAAYuG,EAAO7D,SAAS,GAAGlB,MAAME,OAAS,GAAGvC,YAvEjD,EA4Ed0B,eAAiB,YAA2B,IAAdF,EAAa,EAAvBF,OAAUE,KACpBwF,EAAe,EAAKvF,MAApBuF,WACFnC,EAAUQ,GAAc2B,EAAYxF,GAC1C,EAAKD,SAAS,CAAEyF,WAAYnC,KA7E5B,EAAKpD,MAAQ,CACXuF,WAAY,GACZJ,SAAU,KACVK,SAAS,EACTpG,YAAa,EAAK0F,mBANR,E,iFAUO,IAAD,OAClBR,GAASC,eAAea,MAAK,YAAe,IAAZpE,EAAW,EAAXA,KAC9B,EAAKlB,SAAS,CAAEqF,SAAUnE,EAAK4E,WAC/B,EAAKV,yB,+BAqEC,IAAD,EAC0BhF,KAAKF,MAA9BwF,EADD,EACCA,QAASpG,EADV,EACUA,YACjB,OACE,kBAACwF,GAAD,KACE,kBAACF,GAAD,MACA,yBAAK7F,UAAU,gBACb,yBAAK0E,IAAKsC,KAAMnC,IAAI,gDAEtB,yBAAK7E,UAAU,WACb,kBAAC,EAAD,CAAQH,eAAgBwB,KAAK6E,sBAAuB3F,YAAaA,KAEnE,yBAAKP,UAAU,QACb,kBAAC,EAAD,CAAMoB,eAAgBC,KAAKD,iBAC1BuF,EAAU,kBAAC,EAAD,MAAc,kBAAC,EAAD,CAASpC,QAASlD,KAAKwF,2B,GAxGxCrF,IAAMC,WCAJwF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrB,MAAK,SAAAsB,GACJA,EAAaC,gBAEdlB,OAAM,SAAAmB,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ba4a5264.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shape.68ca57dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.96990a1b.svg\";","import styled from 'styled-components';\r\n\r\nimport shape from '../../../img/Shape.svg';\r\n\r\nconst Box = styled.span`\r\n  display: inline-block;\r\n  left: 0;\r\n  margin-right: 10px;\r\n  position: relative;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nconst FilterLabel = styled.label`\r\n  text-align: left;\r\n  cursor: pointer;\r\n  height: 40px;\r\n  padding: 0 20px;\r\n  font-weight: normal;\r\n  font-size: 13px;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    background: #f1fcff;\r\n  }\r\n  &:focus {\r\n    background: #f1fcff;\r\n    .checkbox {\r\n      &::after {\r\n        border: 1px solid red;\r\n      }\r\n    }\r\n  }\r\n  &:active {\r\n    background: #f1fcff;\r\n  }\r\n\r\n  input {\r\n    opacity: 0;\r\n    position: absolute;\r\n    z-index: -1;\r\n    &:checked {\r\n      + .checkbox {\r\n        &::before {\r\n          content: '';\r\n          position: absolute;\r\n          background-position: center center;\r\n          width: 12px;\r\n          height: 8px;\r\n          top: 6px;\r\n          left: 5px;\r\n          background: url(${shape}) no-repeat;\r\n        }\r\n        &::after {\r\n          border: 1px solid #2196f3;\r\n        }\r\n      }\r\n    }\r\n    + .checkbox::after {\r\n      content: '';\r\n      width: 20px;\r\n      height: 20px;\r\n      position: absolute;\r\n      border: 1px solid #9abbce;\r\n      box-sizing: border-box;\r\n      border-radius: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FilterLabel, Box };\r\n","import FilterItem from './FilterItem';\r\n\r\nexport default FilterItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FilterLabel, Box } from './styled-components/styled-components';\r\n\r\nconst FilterItem = ({ label, checked, index, id, transferChange }) => {\r\n  FilterItem.propTypes = {\r\n    transferChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FilterLabel>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={() => {\r\n            transferChange(index, id);\r\n          }}\r\n          checked={checked}\r\n        />\r\n        <Box className=\"checkbox\" />\r\n        {label}\r\n      </FilterLabel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterItem;\r\n","import styled from 'styled-components';\r\n\r\nconst FilterTitle = styled.div`\r\n  font-style: normal;\r\n  margin: 15px 0 0 20px;\r\n  text-align: left;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n  background: #ffffff;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  padding: 5px 0;\r\n`;\r\n\r\nconst FilterList = styled.ul`\r\n  padding: 0;\r\n  margin: 10px 0 5px 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport { FilterTitle, FilterList, FilterWrapper };\r\n","import Filter from './Filter';\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from '../FilterItem';\r\n\r\nimport { FilterWrapper, FilterTitle, FilterList } from './styled-component/styled-component';\r\n\r\nconst Filter = ({ filterItems, transferChange }) => {\r\n  Filter.propTypes = {\r\n    transferChange: PropTypes.func.isRequired,\r\n    filterItems: PropTypes.instanceOf(Array).isRequired,\r\n  };\r\n  return (\r\n    <FilterWrapper className=\"filters__item filter\">\r\n      <FilterTitle>Количество пересадок</FilterTitle>\r\n      <div>\r\n        <div>\r\n          <FilterList>\r\n            {filterItems.map(({ label, id, checked }, index) => (\r\n              <li key={id}>\r\n                <FilterItem\r\n                  label={label}\r\n                  checked={checked}\r\n                  index={index}\r\n                  id={id}\r\n                  transferChange={transferChange}\r\n                />\r\n              </li>\r\n            ))}\r\n          </FilterList>\r\n        </div>\r\n      </div>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\nconst TabsButton = styled.button`\r\n  width: 50%;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-size: 15px;\r\n  height: 50px;\r\n  left: calc(50% - 251px / 2 + 252.5px);\r\n  background: ${props => (props.active ? '#2196F3' : '#fff')};\r\n  color: ${props => (props.active ? '#fff' : '#4A4A4A')};\r\n  border: 1px solid #dfe5ec;\r\n  &:nth-child(1) {\r\n    border-radius: 10px 0 0 10px;\r\n  }\r\n  &:nth-child(2) {\r\n    border-radius: 0 10px 10px 0;\r\n  }\r\n`;\r\n\r\nexport default TabsButton;\r\n","import Tabs from './Tabs';\r\n\r\nexport default Tabs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TabsButton from './styled-components/styled-components';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      active: null,\r\n    };\r\n  }\r\n\r\n  isActive = ({ target }) => {\r\n    this.setState({ active: target.name });\r\n  };\r\n\r\n  render() {\r\n    const { sortAllTickets } = this.props;\r\n    const { active } = this.state;\r\n    return (\r\n      <div className=\"tabs-wrapper\">\r\n        <TabsButton\r\n          name=\"cheapest\"\r\n          onClick={e => {\r\n            sortAllTickets(e);\r\n            this.isActive(e);\r\n          }}\r\n          active={active === 'cheapest'}\r\n        >\r\n          самый дешевый\r\n        </TabsButton>\r\n        <TabsButton\r\n          name=\"fastest\"\r\n          onClick={e => {\r\n            sortAllTickets(e);\r\n            this.isActive(e);\r\n          }}\r\n          active={active === 'fastest'}\r\n        >\r\n          самый быстрый\r\n        </TabsButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTabs.propTypes = {\r\n  sortAllTickets: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Tabs;\r\n","const formattingPrices = price =>\r\n  price.toString().replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, `$1 `);\r\nexport default formattingPrices;\r\n","const transferFormatter = stops => {\r\n  let postfix;\r\n  if (stops.length === 1) {\r\n    postfix = `${stops.length} пересадка`;\r\n  }\r\n  if (stops.length > 1) {\r\n    postfix = `${stops.length} пересадки`;\r\n  }\r\n  if (stops.length === 0) {\r\n    postfix = 'без пересадок';\r\n  }\r\n  return postfix;\r\n};\r\n\r\nexport default transferFormatter;\r\n","const calculationOfArrivalTime = (data, hours, min) => {\r\n  let hour = data.getHours() + hours;\r\n  const allMinetes = data.getMinutes() + min;\r\n  let minut = 0;\r\n  if (hour >= 24) {\r\n    hour -= 24;\r\n    if (hour >= 24) {\r\n      hour -= 24;\r\n    }\r\n  }\r\n  if (allMinetes >= 60) {\r\n    minut = allMinetes - 60;\r\n    hour += 1;\r\n  } else {\r\n    minut = allMinetes;\r\n  }\r\n\r\n  return `${hour < 10 ? `0${hour}` : hour}:${minut < 10 ? `0${minut}` : minut}`;\r\n};\r\n\r\nexport default calculationOfArrivalTime;\r\n","import styled from 'styled-components';\r\n\r\nconst TicketPreviewSegment = styled.div`\r\n  display: flex;\r\n  text-align: left;\r\n\r\n  &.ticket-preview__flight {\r\n    width: 33%;\r\n  }\r\n`;\r\n\r\nconst TicketPreviewLabel = styled.p`\r\n  color: #a0b0b9;\r\n  letter-spacing: 0.5px;\r\n  margin: 11px 0 0 0;\r\n  font-size: 12px;\r\n  line-height: 18px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst TicketPreviewInput = styled.p`\r\n  color: #4a4a4a;\r\n  margin: 0;\r\n  font-size: 14px;\r\n  line-height: 21px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst TicketPreviewFlight = styled.div`\r\n  width: 35%;\r\n\r\n  :nth-last-of-type(1) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport { TicketPreviewSegment, TicketPreviewLabel, TicketPreviewInput, TicketPreviewFlight };\r\n","import TicketSegment from './TicketSegment';\r\n\r\nexport default TicketSegment;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport transferFormatter from '../../helper/transferFormatter';\r\nimport calculationOfArrivalTime from '../../helper/calculationOfArrivalTime';\r\nimport {\r\n  TicketPreviewSegment,\r\n  TicketPreviewLabel,\r\n  TicketPreviewInput,\r\n  TicketPreviewFlight,\r\n} from './styled-components/styled-components';\r\n\r\nconst TicketSegment = ({ segments }) => {\r\n  TicketSegment.propTypes = {\r\n    segments: PropTypes.instanceOf(Array).isRequired,\r\n  };\r\n\r\n  const getNormalTime = (h, min) => `${h}:${min < 10 ? `0${min}` : min}`;\r\n\r\n  return segments.map(({ origin, destination, date, duration, stops }) => {\r\n    const transplant = stops.reduce((acc, item) => `${item} ${acc}`, '');\r\n    const hours = Math.floor(duration / 60);\r\n    const minutes = duration - hours * 60;\r\n    const dateDeparture = new Date(date);\r\n\r\n    const departureTime = getNormalTime(dateDeparture.getHours(), dateDeparture.getMinutes());\r\n    return (\r\n      <TicketPreviewSegment key={date}>\r\n        <TicketPreviewFlight>\r\n          <TicketPreviewLabel>{`${origin} - ${destination}`}</TicketPreviewLabel>\r\n          <TicketPreviewInput>{`${departureTime} - ${calculationOfArrivalTime(\r\n            dateDeparture,\r\n            hours,\r\n            minutes\r\n          )}`}</TicketPreviewInput>\r\n        </TicketPreviewFlight>\r\n        <TicketPreviewFlight>\r\n          <TicketPreviewLabel>В пути</TicketPreviewLabel>\r\n          <TicketPreviewInput>{getNormalTime(hours, minutes)}м</TicketPreviewInput>\r\n        </TicketPreviewFlight>\r\n        <TicketPreviewFlight>\r\n          <TicketPreviewLabel>{transferFormatter(stops)}</TicketPreviewLabel>\r\n          <TicketPreviewInput>{transplant}</TicketPreviewInput>\r\n        </TicketPreviewFlight>\r\n      </TicketPreviewSegment>\r\n    );\r\n  });\r\n};\r\nexport default TicketSegment;\r\n","import styled from 'styled-components';\r\n\r\nexport const TicketWrapper = styled.div`\r\n  background: #ffffff;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const TicketHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const TicketCarrier = styled.div`\r\n  margin: 0 30px 0 0;\r\n`;\r\n\r\nexport const TicketPrice = styled.div`\r\n  color: #2196f3;\r\n  margin: 7px 0 0 0px;\r\n  font-size: 24px;\r\n  line-height: 24px;\r\n`;\r\n","import Tickets from './Tickets';\r\n\r\nexport default Tickets;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport formattingPrices from '../../helper/formattingPrices';\r\nimport TicketSegment from '../TicketSegment';\r\nimport {\r\n  TicketWrapper,\r\n  TicketHeader,\r\n  TicketCarrier,\r\n  TicketPrice,\r\n} from './styled-components/styled-components';\r\n\r\nconst Tickets = ({ tickets }) => {\r\n  let count = 0;\r\n  return (\r\n    <>\r\n      {tickets.map(({ price, carrier, segments }) => {\r\n        count += 1;\r\n        if (count > 5) {\r\n          return null;\r\n        }\r\n        return (\r\n          <TicketWrapper key={count + 1}>\r\n            <TicketHeader>\r\n              <TicketPrice>\r\n                <span>{`${formattingPrices(price)} Р`}</span>\r\n              </TicketPrice>\r\n              <div className=\"ticket-preview__carriers\">\r\n                <TicketCarrier>\r\n                  <img\r\n                    className=\"ticket-carrier__img\"\r\n                    src={`//pics.avs.io/99/36/${carrier}.png`}\r\n                    width=\"100\"\r\n                    height=\"40\"\r\n                    alt=\"Логотип авиакомпании\"\r\n                  />\r\n                </TicketCarrier>\r\n              </div>\r\n            </TicketHeader>\r\n            <TicketSegment segments={segments} />\r\n          </TicketWrapper>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nTickets.propTypes = {\r\n  tickets: PropTypes.instanceOf(Array).isRequired,\r\n};\r\n\r\nexport default Tickets;\r\n","import Loading from './loading';\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-spinner-223z6fdkjge\">\r\n      <div className=\"ldio-vwhx2ilfl4e\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","const ticketSorting = (array, name = 'cheapest') => {\r\n  return array.sort((prev, next) => {\r\n    if (name === 'cheapest') {\r\n      return prev.price - next.price;\r\n    }\r\n    if (name === 'fastest') {\r\n      return (\r\n        prev.segments.reduce((acc, { duration }) => duration + acc, 0) -\r\n        next.segments.reduce((acc, { duration }) => duration + acc, 0)\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n};\r\n\r\nexport default ticketSorting;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://front-test.beta.aviasales.ru/',\r\n});\r\n\r\nconst API_URLS = {\r\n  SEARCH: 'search',\r\n  TICKETS: 'tickets?searchId=',\r\n};\r\n\r\nexport default class Services {\r\n  static getTicketsId = () => instance.get(API_URLS.SEARCH);\r\n\r\n  static getAllTickets = id => instance.get(`${API_URLS.TICKETS}${id}`);\r\n}\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: #E5E5E5;\r\n    font-family: 'Open Sans', sans-serif;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #4A4A4A;\r\n    line-height: 20px;\r\n  }\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  text-align: center;\r\n  background-color: #e5e5e5;\r\n  display: grid;\r\n  grid-template-columns: 232px 502px;\r\n  grid-gap: 30px 20px;\r\n  justify-content: center;\r\n  margin-top: 148px;\r\n  .header__logo {\r\n    grid-row: 1;\r\n    grid-column: 2 / 2;\r\n    display: flex;\r\n    margin-left: 83px;\r\n  }\r\n\r\n  .sidebar {\r\n    grid-row: 2 / 2;\r\n    grid-column: 1 / 2;\r\n  }\r\n\r\n  .main {\r\n    grid-row: 2 / 2;\r\n    grid-column: 2 / 2;\r\n  }\r\n`;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\n\nimport Filter from '../Filter';\nimport Tabs from '../Tabs';\nimport Tickets from '../Tickets';\nimport Loading from '../Loading';\nimport ticketSorting from '../../helper/ticketSorting';\nimport Services from '../../services/services';\nimport { GlobalStyle, AppWrapper } from './styled-components/styled-componets';\n\nimport logo from '../../img/Logo.svg';\n\nclass App extends React.Component {\n  initialStateLabel = [\n    { label: 'Все', id: 0, checked: true },\n    { label: 'Без пересадок', id: 1, checked: true },\n    { label: '1 персадка', id: 2, checked: true },\n    { label: '2 пересадки', id: 3, checked: true },\n    { label: '3 пересадки', id: 4, checked: true },\n  ];\n\n  constructor() {\n    super();\n    this.state = {\n      ticketsAll: [],\n      ticketId: null,\n      loading: true,\n      filterItems: this.initialStateLabel,\n    };\n  }\n\n  componentDidMount() {\n    Services.getTicketsId().then(({ data }) => {\n      this.setState({ ticketId: data.searchId });\n      this.getTicketsInState();\n    });\n  }\n\n  changeTransferHandler = (index, id) => {\n    const { filterItems } = this.state;\n    filterItems.forEach(item => {\n      if (filterItems[0].checked) {\n        this.setState({\n          filterItems: (filterItems[item.id].checked = true),\n        });\n      }\n      if (item.id === index) {\n        this.setState({\n          filterItems: (filterItems[item.id].checked = !filterItems[item.id].checked),\n        });\n      }\n      if (!filterItems[0].checked && id === 0) {\n        this.setState({\n          filterItems: (filterItems[item.id].checked = false),\n        });\n      }\n      if (!filterItems[item.id].checked) {\n        this.setState({\n          filterItems: (filterItems[0].checked = false),\n        });\n      }\n    });\n    const arrayCheckboxTrue = filterItems.filter(({ checked }) => checked);\n    if (arrayCheckboxTrue.length === filterItems.length - 1) {\n      this.setState({\n        filterItems: (filterItems[0].checked = true),\n      });\n    }\n    this.setState({ filterItems });\n  };\n\n  getTicketsInState = () => {\n    const { ticketId } = this.state;\n    Services.getAllTickets(ticketId)\n      .then(res => {\n        if (res.data.stop) {\n          return;\n        }\n        const { tickets } = res.data;\n        const { ticketsAll } = this.state;\n        this.setState({\n          ticketsAll: [...ticketsAll, ...tickets],\n          loading: false,\n        });\n        this.getTicketsInState();\n      })\n      .catch(() => this.getTicketsInState());\n  };\n\n  filterAllTickets = () => {\n    const { ticketsAll, filterItems } = this.state;\n    const filteredTicketsList = ticketsAll.filter(\n      ticket => filterItems[ticket.segments[0].stops.length + 1].checked\n    );\n    return filteredTicketsList;\n  };\n\n  sortAllTickets = ({ target: { name } }) => {\n    const { ticketsAll } = this.state;\n    const tickets = ticketSorting(ticketsAll, name);\n    this.setState({ ticketsAll: tickets });\n  };\n\n  render() {\n    const { loading, filterItems } = this.state;\n    return (\n      <AppWrapper>\n        <GlobalStyle />\n        <div className=\"header__logo\">\n          <img src={logo} alt=\"логотип\" />\n        </div>\n        <div className=\"sidebar\">\n          <Filter transferChange={this.changeTransferHandler} filterItems={filterItems} />\n        </div>\n        <div className=\"main\">\n          <Tabs sortAllTickets={this.sortAllTickets} />\n          {loading ? <Loading /> : <Tickets tickets={this.filterAllTickets()} />}\n        </div>\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}
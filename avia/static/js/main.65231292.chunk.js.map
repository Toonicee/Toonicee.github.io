{"version":3,"sources":["img/Shape.svg","img/Logo.svg","components/FilterItem/styled-components/styled-components.jsx","components/FilterItem/index.js","components/FilterItem/FilterItem.jsx","components/Filter/styled-component/styled-component.jsx","components/Filter/index.js","components/Filter/Filter.jsx","components/Tabs/styled-components/styled-components.jsx","components/Tabs/Tabs.jsx","components/Tabs/index.js","helper/formattingPrices.js","helper/transferFormatter.js","helper/calculationOfArrivalTime.js","components/TicketSegment/styled-components/styled-components.jsx","components/TicketSegment/index.js","components/TicketSegment/TicketSegment.jsx","components/Ticket/styled-components/styled-components.jsx","components/Ticket/index.js","components/Ticket/Ticket.jsx","components/Loading/index.js","components/Loading/loading.jsx","helper/ticketSorting.js","services/services.js","components/App/styled-components/styled-componets.jsx","components/App/index.jsx","components/App/App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Box","styled","span","FilterLabel","label","shape","FilterItem","checked","index","inputValue","transferChange","filterAllTickets","defaultProps","type","onChange","className","FilterTitle","p","FilterWrapper","div","FilterList","ul","Filter","filterItems","map","id","key","TabsButton","button","props","active","Tabs","isActive","target","setState","name","state","sortAllTickets","this","onClick","e","React","Component","formattingPrices","price","toString","replace","transferFormatter","stops","postfix","length","calculationOfArrivalTime","data","hours","min","hour","getHours","allMinetes","getMinutes","minut","TicketPreviewSegment","TicketPreviewLabel","TicketPreviewInput","TicketPreviewFlight","TicketSegment","segments","getNormalTime","h","origin","destination","date","duration","transplant","reduce","acc","item","Math","floor","minutes","newdate","Date","departureTime","uniqueId","TicketWrapper","TicketHeader","TicketCarrier","TicketPrice","Ticket","tickets","count","carrier","src","width","height","alt","Loading","ticketSorting","array","sort","prev","next","instance","axios","create","baseURL","API_URLS","Services","getTicketsId","get","getAllTickets","GlobalStyle","createGlobalStyle","AppWrapper","App","initialStateLabel","services","changeTransferHandler","forEach","num","filter","ticketId","then","res","stop","ticketsAll","loading","catch","ticket","searchId","logo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.65231292.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shape.68ca57dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.96990a1b.svg\";","import styled from 'styled-components';\r\n\r\nimport shape from '../../../img/Shape.svg';\r\n\r\nconst Box = styled.span`\r\n  display: inline-block;\r\n  left: 0;\r\n  margin-right: 10px;\r\n  position: relative;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nconst FilterLabel = styled.label`\r\n  text-align: left;\r\n  height: 40px;\r\n  padding: 0 20px;\r\n  font-weight: normal;\r\n  font-size: 13px;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    background: #f1fcff;\r\n  }\r\n  &:focus {\r\n    background: #f1fcff;\r\n    .checkbox {\r\n      &::after {\r\n        border: 1px solid red;\r\n      }\r\n    }\r\n  }\r\n  &:active {\r\n    background: #f1fcff;\r\n  }\r\n\r\n  input {\r\n    opacity: 0;\r\n    position: absolute;\r\n    z-index: -1;\r\n    &:checked {\r\n      + .checkbox {\r\n        &::before {\r\n          content: '';\r\n          position: absolute;\r\n          background-position: center center;\r\n          width: 12px;\r\n          height: 8px;\r\n          top: 6px;\r\n          left: 5px;\r\n          background: url(${shape}) no-repeat;\r\n        }\r\n        &::after {\r\n          border: 1px solid #2196f3;\r\n        }\r\n      }\r\n    }\r\n    + .checkbox::after {\r\n      content: '';\r\n      width: 20px;\r\n      height: 20px;\r\n      position: absolute;\r\n      border: 1px solid #9abbce;\r\n      box-sizing: border-box;\r\n      border-radius: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FilterLabel, Box };\r\n","import FilterItem from './FilterItem';\r\n\r\nexport default FilterItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FilterLabel, Box } from './styled-components/styled-components';\r\n\r\nconst FilterItem = ({ label, checked, index, inputValue, transferChange, filterAllTickets }) => {\r\n  FilterItem.defaultProps = {\r\n    transferChange: () => {},\r\n    filterAllTickets: () => {},\r\n    label: '',\r\n    checked: false,\r\n    index: 0,\r\n    inputValue: 0,\r\n  };\r\n\r\n  FilterItem.propTypes = {\r\n    transferChange: PropTypes.func,\r\n    filterAllTickets: PropTypes.func,\r\n    label: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    index: PropTypes.number,\r\n    inputValue: PropTypes.number,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FilterLabel>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={() => {\r\n            transferChange(index, inputValue);\r\n            filterAllTickets();\r\n          }}\r\n          checked={checked}\r\n        />\r\n        <Box className=\"checkbox\" />\r\n        {label}\r\n      </FilterLabel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterItem;\r\n","import styled from 'styled-components';\r\n\r\nconst FilterTitle = styled.p`\r\n  font-style: normal;\r\n  margin: 15px 0 0 20px;\r\n  text-align: left;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n  background: #ffffff;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  padding: 5px 0;\r\n`;\r\n\r\nconst FilterList = styled.ul`\r\n  padding: 0;\r\n  margin: 10px 0 5px 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport { FilterTitle, FilterList, FilterWrapper };\r\n","import Filter from './Filter';\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from '../FilterItem';\r\n\r\nimport { FilterWrapper, FilterTitle, FilterList } from './styled-component/styled-component';\r\n\r\nconst Filter = ({ filterItems, transferChange, filterAllTickets }) => {\r\n  Filter.defaultProps = {\r\n    transferChange: () => {},\r\n    filterAllTickets: () => {},\r\n    filterItems: [],\r\n  };\r\n\r\n  Filter.propTypes = {\r\n    transferChange: PropTypes.func,\r\n    filterAllTickets: PropTypes.func,\r\n    filterItems: PropTypes.instanceOf(Array),\r\n  };\r\n  return (\r\n    <FilterWrapper className=\"filters__item filter\">\r\n      <FilterTitle>Количество пересадок</FilterTitle>\r\n      <div>\r\n        <div>\r\n          <FilterList>\r\n            {filterItems.map(({ label, id, checked, inputValue }, index) => (\r\n              <li key={id}>\r\n                <FilterItem\r\n                  label={label}\r\n                  checked={checked}\r\n                  index={index}\r\n                  inputValue={inputValue}\r\n                  transferChange={transferChange}\r\n                  filterAllTickets={filterAllTickets}\r\n                />\r\n              </li>\r\n            ))}\r\n          </FilterList>\r\n        </div>\r\n      </div>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\nconst TabsButton = styled.button`\r\n  width: 50%;\r\n  display: inline-block;\r\n  font-size: 15px;\r\n  height: 50px;\r\n  left: calc(50% - 251px / 2 + 252.5px);\r\n  background: ${props => (props.active ? '#2196F3' : '#fff')};\r\n  color: ${props => (props.active ? '#fff' : '#4A4A4A')};\r\n  border: 1px solid #dfe5ec;\r\n  &:nth-child(1) {\r\n    border-radius: 10px 0 0 10px;\r\n  }\r\n  &:nth-child(2) {\r\n    border-radius: 0 10px 10px 0;\r\n  }\r\n`;\r\n\r\nexport default TabsButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TabsButton from './styled-components/styled-components';\r\n\r\nclass Tabs extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      active: null,\r\n    };\r\n  }\r\n\r\n  isActive = ({ target }) => {\r\n    this.setState({ active: target.name });\r\n  };\r\n\r\n  render() {\r\n    const { sortAllTickets } = this.props;\r\n    const { active } = this.state;\r\n    return (\r\n      <div className=\"tabs-wrapper\">\r\n        <TabsButton\r\n          name=\"cheapest\"\r\n          onClick={e => {\r\n            sortAllTickets(e);\r\n            this.isActive(e);\r\n          }}\r\n          active={active === 'cheapest'}\r\n        >\r\n          самый дешевый\r\n        </TabsButton>\r\n        <TabsButton\r\n          name=\"fastest\"\r\n          onClick={e => {\r\n            sortAllTickets(e);\r\n            this.isActive(e);\r\n          }}\r\n          active={active === 'fastest'}\r\n        >\r\n          самый быстрый\r\n        </TabsButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nTabs.defaultProps = {\r\n  sortAllTickets: () => {},\r\n};\r\n\r\nTabs.propTypes = {\r\n  sortAllTickets: PropTypes.func,\r\n};\r\n\r\nexport default Tabs;\r\n","import Tabs from './Tabs';\r\n\r\nexport default Tabs;\r\n","const formattingPrices = price =>\r\n  price.toString().replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, `$1 `);\r\nexport default formattingPrices;\r\n","const transferFormatter = stops => {\r\n  let postfix;\r\n  if (stops.length === 1) {\r\n    postfix = `${stops.length} пересадка`;\r\n  }\r\n  if (stops.length > 1) {\r\n    postfix = `${stops.length} пересадки`;\r\n  }\r\n  if (stops.length === 0) {\r\n    postfix = 'без пересадок';\r\n  }\r\n  return postfix;\r\n};\r\n\r\nexport default transferFormatter;\r\n","const calculationOfArrivalTime = (data, hours, min) => {\r\n  let hour = data.getHours() + hours;\r\n  const allMinetes = data.getMinutes() + min;\r\n  let minut = 0;\r\n  if (hour >= 24) {\r\n    hour -= 24;\r\n    if (hour >= 24) {\r\n      hour -= 24;\r\n    }\r\n  }\r\n  if (allMinetes >= 60) {\r\n    minut = allMinetes - 60;\r\n    hour += 1;\r\n  } else {\r\n    minut = allMinetes;\r\n  }\r\n\r\n  return `${hour < 10 ? `0${hour}` : hour}:${minut < 10 ? `0${minut}` : minut}`;\r\n};\r\n\r\nexport default calculationOfArrivalTime;\r\n","import styled from 'styled-components';\r\n\r\nconst TicketPreviewSegment = styled.div`\r\n  display: flex;\r\n  text-align: left;\r\n\r\n  &.ticket-preview__flight {\r\n    width: 33%;\r\n  }\r\n`;\r\n\r\nconst TicketPreviewLabel = styled.p`\r\n  color: #a0b0b9;\r\n  letter-spacing: 0.5px;\r\n  margin: 11px 0 0 0;\r\n  font-size: 12px;\r\n  line-height: 18px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst TicketPreviewInput = styled.p`\r\n  color: #4a4a4a;\r\n  margin: 0;\r\n  font-size: 14px;\r\n  line-height: 21px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst TicketPreviewFlight = styled.div`\r\n  width: 35%;\r\n\r\n  :nth-last-of-type(1) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport { TicketPreviewSegment, TicketPreviewLabel, TicketPreviewInput, TicketPreviewFlight };\r\n","import TicketSegment from './TicketSegment';\r\n\r\nexport default TicketSegment;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { uniqueId } from 'lodash';\r\n\r\nimport transferFormatter from '../../helper/transferFormatter';\r\nimport calculationOfArrivalTime from '../../helper/calculationOfArrivalTime';\r\nimport {\r\n  TicketPreviewSegment,\r\n  TicketPreviewLabel,\r\n  TicketPreviewInput,\r\n  TicketPreviewFlight,\r\n} from './styled-components/styled-components';\r\n\r\nconst TicketSegment = ({ segments }) => {\r\n  TicketSegment.defaultProps = {\r\n    segments: [],\r\n  };\r\n\r\n  TicketSegment.propTypes = {\r\n    segments: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  const getNormalTime = (h, min) => `${h}:${min < 10 ? `0${min}` : min}`;\r\n\r\n  return segments.map(({ origin, destination, date, duration, stops }) => {\r\n    const transplant = stops.reduce((acc, item) => `${item} ${acc}`, '');\r\n    const hours = Math.floor(duration / 60);\r\n    const minutes = duration - hours * 60;\r\n    const newdate = new Date(date);\r\n\r\n    const departureTime = getNormalTime(newdate.getHours(), newdate.getMinutes());\r\n    return (\r\n      <TicketPreviewSegment key={uniqueId()}>\r\n        <TicketPreviewFlight>\r\n          <TicketPreviewLabel>{`${origin} - ${destination}`}</TicketPreviewLabel>\r\n          <TicketPreviewInput>{`${departureTime} - ${calculationOfArrivalTime(\r\n            newdate,\r\n            hours,\r\n            minutes\r\n          )}`}</TicketPreviewInput>\r\n        </TicketPreviewFlight>\r\n        <TicketPreviewFlight>\r\n          <TicketPreviewLabel>В пути</TicketPreviewLabel>\r\n          <TicketPreviewInput>{getNormalTime(hours, minutes)}м</TicketPreviewInput>\r\n        </TicketPreviewFlight>\r\n        <TicketPreviewFlight>\r\n          <TicketPreviewLabel>{transferFormatter(stops)}</TicketPreviewLabel>\r\n          <TicketPreviewInput>{transplant}</TicketPreviewInput>\r\n        </TicketPreviewFlight>\r\n      </TicketPreviewSegment>\r\n    );\r\n  });\r\n};\r\nexport default TicketSegment;\r\n","import styled from 'styled-components';\r\n\r\nexport const TicketWrapper = styled.div`\r\n  background: #ffffff;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const TicketHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const TicketCarrier = styled.div`\r\n  margin: 0 30px 0 0;\r\n`;\r\n\r\nexport const TicketPrice = styled.div`\r\n  color: #2196f3;\r\n  margin: 7px 0 0 0px;\r\n  font-size: 24px;\r\n  line-height: 24px;\r\n`;\r\n","import Ticket from './Ticket';\r\n\r\nexport default Ticket;\r\n","import React from 'react';\r\nimport { uniqueId } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport formattingPrices from '../../helper/formattingPrices';\r\nimport TicketSegment from '../TicketSegment';\r\nimport {\r\n  TicketWrapper,\r\n  TicketHeader,\r\n  TicketCarrier,\r\n  TicketPrice,\r\n} from './styled-components/styled-components';\r\n\r\nconst Ticket = ({ tickets }) => {\r\n  Ticket.defaultProps = {\r\n    tickets: () => {},\r\n  };\r\n\r\n  Ticket.propTypes = {\r\n    tickets: PropTypes.func,\r\n  };\r\n  let count = 0;\r\n  return (\r\n    <>\r\n      {tickets().map(({ price, carrier, segments }) => {\r\n        count += 1;\r\n        if (count > 5) {\r\n          return null;\r\n        }\r\n        return (\r\n          <TicketWrapper key={uniqueId()}>\r\n            <TicketHeader>\r\n              <TicketPrice>\r\n                <span>{`${formattingPrices(price)} Р`}</span>\r\n              </TicketPrice>\r\n              <div className=\"ticket-preview__carriers\">\r\n                <TicketCarrier>\r\n                  <img\r\n                    className=\"ticket-carrier__img\"\r\n                    src={`//pics.avs.io/99/36/${carrier}.png`}\r\n                    width=\"100\"\r\n                    height=\"40\"\r\n                    alt=\"Логотип авиакомпании\"\r\n                  />\r\n                </TicketCarrier>\r\n              </div>\r\n            </TicketHeader>\r\n            <TicketSegment key={uniqueId()} segments={segments} />\r\n          </TicketWrapper>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n","import Loading from './loading';\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-spinner-223z6fdkjge\">\r\n      <div className=\"ldio-vwhx2ilfl4e\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","const ticketSorting = (array, index = 'cheapest') => {\r\n  return array.sort((prev, next) => {\r\n    if (index === 'cheapest') {\r\n      return prev.price - next.price;\r\n    }\r\n    if (index === 'fastest') {\r\n      return (\r\n        prev.segments.reduce((acc, { duration }) => duration + acc, 0) -\r\n        next.segments.reduce((acc, { duration }) => duration + acc, 0)\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n};\r\n\r\nexport default ticketSorting;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://front-test.beta.aviasales.ru/',\r\n});\r\n\r\nconst API_URLS = {\r\n  SEARCH: 'search',\r\n  TICKETS: 'tickets?searchId=',\r\n};\r\n\r\nexport default class Services {\r\n  getTicketsId = () => instance.get(API_URLS.SEARCH);\r\n\r\n  getAllTickets = id => instance.get(`${API_URLS.TICKETS}${id}`);\r\n}\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: #E5E5E5;\r\n    font-family: 'Open Sans', sans-serif;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #4A4A4A;\r\n    line-height: 20px;\r\n  }\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  text-align: center;\r\n  background-color: #e5e5e5;\r\n  display: grid;\r\n  grid-template-columns: 232px 502px;\r\n  grid-gap: 30px 20px;\r\n  justify-content: center;\r\n  margin-top: 148px;\r\n  .header__logo {\r\n    grid-row: 1;\r\n    grid-column: 2 / 2;\r\n    display: flex;\r\n    margin-left: 83px;\r\n  }\r\n\r\n  .sidebar {\r\n    grid-row: 2 / 2;\r\n    grid-column: 1 / 2;\r\n  }\r\n\r\n  .main {\r\n    grid-row: 2 / 2;\r\n    grid-column: 2 / 2;\r\n  }\r\n`;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\n\nimport Filter from '../Filter';\nimport Tabs from '../Tabs';\nimport Ticket from '../Ticket';\nimport Loading from '../Loading';\nimport ticketSorting from '../../helper/ticketSorting';\nimport Services from '../../services/services';\nimport { GlobalStyle, AppWrapper } from './styled-components/styled-componets';\n\nimport logo from '../../img/Logo.svg';\n\nclass App extends React.Component {\n  initialStateLabel = [\n    { label: 'Все', id: 'all', inputValue: 0, checked: true },\n    { label: 'Без пересадок', id: 'non-stop', inputValue: 1, checked: true },\n    { label: '1 персадка', id: '1-transplant', inputValue: 2, checked: true },\n    { label: '2 пересадки', id: '2-transplant', inputValue: 3, checked: true },\n    { label: '3 пересадки', id: '3-transplant', inputValue: 4, checked: true },\n  ];\n\n  services = new Services();\n\n  constructor() {\n    super();\n    this.state = {\n      ticketsAll: [],\n      ticketId: null,\n      loading: true,\n      filterItems: [...this.initialStateLabel],\n    };\n  }\n\n  componentDidMount() {\n    this.services.getTicketsId().then(({ data }) => this.setState({ ticketId: data.searchId }));\n    this.tickets();\n  }\n\n  changeTransferHandler = (index, inputValue) => {\n    const { filterItems } = this.state;\n    filterItems.forEach((item, num) => {\n      if (filterItems[0].checked) {\n        filterItems[num].checked = true;\n      }\n      if (num === index) {\n        filterItems[num].checked = !filterItems[num].checked;\n      }\n      if (!filterItems[0].checked && inputValue === 0) {\n        filterItems[num].checked = false;\n      }\n      if (!filterItems[num].checked) {\n        filterItems[0].checked = false;\n      }\n    });\n    const label = filterItems.filter(({ checked }) => checked);\n    if (label.length === 4) {\n      filterItems[0].checked = true;\n    }\n    this.setState({ filterItems });\n  };\n\n  tickets = () => {\n    const { ticketId } = this.state;\n    this.services\n      .getAllTickets(ticketId)\n      .then(res => {\n        if (res.data.stop) {\n          return;\n        }\n        const { tickets } = res.data;\n        const { ticketsAll } = this.state;\n        this.setState({\n          ticketsAll: [...ticketsAll, ...tickets],\n          loading: false,\n        });\n        this.tickets();\n      })\n      .catch(() => this.tickets());\n  };\n\n  filterAllTickets = () => {\n    const { ticketsAll, filterItems } = this.state;\n    if (filterItems[0].checked) {\n      return ticketsAll;\n    }\n    const filteredTicketsList = ticketsAll.filter(\n      ticket => filterItems[ticket.segments[0].stops.length + 1].checked\n    );\n    return filteredTicketsList;\n  };\n\n  sortAllTickets = ({ target: { name } }) => {\n    const { ticketsAll } = this.state;\n    const tickets = ticketSorting(ticketsAll, name);\n    this.setState({ ticketsAll: tickets });\n  };\n\n  render() {\n    const { loading, filterItems } = this.state;\n    return (\n      <AppWrapper>\n        <GlobalStyle />\n        <div className=\"header__logo\">\n          <img src={logo} alt=\"логотип\" />\n        </div>\n        <div className=\"sidebar\">\n          <Filter\n            filterAllTickets={this.filterAllTickets}\n            transferChange={this.changeTransferHandler}\n            filterItems={filterItems}\n          />\n        </div>\n        <div className=\"main\">\n          <Tabs sortAllTickets={this.sortAllTickets} />\n          {loading ? <Loading /> : <Ticket tickets={this.filterAllTickets} />}\n        </div>\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}
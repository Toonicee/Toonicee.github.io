{"version":3,"sources":["services/services.js","redux/reducers/auth.js","redux/reducers/article-list.js","redux/reducers/profile.js","redux/reducers/article.js","redux/reducers/comments.js","redux/reducers/index.js","redux/store.js","redux/actions/article/article.js","redux/actions/article/async-article.js","redux/actions/auth/auth.js","redux/actions/comment/comment.js","modules/Post-form/Post-form.jsx","redux/actions/profile.js","components/Block/Block.jsx","components/Block/index.js","components/Add-post/index.js","components/Add-post/Add-post.jsx","components/Button/Button.jsx","components/Container/Container.jsx","components/List-pagination/List-pagination.jsx","components/Link-auth-page/Link-auth-page.jsx","components/User-name/User-name.jsx","components/Link-home-page/Link-home-page.jsx","components/Loading/loading.jsx","components/Favorites-count/Favorites-count.jsx","components/result-registration/result-registration.jsx","components/Management/Management.jsx","components/Date-creation/Date-creation.jsx","components/Tag-list/Tag-list.jsx","components/Profile-name/Profile-name.jsx","modules/Header/Header.jsx","modules/Signup-form/Signup-form.jsx","redux/actions/auth/async-auth.js","modules/Login-form/Login-form.jsx","modules/Article-item/Article-item.jsx","modules/Article-all/Article-all.jsx","modules/Profile-preview/Profile-preview.jsx","modules/Article-preview/Article-preview.jsx","modules/Comment-item/Comment-item.jsx","modules/Add-comment/Add-comment.jsx","modules/Comment-list/Comment-list.jsx","redux/actions/comment/async-comment.js","pages/Auth/Auth.jsx","pages/Home/Home.jsx","pages/Create-Post/Create-Post.jsx","pages/Profile/Profile.jsx","pages/Article/Article.jsx","pages/Edit-article/Edit-article.jsx","components/Loading/index.js","components/App/App.jsx","serviceWorker.js","index.jsx"],"names":["axios","defaults","baseURL","setToken","token","headers","common","Authorization","getArticles","page","limit","get","params","offset","Auth","current","register","body","post","login","Article","del","slug","delete","favorite","unfavorite","create","article","edit","value","put","currentArticle","requestMethod","method","url","data","Profile","follow","username","unfollow","Comment","comment","id","initialState","currentUser","error","isAuthorizedUser","inProgress","isRegistered","auth","handleActions","FETCH_USER_REQUEST","state","FETCH_USER_SUCCESS","payload","user","FETCH_USER_FAILURE","FETCH_REGISTER_SUCCESS","FETCH_AUTH_REQUEST","FETCH_AUTH_SUCCESS","FETCH_AUTH_FAILURE","LOGOUT","localStorage","setItem","blogApi","RESET_FORM","like","articles","map","favorited","favoritesCount","FETCH_ARTICLES_REQUEST","isProgress","FETCH_ARTICLES_SUCCESS","articlesCount","FETCH_ARTICLES_FAILURE","ARTICLE_FAVORITED","console","log","ARTICLE_UNFAVORITED","inicialState","isLoading","profile","userProfile","action","type","isSuccess","articleCurrent","author","FETCH_ARTICLE_REQUEST","FETCH_ARTICLE_SUCCESS","FETCH_ARTICLE_FAILURE","FETCH_CREATE_ARTICLE_REQUEST","FETCH_CREATE_ARTICLE_SUCCESS","articleState","FETCH_CREATE_ARTICLE_FAILURE","FETCH_UPDATE_REQUEST","FETCH_UPDATE_SUCCESS","FETCH_UPDATE_FAILURE","DELETE_ARTICLE","RESET_STATE","comments","FETCH_COMMENTS_REQUEST","FETCH_COMMENTS_SUCCESS","commentList","FETCH_ADD_COMMENTS_SUCCESS","FETCH_COMMENTS_DELETE_SUCCESS","filter","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","fetchArticlesRequest","createAction","fetchArticlesSuccess","fetchArticlesFailure","fetchArticleRequest","fetchArticleSuccess","fetchArticleFailure","fetchCreateArticleRequest","fetchCreateArticleSuccess","fetchCreateArticleFailure","fetchUpdateRequest","fetchUpdateSuccess","fetchUpdateFailure","articleFavorited","articleUnfavorited","deleteArticle","resetState","getAllArticles","dispatch","actions","then","res","articleData","catch","getArticle","fetchRegisterRequest","fetchRegisterSuccess","fetchRegisterFailure","fetchAuthRequest","fetchAuthSuccess","fetchAuthFailure","fetchUserRequest","fetchUserSuccess","fetchUserFailure","logout","resetFormState","fetchCommentsRequest","fetchCommentsSuccess","fetchCommentsFailure","fetchCommentDeleteRequest","fetchCommentDeleteSuccess","fetchAddCommentsRequest","fetchAddCommentsSuccess","mapDispatchToProps","articleCreateConnect","setErrors","setSubmitting","errors","response","editArticleConnect","values","filteredValues","Object","entries","reduce","acc","field","err","resetStateConnect","PostForm","currentPathname","pathname","useLocation","to","WrapperForm","initialValues","title","description","tagList","onSubmit","Item","name","placeholder","TextArea","rows","WrapperButton","size","defaultProps","styled","div","connect","getProfile","fetchProfileSuccess","Block","children","backcolor","BlockStyle","className","props","AddPost","Button","ContainerWrapper","Container","getAllArticlesConnect","ListPagination","Nav","onChange","total","nav","WrapperLink","Span","span","LinkAuthPage","UserName","profileName","onClick","LinkHomePage","HomeOutlined","Loading","favoriteConnect","unfavoriteConnect","FavoritesCount","count","LikeTwoTone","width","height","twoToneColor","button","ResultRegistration","success","WrapperResult","icon","CheckCircleTwoTone","extra","delArticleConnect","WrapperManagement","DateCreation","date","formattedDate","formatDistanceToNow","Date","locale","ruLocale","addSuffix","dateTime","TagList","tags","length","TagsWrapper","tag","key","ul","ProfileName","logoutConnect","getProfileConnect","Header","HeaderWrapper","aria-hidden","header","validation","Yup","shape","required","password","repeatPassword","test","this","parent","email","registrationConnect","cbError","cbSubmitting","resetFormStateConnect","SignupForm","validationSchema","resetForm","prefix","Password","block","min","max","loginUser","userData","getToken","InnerArticle","ArticleBody","ArticleHeader","ArticleItem","createdAt","getArticleConnect","ArticleAll","WrapperLoading","WrapperArticle","getProfileName","WrapperPagination","React","Component","ProfilePreview","alt","src","image","ArticlePreview","canModify","bio","CommentItem","commentId","deleteComment","CommentHeader","CommentBody","AddComment","addComment","event","addNewComment","preventDefault","setState","onChangeValue","target","Wrapper","htmlType","addNewCommentConnect","deleteCommentConnect","CommentList","renderList","List","WrapperComments","exact","path","component","LoginForm","Main","main","Home","CreatePost","resetProfile","getItem","getAllCommentsConnect","articleSlug","EditArticle","setUserDataConnect","App","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"kRAEAA,IAAMC,SAASC,QAAU,0C,IAmDV,M,sCAjDbC,SAAW,SAAAC,GACLA,IACFJ,IAAMC,SAASI,QAAQC,OAAOC,cAA9B,gBAAuDH,K,KAI3DI,YAAc,eAACC,EAAD,uDAAQ,EAAGC,EAAX,uDAAmB,GAAnB,OACZV,IAAMW,IAAI,YAAa,CACrBC,OAAQ,CACNF,QACAG,OAAe,GAAPJ,M,KAIdK,KAAO,CACLC,QAAS,kBAAMf,IAAMW,IAAI,UACzBK,SAAU,SAAAC,GAAI,OAAIjB,IAAMkB,KAAK,SAAUD,IACvCE,MAAO,SAAAF,GAAI,OAAIjB,IAAMkB,KAAK,eAAgBD,K,KAG5CG,QAAU,CACRC,IAAK,SAAAC,GAAI,OAAItB,IAAMuB,OAAN,oBAA0BD,KACvCE,SAAU,SAAAF,GAAI,OAAItB,IAAMkB,KAAN,oBAAwBI,EAAxB,eAClBG,WAAY,SAAAH,GAAI,OAAItB,IAAMuB,OAAN,oBAA0BD,EAA1B,eACpBI,OAAQ,SAAAC,GAAO,OAAI3B,IAAMkB,KAAK,YAAa,CAAES,aAC7CC,KAAM,SAACN,EAAMO,GAAP,OAAiB7B,IAAM8B,IAAN,oBAAuBR,GAAQ,CAAEK,QAASE,M,KAGnEE,eAAiB,SAACC,EAAeV,GAAqB,IAAfL,EAAc,uDAAP,GAC5C,OAAOjB,IAAM,CACXiC,OAAQD,EACRE,IAAI,aAAD,OAAeZ,GAClBa,KAAMlB,K,KAIVmB,QAAU,CACRC,OAAQ,SAAAC,GAAQ,OAAItC,IAAMkB,KAAN,oBAAwBoB,EAAxB,aACpB3B,IAAK,SAAA2B,GAAQ,OAAItC,IAAMW,IAAN,oBAAuB2B,KACxCC,SAAU,SAAAD,GAAQ,OAAItC,IAAMuB,OAAN,oBAA0Be,EAA1B,c,KAGxBE,QAAU,CACR7B,IAAK,SAAAW,GAAI,OAAItB,IAAMW,IAAN,oBAAuBW,EAAvB,eACbJ,KAAM,SAACI,EAAMmB,GAAP,OAAmBzC,IAAMkB,KAAN,oBAAwBI,EAAxB,aAAyCmB,IAClElB,OAAQ,SAACD,EAAMoB,GAAP,OAAc1C,IAAMuB,OAAN,oBAA0BD,EAA1B,qBAA2CoB,OC9C/DC,EAAe,CACnBC,YAAa,GACbC,MAAO,KACPC,kBAAkB,EAClBC,YAAY,EACZC,cAAc,GAmEDC,EAhEFC,YACX,CACEC,mBAAoB,SAAAC,GAClB,OAAO,eACFA,EADL,CAEEL,YAAY,KAGhBM,mBAAoB,SAACD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC5B,OAAO,eACFF,EADL,CAEER,YAAaU,EAAQC,KACrBR,YAAY,EACZD,kBAAkB,KAGtBU,mBAAoB,SAAAJ,GAClB,OAAO,eACFA,EADL,CAEEL,YAAY,KAGhBU,uBAAwB,SAACL,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAChC,OAAO,eACFF,EADL,CAEER,YAAaU,EACbN,cAAc,KAGlBU,mBAAoB,SAAAN,GAClB,OAAO,eACFA,EADL,CAEEL,YAAY,KAGhBY,mBAAoB,SAACP,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC5B,OAAO,eACFF,EADL,CAEER,YAAaU,EAAQC,KACrBR,YAAY,EACZD,kBAAkB,KAGtBc,mBAAoB,SAAAR,GAClB,OAAO,eACFA,EADL,CAEEL,YAAY,KAGhBc,OAAQ,WAGN,OAFAC,aAAaC,QAAQ,MAAO,IAC5BC,EAAQ7D,SAAS,MACV,eAAKwC,IAEdsB,WAAY,SAAAb,GACV,OAAO,eACFA,EADL,CAEEJ,cAAc,MAIpBL,GCjEIuB,EAAO,SAACC,EAAUb,GAAX,OACXa,EAASC,KAAI,SAAAzC,GACX,OAAIA,EAAQL,OAASgC,EAAQ3B,QAAQL,KAC5B,eACFK,EADL,CAEE0C,UAAWf,EAAQ3B,QAAQ0C,UAC3BC,eAAgBhB,EAAQ3B,QAAQ2C,iBAG7B3C,MA0CIwC,EAvCEjB,YACf,CACEqB,uBAAwB,SAAAnB,GACtB,OAAO,eACFA,EADL,CAEEoB,YAAY,KAGhBC,uBAAwB,SAACrB,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAChC,OAAO,eACFF,EADL,CAEEe,SAAUb,EAAQa,SAClBO,cAAepB,EAAQoB,cACvBF,YAAY,KAGhBG,uBAAwB,SAAAvB,GACtB,OAAO,eACFA,EADL,CAEEoB,YAAY,KAGhBI,kBAAmB,SAACxB,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAE3B,OADAuB,QAAQC,IAAI1B,GACL,eACFA,EADL,CAEEe,SAAUD,EAAKd,EAAMe,SAAUb,MAGnCyB,oBAAqB,SAAC3B,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC7B,OAAO,eACFF,EADL,CAEEe,SAAUD,EAAKd,EAAMe,SAAUb,OAjDlB,CACnBa,SAAU,GACVK,YAAY,ICJRQ,EAAe,CACnBC,WAAW,EACXC,QAAS,IAyBIC,EAtBK,WAAmC,IAAlC/B,EAAiC,uDAAzB4B,EAAcI,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,wBACH,OAAO,eACFjC,EADL,CAEE6B,WAAW,IAEf,IAAK,wBACH,OAAO,eACF7B,EADL,CAEE8B,QAASE,EAAO9B,QAAQ4B,QACxBD,WAAW,IAEf,IAAK,gBACH,OAAO,eACFD,GAEP,QACE,OAAO5B,ICrBPT,EAAe,CACnB6B,YAAY,EACZc,UAAW,KACXC,eAAgB,CACdC,OAAQ,KAoGG7D,EAjGCuB,YACd,CACEuC,sBAAuB,SAAArC,GACrB,OAAO,eACFA,EADL,CAEEoB,YAAY,KAGhBkB,sBAAuB,SAACtC,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC/B,OAAO,eACFF,EADL,CAEEmC,eAAgBjC,EAAQ3B,QACxB6C,YAAY,KAIhBmB,sBAAuB,SAAAvC,GACrB,OAAO,eACFA,EADL,CAEEoB,YAAY,KAGhBoB,6BAA8B,SAAAxC,GAC5B,OAAO,eACFA,EADL,CAEEoB,YAAY,KAGhBqB,6BAA8B,SAACzC,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACtC,OAAO,eACFF,EADL,CAEEmC,eAAgBjC,EAAQ3B,QACxB6C,YAAY,EACZsB,aAAc,aAGlBC,6BAA8B,SAAA3C,GAC5B,OAAO,eACFA,EADL,CAEEoB,YAAY,EACZ3B,OAAO,KAGXmD,qBAAsB,SAAA5C,GACpB,OAAO,eACFA,EADL,CAEEoB,YAAY,KAGhByB,qBAAsB,SAAC7C,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC9B,OAAO,eACFF,EADL,CAEEmC,eAAgBjC,EAAQ3B,QACxB6C,YAAY,EACZsB,aAAc,YAGlBI,qBAAsB,SAAA9C,GACpB,OAAO,eACFA,EADL,CAEEoB,YAAY,EACZ3B,OAAO,KAGX+B,kBAAmB,SAACxB,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC3B,OAAO,eACFF,EADL,CAEEmC,eAAe,eACVjC,EAAQ3B,QADC,CAEZ0C,UAAWf,EAAQ3B,QAAQ0C,UAC3BC,eAAgBhB,EAAQ3B,QAAQ2C,oBAItCS,oBAAqB,SAAC3B,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC7B,OAAO,eACFF,EADL,CAEEmC,eAAe,eACVjC,EAAQ3B,QADC,CAEZ0C,UAAWf,EAAQ3B,QAAQ0C,UAC3BC,eAAgBhB,EAAQ3B,QAAQ2C,oBAItC6B,eAAgB,WACd,OAAO,eACFxD,EADL,CAEEmD,aAAc,aAGlBM,YAAa,WACX,OAAOzD,IAGXA,G,SCjEa0D,EA/BEnD,YACf,CACEoD,uBAAwB,SAAAlD,GACtB,OAAO,eACFA,EADL,CAEEoB,YAAY,KAGhB+B,uBAAwB,SAACnD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAChC,OAAO,eACFF,EADL,CAEEoB,YAAY,EACZgC,YAAalD,EAAQ+C,YAGzBI,2BAA4B,SAACrD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACpC,OAAO,eACFF,EADL,CAEEoD,YAAY,CAAElD,GAAH,mBAAeF,EAAMoD,iBAGpCE,8BAA+B,SAACtD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACvC,OAAO,eACFF,EADL,CAEEoD,YAAapD,EAAMoD,YAAYG,QAAO,qBAAGjE,KAAgBY,SA7B5C,CACnBkD,YAAa,GACbhC,YAAY,ICICoC,cAAgB,CAAE3D,OAAMkB,WAAUxC,UAASwD,cAAakB,aCHjEQ,EAAmBC,OAAOC,sCAAwCC,IAIzDC,EAFDC,YAAYC,EAAaN,EAAiBO,YAAgBC,O,oHCJ3DC,EAAuBC,YAAa,0BACpCC,EAAuBD,YAAa,0BACpCE,EAAuBF,YAAa,0BAGpCG,EAAsBH,YAAa,yBACnCI,EAAsBJ,YAAa,yBACnCK,EAAsBL,YAAa,yBAGnCM,EAA4BN,YAAa,gCACzCO,EAA4BP,YAAa,gCACzCQ,EAA4BR,YAAa,gCAGzCS,EAAqBT,YAAa,wBAClCU,GAAqBV,YAAa,wBAClCW,GAAqBX,YAAa,wBAGlCY,GAAmBZ,YAAa,qBAChCa,GAAqBb,YAAa,uBAElCc,GAAgBd,YAAa,kBAE7Be,GAAaf,YAAa,eCzBjCgB,GAAiB,SAAA9H,GAAI,OAAI,SAAA+H,GAC7BA,EAASC,KACTzE,EACGxD,YAAYC,GACZiI,MAAK,SAAAC,GACJ,IAAMC,EAAcD,EAAIxG,KACxBqG,EAASC,EAA6BG,OAEvCC,OAAM,WACLL,EAASC,UAITK,GAAa,SAAAxH,GAAI,OAAI,SAAAkH,GACzB1E,aAAaC,QAAQ,cAAezC,GACpCkH,EAASC,KACTzE,EACGjC,eAAe,MAAOT,GACtBoH,MAAK,SAAAC,GACJ,IAAMC,EAAcD,EAAIxG,KACxBqG,EAASC,EAA4BG,OAEtCC,OAAM,WACLL,EAASC,UCvBFM,GAAuBxB,YAAa,0BACpCyB,GAAuBzB,YAAa,0BACpC0B,GAAuB1B,YAAa,0BAGpC2B,GAAmB3B,YAAa,sBAChC4B,GAAmB5B,YAAa,sBAChC6B,GAAmB7B,YAAa,sBAGhC8B,GAAmB9B,YAAa,sBAChC+B,GAAmB/B,YAAa,sBAChCgC,GAAmBhC,YAAa,sBAEhCiC,GAASjC,YAAa,UACtBkC,GAAiBlC,YAAa,cCf9BmC,GAAuBnC,YAAa,0BACpCoC,GAAuBpC,YAAa,0BACpCqC,GAAuBrC,YAAa,0BAGpCsC,GAA4BtC,YAAa,iCACzCuC,GAA4BvC,YAAa,iCAIzCwC,IAH4BxC,YAAa,iCAGfA,YAAa,+BACvCyC,GAA0BzC,YAAa,8BACbA,YAAa,8B,yPCLpD,IAWM0C,GAAqB,CACzBC,qBHsBoB,SAACvI,EAASwI,EAAWC,GAArB,OAAuC,SAAA5B,GAC3DA,EAASC,KACTzE,EAAQ5C,QAAQM,OAAOC,GACpB+G,MAAK,SAAAC,GACJ,IAAMC,EAAcD,EAAIxG,KACxBiI,IACA5B,EAASC,EAAkCG,IAC3CJ,EAASC,SAEVI,OAAM,SAAAhG,GAAU,IACPwH,EAAWxH,EAAMyH,SAASnI,KAA1BkI,OACR7B,EAASC,KACT0B,EAAUE,GACVD,SGlCJG,mBHqCkB,SAACjJ,EAAMkJ,GAAP,OAAkB,SAAAhC,GACpCA,EAASC,KACT,IAAMgC,EAAiBC,OAAOC,QAAQH,GAAQI,QAC5C,SAACC,EAAD,0BAAOC,EAAP,KAAcjJ,EAAd,WAAoC,KAAVA,EAAegJ,EAAf,eAA0BA,EAA1B,eAAgCC,EAAQjJ,MAClE,IAEFmC,EACGjC,eAAe,MAAOT,EAAMmJ,GAC5B/B,MAAK,SAAAC,GACJ,IAAMC,EAAcD,EAAIxG,KACxBqG,EAASC,GAA2BG,IACpCJ,EAASC,SAEVI,OAAM,SAAAkC,GACLlG,QAAQC,IAAIiG,GACZvC,EAASC,WGnDbuC,kBAAmB1C,IAGf2C,GAAW,SAAC,GAMX,IAcoBC,EAnBzBhB,EAKI,EALJA,qBACAK,EAII,EAJJA,mBACAhF,EAGI,EAHJA,eACAO,EAEI,EAFJA,aACAkF,EACI,EADJA,kBAEQG,EAAaC,cAAbD,SA6BR,MAAqB,YAAjBrF,GAA+C,WAAjBA,GAChChC,aAAaC,QAAQ,cAAewB,EAAejE,MACnD0J,IACO,kBAAC,IAAD,CAAUK,GAAE,oBAAe9F,EAAejE,SAGjD,kBAACgK,GAAD,KACE,kBAAC,IAAD,CAAQC,eAvBaL,EAuBmBC,EAtBlB,SAApBD,EACK,CACLM,MAAO,GACPC,YAAa,GACbxK,KAAM,GACNyK,QAAS,IAGN,CACLF,MAAOjG,EAAeiG,MACtBC,YAAalG,EAAekG,YAC5BxK,KAAMsE,EAAetE,KACrByK,QAASnG,EAAemG,UAU2BC,SAnCtC,SAACnB,EAAD,GAA2C,IAAhCJ,EAA+B,EAA/BA,cAAeD,EAAgB,EAAhBA,UACxB,SAAbgB,EACFjB,EACEM,GACA,SAAA3H,GAAK,OAAIsH,EAAUtH,MACnB,kBAAMuH,GAAc,MAGtBG,EAAmBhF,EAAejE,KAAMkJ,KA4BtC,kBAAC,IAAD,KACE,kBAAC,IAAKoB,KAAN,CAAWC,KAAK,SACd,kBAAC,IAAD,CAAOA,KAAK,QAAQC,YAAY,2FAElC,kBAAC,IAAKF,KAAN,CAAWC,KAAK,eACd,kBAAC,IAAD,CAAOA,KAAK,cAAcC,YAAY,kFAExC,kBAAC,IAAKF,KAAN,CAAWC,KAAK,QACd,kBAAC,IAAME,SAAP,CAAgBC,KAAM,EAAGH,KAAK,OAAOC,YAAY,wGAEnD,kBAAC,IAAKF,KAAN,CAAWC,KAAK,WACd,kBAAC,IAAD,CAAOA,KAAK,UAAUC,YAAY,yEAEpC,kBAACG,GAAD,KACE,kBAAC,IAAD,CAAcC,KAAK,SAAnB,iFAQZjB,GAASkB,aAAe,CACtBrG,aAAc,IAWhB,IAAMwF,GAAcc,IAAOC,IAAV,MAMXJ,GAAgBG,IAAOC,IAAV,MAKJC,gBA1GS,SAAC,GAAD,QAAG3K,QAAW4D,EAAd,EAAcA,eAAgBO,EAA9B,EAA8BA,aAA9B,MAAoD,CAC1EP,eAAgB,CACdiG,MAAOjG,EAAeiG,MACtBC,YAAalG,EAAekG,YAC5BxK,KAAMsE,EAAetE,KACrByK,QAASnG,EAAemG,QACxBpK,KAAMiE,EAAejE,MAEvBwE,kBAkGsCmE,GAAzBqC,CAA6CrB,I,UCjGtDsB,IAf8BhF,YAAa,0BAe9B,SAAAsE,GAAI,OAAI,SAAArD,GACzB1E,aAAaC,QAAQ,cAAe8H,GACpCrD,EAfiC,CACjCnD,KAAM,0BAeNrB,EAAQ5B,QAAQzB,IAAIkL,GAAMnD,MAAK,SAAAC,GAC7B,IAAMzD,EAAUyD,EAAIxG,KACpBqG,EAdwB,SAAAtD,GAAO,MAAK,CACtCG,KAAM,wBACN/B,QAAS4B,GAYEsH,CAAoBtH,U,gMCpBjC,IAAMuH,GAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OACZ,kBAACC,GAAD,CAAYD,UAAWA,EAAWE,UAAU,SACzCH,IAILD,GAAMN,aAAe,CACnBQ,UAAW,IAQb,IAAMC,GAAaR,IAAOC,IAAV,MAEM,SAAAS,GAAK,OAAIA,EAAMH,aCnBtBF,GDwBAA,GExBAM,GCCC,WAEd,MAAiB,SADI3B,cAAbD,SAEC,KAEF,kBAAC,IAAD,CAAME,GAAG,QAAT,6GCJH2B,GAAS,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAUrH,EAAb,EAAaA,KAAb,OAAwB,kBAAC,KAAD,CAAYA,KAAMA,GAAOqH,IAEhEM,GAAOb,aAAe,CACpB9G,KAAM,I,iICHR,IAEM4H,GAAmBb,IAAOC,IAAV,MAUPa,GAZG,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAH,OAAkB,kBAACO,GAAD,KAAmBP,I,iICIvD,IAKMzC,GAAqB,CACzBkD,sBAAuB5E,IAGnB6E,GAAiB,SAAC,GAA8C,IAA5CD,EAA2C,EAA3CA,sBAAuBzI,EAAoB,EAApBA,cAC/C,OAAIA,GAAiB,GACZ,KAIP,kBAAC2I,GAAD,KACE,kBAAC,KAAD,CAAYC,SAAU,SAAAzL,GAAK,OAAIsL,EAAsBtL,EAAQ,IAAI0L,MAAO7I,MAKxE2I,GAAMjB,IAAOoB,IAAV,MAKTJ,GAAejB,aAAe,CAC5BzH,cAAe,GAQF4H,oBAnCS,SAAC,GAAD,IAAGnI,EAAH,EAAGA,SAAH,MAAmB,CACzCA,SAAUA,EAASA,SACnBO,cAAeP,EAASO,iBAiCcuF,GAAzBqC,CAA6Cc,I,kKCvC5D,IAUMK,GAAcrB,IAAOC,IAAV,MAEXqB,GAAOtB,IAAOuB,KAAV,MAGKC,GAfM,WACnB,OACE,kBAACH,GAAD,KACE,kBAAC,IAAD,CAAMpC,GAAG,UAAT,kCACA,kBAACqC,GAAD,2BACA,kBAAC,IAAD,CAAMrC,GAAG,WAAT,kHCLAwC,GAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaxL,EAAe,EAAfA,SAO/B,OACE,6BACE,4BACE,kBAAC,IAAD,CAAMyL,QATO,WACjBjK,aAAaC,QAAQ,cAAezB,GAEpCwL,EAAYxL,IAMmB+I,GAAE,WAAM/I,IAChCA,MAOXuL,GAAS1B,aAAe,CACtB7J,SAAU,IAQGuL,U,UCXAG,GAhBM,WAEnB,MAAiB,MADI5C,cAAbD,SAEC,KAIP,6BACE,kBAAC,IAAD,CAAME,GAAG,KACP,kBAAC4C,GAAA,EAAD,MADF,gDCaSC,I,OArBC,WACd,OACE,yBAAKrB,UAAU,yCACb,yBAAKA,UAAU,oBACb,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,kC,gJCXR,IAAM5C,GAAqB,CACzBkE,gBhBqBe,SAAA7M,GAAI,OAAI,SAAAkH,GACvBxE,EAAQ5C,QAAQI,SAASF,GAAMoH,MAAK,SAAAC,GAClC,IAAMC,EAAcD,EAAIxG,KACxBqG,EAASC,GAAyBG,SgBvBpCwF,kBhB2BiB,SAAA9M,GAAI,OAAI,SAAAkH,GACzBxE,EAAQ5C,QAAQK,WAAWH,GAAMoH,MAAK,SAAAC,GACpC,IAAMC,EAAcD,EAAIxG,KACxBqG,EAASC,GAA2BG,UgB5BlCyF,GAAiB,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,MAAOH,EAA0D,EAA1DA,gBAAiBC,EAAyC,EAAzCA,kBAAmB9M,EAAsB,EAAtBA,KAAM+C,EAAgB,EAAhBA,UAQzE,OACE,kBAAC,GAAD,CAAQA,UAAWA,EAAWgB,KAAK,SAAS0I,QARjC,WACX,OAAI1J,EACK+J,EAAkB9M,GAEpB6M,EAAgB7M,KAKpBgN,EACD,kBAACC,GAAA,EAAD,CAAaC,MAAM,QAAQC,OAAO,QAAQC,aAAcrK,EAAY,UAAY,cAKtFgK,GAAelC,aAAe,CAC5BmC,MAAO,EACPhN,KAAM,GACN+C,WAAW,GAWb,IAAM2I,GAASZ,IAAOuC,OAAV,MAMGrC,gBAAQ,iBAAO,KAAKrC,GAApBqC,CAAwC+B,I,yICzCvD,IAAMO,GAAqB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASpF,EAAqB,EAArBA,eACrC,OACE,kBAACqF,GAAD,CAAeD,QAASA,GACtB,kBAAC,KAAD,CACEE,KAAM,kBAACC,GAAA,EAAD,CAAoBN,aAAa,YACvClD,MAAM,wKACNyD,MACE,kBAAC,IAAD,CAAMlB,QAAStE,EAAgB4B,GAAG,SAAShG,KAAK,WAAhD,sCASVuJ,GAAmBzC,aAAe,CAChC0C,SAAS,GAQX,IAAMC,GAAgB1C,IAAOC,IAAV,MAKJuC,M,o8BC5Bf,IAAM3E,GAAqB,CACzBiF,kBlBqEiB,SAAA5N,GAAI,OAAI,SAAAkH,GACzBxE,EAAQjC,eAAe,SAAUT,GAAMoH,MAAK,WAC1CF,EAASC,YkBhDP0G,GAAoB/C,IAAOC,IAAV,MAkDRC,gBAAQ,iBAAO,KAAKrC,GAApBqC,EAtEI,SAAC,GAAiC,IAA/BhL,EAA8B,EAA9BA,KAAM4N,EAAwB,EAAxBA,kBAC1B,OACE,kBAACC,GAAD,KACE,kBAAC,IAAD,CAAMtC,UAAU,sBAAsBxB,GAAE,oBAAe/J,EAAf,UACtC,kBAAC,KAAD,CAAM+D,KAAK,SADb,kFAIA,4BAAQwH,UAAU,qBAAqBkB,QAAS,kBAAMmB,EAAkB5N,IAAO+D,KAAK,UAClF,kBAAC,KAAD,CAAMA,KAAK,WADb,kD,oBCfA+J,GAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,IAAKA,EACH,OAAO,KAET,IAAMC,EAAgBC,aAAoB,IAAIC,KAAKH,GAAO,CACxDI,OAAQC,KACRC,WAAW,IAGb,OACE,2BACE,0BAAMC,SAAUP,GAAOC,KAK7BF,GAAajD,aAAe,CAC1BkD,KAAM,IAOOD,U,qSCzBf,IAAMS,GAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OAAoB,IAAhBA,EAAKC,OAAqB,KAE5B,6BACE,kBAACC,GAAD,KACGF,EAAK1L,KAAI,SAAA6L,GAAG,OACX,wBAAIC,IAAKD,GAAMA,SAOzBJ,GAAQ1D,aAAe,CACrB2D,KAAM,IAOR,IAAME,GAAc5D,IAAO+D,GAAV,MAiBFN,MCtCTO,GAAc,SAAC,GAA4B,IAA1B9N,EAAyB,EAAzBA,SAAUoK,EAAe,EAAfA,SAI/B,OACE,kBAAC,IAAD,CAAMqB,QAJY,WAClBjK,aAAaC,QAAQ,cAAezB,IAGR+I,GAAE,WAAM/I,IACjCoK,IAKP0D,GAAYjE,aAAe,CACzB7J,SAAU,GACVoK,SAAU,MAQG0D,U,uNCff,IAKMnG,GAAqB,CACzBoG,cAAe7G,GACf8G,kBAAmB/D,IAGfgE,GAAS,SAAC,GAAsE,IAApED,EAAmE,EAAnEA,kBAAmBxN,EAAgD,EAAhDA,iBAAkBuN,EAA8B,EAA9BA,cAAe/N,EAAe,EAAfA,SACpE,OACE,kBAACkO,GAAD,KACE,kBAAC,GAAD,KACE,6BACE,kBAAC,GAAD,MACC1N,EACC,oCACE,kBAAC,GAAD,CAAUgL,YAAawC,EAAmBhO,SAAUA,IACpD,kBAAC,GAAD,OAEA,MAEN,6BACGQ,EACC,kBAAC,KAAD,CAAQiL,QAASsC,GACf,uBAAGxD,UAAU,gBAAgB4D,cAAY,SAD3C,mCAIA,kBAAC,GAAD,UAQZF,GAAOpE,aAAe,CACpBrJ,kBAAkB,EAClBR,SAAU,IAUZ,IAAMkO,GAAgBpE,IAAOsE,OAAV,MAWJpE,gBA5DS,SAAC,GAAD,IAAGrJ,EAAH,EAAGA,KAAH,MAAe,CACrCX,SAAUW,EAAKL,YAAYN,SAC3BQ,iBAAkBG,EAAKH,oBA0DemH,GAAzBqC,CAA6CiE,I,SCzDtDI,GAAaC,OAAaC,MAAM,CACpCvO,SAAUsO,OAAaE,SAAS,0FAChCC,SAAUH,OAAaE,SAAS,mFAChCE,eAAgBJ,OACbK,KAAK,kBAAmB,4GAAuB,SAASpP,GACvD,OAAOqP,KAAKC,OAAOJ,WAAalP,KAEjCiP,SAAS,YACZM,MAAOR,OAAaE,SAAS,0EAOzB7G,GAAqB,CACzBoH,oBC1BmB,SAAC7G,GAAD,IAAS8G,EAAT,uDAAmB,aAAUC,EAA7B,uDAA4C,aAA5C,OAAyD,SAAA/I,GAC5EA,EAASC,MACTzE,EAAQlD,KAAKE,SAAS,CACpBuC,KAAM,CACJjB,SAAUkI,EAAOlI,SACjB8O,MAAO5G,EAAO4G,MACdL,SAAUvG,EAAOuG,YAGlBrI,MAAK,SAAAC,GAAQ,IACJpF,EAASoF,EAAIxG,KAAboB,KACRiF,EAASC,GAA6BlF,IACtCgO,OAED1I,OAAM,SAAAhG,GACL2F,EAASC,MADK,IAEN4B,EAAWxH,EAAMyH,SAASnI,KAA1BkI,OACRiH,EAAQjH,GACRkH,SDSJC,sBAAuB/H,IAGnBgI,GAAa,SAAC,GAAkE,IAAhEJ,EAA+D,EAA/DA,oBAAqBrO,EAA0C,EAA1CA,aAAcwO,EAA4B,EAA5BA,sBAUvD,OAAIxO,EACK,kBAAC,GAAD,CAAoB6L,QAAS7L,EAAcyG,eAAgB+H,IAGlE,oCACE,6BACE,wBAAI3E,UAAU,eAAd,sEACA,uBAAGA,UAAU,cAAb,sNAEF,kBAAC,GAAD,CAAOF,UAAU,QACf,kBAAC,IAAD,CACEpB,cAAe,CACbjJ,SAAU,GACVyO,SAAU,GACVC,eAAgB,GAChBI,MAAO,IAETM,iBAAkBf,GAClBhF,SA3BS,SAACnB,EAAD,GAAsD,IAA3CJ,EAA0C,EAA1CA,cAAeD,EAA2B,EAA3BA,UAAWwH,EAAgB,EAAhBA,UACpDN,EACE7G,GACA,SAAAO,GAAG,OAAIZ,EAAUY,MACjB,kBAAMX,GAAc,MAElBpH,GAAc2O,MAuBZ,kBAAC,IAAD,KACE,kBAAC,IAAK/F,KAAN,CAAWC,KAAK,SACd,kBAAC,IAAD,CACE+F,OAAQ,kBAAC,KAAD,CAAMvM,KAAK,SACnB6G,KAAK,QACL7G,KAAK,QACLwG,KAAK,QACLC,YAAY,YAGhB,kBAAC,IAAKF,KAAN,CAAWC,KAAK,YACd,kBAAC,IAAD,CACE+F,OAAQ,kBAAC,KAAD,CAAMvM,KAAK,SACnB6G,KAAK,QACLL,KAAK,WACLC,YAAY,iDAGhB,kBAAC,IAAKF,KAAN,CAAWC,KAAK,YACd,kBAAC,IAAMgG,SAAP,CACED,OAAQ,kBAAC,KAAD,CAAMvM,KAAK,SACnB6G,KAAK,QACLL,KAAK,WACLC,YAAY,0CAGhB,kBAAC,IAAKF,KAAN,CAAWC,KAAK,kBACd,kBAAC,IAAMgG,SAAP,CACED,OAAQ,kBAAC,KAAD,CAAMvM,KAAK,SACnB6G,KAAK,QACLL,KAAK,iBACLC,YAAY,iGAGhB,6BACE,kBAAC,IAAD,CAAcI,KAAK,QAAQ4F,OAAK,GAAhC,iHAIF,yBAAKjF,UAAU,cACb,kBAAC,IAAD,CAAMxB,GAAG,UAAT,0FASdoG,GAAWtF,aAAe,CACxBnJ,cAAc,GASDsJ,oBAlGS,SAAC,GAAD,MAAe,CACrCtJ,aADsB,EAAGC,KACND,gBAiGmBiH,GAAzBqC,CAA6CmF,IE9GtDd,GAAaC,OAAaC,MAAM,CACpCE,SAAUH,OACPmB,IAAI,EAAG,gCACPC,IAAI,GAAI,iCACRf,KACC,OACA,8EACA,SAAApP,GAAK,MAAI,oCAAoCoP,KAAKpP,MAEnDiP,SAAS,YACZM,MAAOR,OACJQ,MAAM,4GACNN,SAAS,0EAOR7G,GAAqB,CACzBgI,UDPgB,SAAAzH,GAAM,OAAI,SAAAhC,GAC1BA,EAASC,MACTzE,EAAQlD,KAAKK,MAAM,CACjBoC,KAAM,CACJ6N,MAAO5G,EAAO4G,MACdL,SAAUvG,EAAOuG,YAGlBrI,MAAK,SAAAC,GACJ,IAAMuJ,EAAWvJ,EAAIxG,KAAKoB,KAC1BO,aAAaC,QAAQ,MAAOmO,EAAS9R,OACrC4D,EAAQmO,SAASD,EAAS9R,OAC1BoI,EAASC,GAAyB,CAAElF,KAAM2O,QAE3CrJ,OAAM,WACLL,EAASC,YCmDA6D,gBAhES,SAAC,GAAD,MAAe,CACrC8E,MADsB,EAAGnO,KACbL,YAAYwO,SA+DcnH,GAAzBqC,EAxDG,SAAC,GAA0B,IAAxB2F,EAAuB,EAAvBA,UAAWb,EAAY,EAAZA,MAI9B,OACE,oCACE,6BACE,wBAAIvE,UAAU,eAAd,oFACA,uBAAGA,UAAU,cAAb,wLAEF,kBAAC,GAAD,CAAOF,UAAU,QACf,kBAAC,IAAD,CACEpB,cAAe,CACbwF,SAAU,GACVK,MAAM,GAAD,OAAKA,GAAS,KAErBM,iBAAkBf,GAClBhF,SAhBS,SAACnB,EAAD,GAA2C,IAAhCJ,EAA+B,EAA/BA,cAAeD,EAAgB,EAAhBA,UACzC8H,EAAUzH,EAAQJ,EAAeD,KAiB3B,kBAAC,IAAD,KACE,kBAAC,IAAKyB,KAAN,CAAWC,KAAK,SACd,kBAAC,IAAD,CACE+F,OAAQ,kBAAC,KAAD,CAAMvM,KAAK,SACnB6G,KAAK,QACL7G,KAAK,QACLwG,KAAK,QACLC,YAAY,YAGhB,kBAAC,IAAKF,KAAN,CAAWC,KAAK,YACd,kBAAC,IAAMgG,SAAP,CACED,OAAQ,kBAAC,KAAD,CAAMvM,KAAK,SACnB6G,KAAK,QACLL,KAAK,WACLC,YAAY,0CAGhB,6BACE,kBAAC,IAAD,CAAcI,KAAK,QAAQ4F,OAAK,GAAhC,qFAIF,yBAAKjF,UAAU,cACb,kBAAC,IAAD,CAAMxB,GAAG,WAAT,wH,s4BCvEd,IAmCM+G,GAAehG,IAAOC,IAAV,MAOZgG,GAAcjG,IAAOC,IAAV,MAgBXiG,GAAgBlG,IAAOC,IAAV,MAsBJkG,GAhFK,SAAC,GAAiB,IAAf5Q,EAAc,EAAdA,QAKrB,OACE,kBAACyQ,GAAD,KACE,kBAACE,GAAD,KACE,yBAAKzF,UAAU,mBACb,0BAAMA,UAAU,iBAAhB,mCACA,kBAAC,GAAD,CAAavK,SAAUX,EAAQ6D,OAAOlD,UAAWX,EAAQ6D,OAAOlD,WAElE,kBAAC,GAAD,CAAc+M,KAAM1N,EAAQ6Q,aAE9B,kBAACH,GAAD,KACE,kBAAC,IAAD,CAAMtE,QAdW,WACrBjK,aAAaC,QAAQ,cAAepC,EAAQL,OAaT+J,GAAE,oBAAe1J,EAAQL,OACtD,6BACE,wBAAIuL,UAAU,kBAAkBlL,EAAQ6J,SAG5C,kBAAC,GAAD,CAASsE,KAAMnO,EAAQ+J,UACvB,kBAAC,GAAD,CACErH,UAAW1C,EAAQ0C,UACnBiK,MAAO3M,EAAQ2C,eACfhD,KAAMK,EAAQL,U,wZCrBxB,IAOM2I,GAAqB,CACzBqG,kBAAmB/D,GACnBY,sBAAuB5E,GACvBkK,kBAAmB3J,IAGf4J,G,6LAGFvF,EADkC+D,KAAKpE,MAA/BK,2B,+BAIA,IAAD,EACgE+D,KAAKpE,MAApE3I,EADD,EACCA,SAAUmM,EADX,EACWA,kBAAmBmC,EAD9B,EAC8BA,kBAAmBjO,EADjD,EACiDA,WACxD,OACE,oCACE,kBAACmO,GAAD,CAAgBnO,WAAYA,GAC1B,kBAAC,GAAD,OAEF,kBAACoO,GAAD,CAAgBpO,WAAYA,GACzBL,EAASC,KAAI,SAAAzC,GACZ,OACE,kBAAC,GAAD,CACEA,QAASA,EACTmH,WAAY2J,EACZI,eAAgBvC,EAChBJ,IAAKvO,EAAQL,WAKrB,kBAACwR,GAAD,CAAmBtO,WAAYA,GAC7B,kBAAC,GAAD,Y,GA1BeuO,IAAMC,WAiC/BN,GAAWvG,aAAe,CACxB3H,YAAY,GAWd,IAAMmO,GAAiBvG,IAAOC,IAAV,MACP,SAAAS,GAAK,OAAKA,EAAMtI,WAAa,QAAU,UAO9CsO,GAAoB1G,IAAOC,IAAV,MACV,SAAAS,GAAK,OAAKA,EAAMtI,WAAa,GAAM,KAI1CoO,GAAiBxG,IAAOC,IAAV,MACP,SAAAS,GAAK,OAAKA,EAAMtI,WAAa,GAAM,KAMjC8H,gBA9ES,SAAC,GAAkB,IAAhBnI,EAAe,EAAfA,SACzB,MAAO,CACLA,SAAUA,EAASA,SACnBK,WAAYL,EAASK,cA2EeyF,GAAzBqC,CAA6CoG,ICjE7CO,GAnBQ,SAAC,GAA4B,IAA1B/N,EAAyB,EAAzBA,QACxB,OADiD,EAAhBD,UAExB,kBAAC,GAAD,MAGP,6BACE,6BACE,yBAAKiO,IAAKhO,EAAQ5C,SAAUkM,MAAM,MAAMC,OAAO,MAAM0E,IAAKjO,EAAQkO,SAEpE,6BACE,4BAAKlO,EAAQ5C,UACb,6BACE,+J,0vBCFV,IAAM+Q,GAAiB,SAAC,GAAuC,IAArC1R,EAAoC,EAApCA,QAAS6C,EAA2B,EAA3BA,WAAYlC,EAAe,EAAfA,SAC7C,GAAIkC,EACF,OAAO,kBAAC,GAAD,MAET,IAAM8O,EAAYhR,IAAaX,EAAQ6D,OAAOlD,SAC9C,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,yBAAKuK,UAAU,yBACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CAAavK,SAAUX,EAAQ6D,OAAOlD,UACpC,yBACEuK,UAAU,uBACVsG,IAAKxR,EAAQ6D,OAAO4N,MACpBF,IAAKvR,EAAQ6D,OAAOlD,SACpBkM,MAAM,KACNC,OAAO,QAGX,6BACE,kBAAC,GAAD,CAAanM,SAAUX,EAAQ6D,OAAOlD,UACnCX,EAAQ6D,OAAOlD,UAElB,6BACE,kBAAC,GAAD,CAAc+M,KAAM1N,EAAQ6Q,eAIlC,8BAAO7Q,EAAQ6D,OAAO+N,MAEvBD,GAAa,kBAAC,GAAD,CAAYhS,KAAMK,EAAQL,QAE1C,kBAAC,GAAD,KACE,wBAAIuL,UAAU,kBAAkBlL,EAAQ6J,OACxC,kBAAC,GAAD,CAASsE,KAAMnO,EAAQ+J,UACvB,2BAAI/J,EAAQV,MACZ,6BAAMU,EAAQ8J,aACd,6BACE,kBAAC,GAAD,CACE6C,MAAO3M,EAAQ2C,eACfhD,KAAMK,EAAQL,KACd+C,UAAW1C,EAAQ0C,gBAQ/BgP,GAAelH,aAAe,CAC5B3H,YAAY,EACZlC,SAAU,IASZ,IAAMgQ,GAAgBlG,IAAOC,IAAV,MAmBbjL,GAAUgL,IAAOC,IAAV,MAQPgG,GAAcjG,IAAOC,IAAV,MAOFgH,M,q6BCrGf,IAAMG,GAAc,SAAC,GAA2D,IAAzD/Q,EAAwD,EAAxDA,QAASgR,EAA+C,EAA/CA,UAAWnS,EAAoC,EAApCA,KAAMoS,EAA8B,EAA9BA,cACzCJ,EADuE,EAAfhR,WAC/BG,EAAQ+C,OAAOlD,SAC9C,OACE,kBAACE,GAAD,KACE,kBAACmR,GAAD,KACE,yBAAK9G,UAAU,kBACb,kBAAC,GAAD,CAAavK,SAAUG,EAAQ+C,OAAOlD,UACpC,yBACEuK,UAAU,sBACVsG,IAAK1Q,EAAQ+C,OAAO4N,MACpBF,IAAKzQ,EAAQ+C,OAAOlD,SACpBkM,MAAM,KACNC,OAAO,QAGX,kBAAC,GAAD,CAAanM,SAAUG,EAAQ+C,OAAOlD,UACpC,0BAAMuK,UAAU,uBAAuBpK,EAAQ+C,OAAOlD,WAExD,yBAAKuK,UAAU,iBACb,kBAAC,GAAD,CAAcwC,KAAM5M,EAAQ+P,cAG/Bc,EACC,6BACE,4BACEvF,QAAS,kBAAM2F,EAAcpS,EAAMmS,IACnC5G,UAAU,sBACVxH,KAAK,UAEL,kBAAC,KAAD,CAAMwH,UAAU,uBAAuBxH,KAAK,aAG9C,MAEN,kBAACuO,GAAD,KAAcnR,EAAQxB,QAK5BuS,GAAYrH,aAAe,CACzBsH,UAAW,EACXnS,KAAM,GACNgB,SAAU,IAWZ,IAAME,GAAU4J,IAAOC,IAAV,MAKPsH,GAAgBvH,IAAOC,IAAV,MAuCbuH,GAAcxH,IAAOC,IAAV,MAIFmH,M,qXCtGTK,G,YACJ,aAAe,IAAD,8BACZ,+CAMFC,WAAa,SAAAC,GAAU,IAAD,EACY,EAAKjH,MAA7BkH,EADY,EACZA,cAAe1S,EADH,EACGA,KACfO,EAAU,EAAKuB,MAAfvB,MACRkS,EAAME,iBACND,EAAc1S,EAAMO,GACpB,EAAKqS,SAAS,CAAErS,MAAO,MAZX,EAedsS,cAAgB,YAAiB,IAAdC,EAAa,EAAbA,OACjB,EAAKF,SAAS,CAAErS,MAAOuS,EAAOvS,SAd9B,EAAKuB,MAAQ,CACXvB,MAAO,IAHG,E,sEAmBJ,IACAA,EAAUqP,KAAK9N,MAAfvB,MACAe,EAAgBsO,KAAKpE,MAArBlK,YACR,OACE,kBAACyR,GAAD,KACE,kBAAC,GAAD,CAAa/R,SAAUM,EAAYN,UACjC,yBACEuK,UAAU,sBACVsG,IAAKvQ,EAAYwQ,MACjBF,IAAKtQ,EAAYN,SACjBkM,MAAM,KACNC,OAAO,QAGX,0BAAM9C,SAAUuF,KAAK4C,WAAYjH,UAAU,iBACzC,kBAAC,KAAMd,SAAP,CAAgBC,KAAM,EAAGsB,SAAU4D,KAAKiD,cAAetS,MAAOA,IAC9D,kBAAC,KAAD,CAAQyS,SAAS,UAAjB,gE,GApCevB,IAAMC,WA2C/Ba,GAAW1H,aAAe,CACxB7K,KAAM,IASR,IAAM+S,GAAUjI,IAAOC,IAAV,MAkBEwH,M,4PCrEf,IAQM5J,GAAqB,CACzBsK,qBCK2B,SAACjT,EAAMO,GAAP,OAAiB,SAAA2G,GAC5CA,EAASC,MACTzE,EAAQxB,QAAQtB,KAAKI,EAAM,CACzBmB,QAAS,CACPxB,KAAMY,KAEP6G,MAAK,SAAAC,GAAQ,IACNlG,EAAYkG,EAAIxG,KAAhBM,QACR+F,EAASC,GAAgChG,SDZ3C+R,qBCH2B,SAAClT,EAAMoB,GAAP,OAAc,SAAA8F,GACzCA,EAASC,MACTzE,EAAQxB,QAAQjB,OAAOD,EAAMoB,GAAIgG,MAAK,WACpCF,EAASC,GAAkC/F,UDGzC+R,GAAc,SAAC,GAQd,IAPLpO,EAOI,EAPJA,SACAzD,EAMI,EANJA,YACA2R,EAKI,EALJA,qBACAjT,EAII,EAJJA,KACAkT,EAGI,EAHJA,qBACAhQ,EAEI,EAFJA,WACA1B,EACI,EADJA,iBAEA,GAAI0B,GAAc1B,EAChB,OAAO,KAGT,IAAM4R,EACJ,kBAACC,GAAD,KACGtO,EAASjC,KAAI,SAAA3B,GAAO,OACnB,wBAAIyN,IAAKzN,EAAQC,IACf,kBAAC,GAAD,CACEJ,SAAUM,EAAYN,SACtBoR,cAAec,EACf/R,QAASA,EACTnB,KAAMA,EACNmS,UAAWhR,EAAQC,UAM7B,OACE,kBAACkS,GAAD,KACE,kBAAC,GAAD,CAAYZ,cAAeO,EAAsBjT,KAAMA,EAAMsB,YAAaA,IAC1E,6BAA0B,IAApByD,EAAS0J,OAAe,KAAO2E,KAK3CD,GAAYtI,aAAe,CACzB7K,KAAM,GACNkD,YAAY,GAYd,IAAMmQ,GAAOvI,IAAO+D,GAAV,MAMJyE,GAAkBxI,IAAOC,IAAV,MAMNC,gBA3ES,SAAC,GAAD,IAAG3K,EAAH,EAAGA,QAASsB,EAAZ,EAAYA,KAAMoD,EAAlB,EAAkBA,SAAlB,MAAkC,CACxD/E,KAAMK,EAAQ4D,eAAejE,KAC7BkD,WAAY7C,EAAQ6C,WACpB5B,YAAaK,EAAKL,YAClByD,SAAUA,EAASG,YACnB1D,iBAAkBG,EAAKH,oBAsEemH,GAAzBqC,CAA6CmI,I,42BE3E5D,IAIM3T,GAAO,SAAC,GACZ,OADqC,EAAvBgC,iBACe,kBAAC,IAAD,CAAUuI,GAAG,MAExC,kBAAC,GAAD,KACE,6BACE,kBAAC,IAAD,CAAOwJ,OAAK,EAACC,KAAK,SAASC,UAAWC,KACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWtD,QAM/C3Q,GAAKqL,aAAe,CAClBrJ,kBAAkB,GAOpB,IAAMwI,GAAcc,IAAOC,IAAV,MAsDFC,gBA9ES,SAAC,GAAD,MAAe,CACrCxJ,iBADsB,EAAGG,KACFH,oBA6EVwJ,CAAyBxL,I,8FClFxC,IAWMmU,GAAO7I,IAAO8I,KAAV,MAIKC,GAfF,WACX,OACE,oCACE,kBAAC,GAAD,MACA,kBAACF,GAAD,KACE,kBAAC,GAAD,S,4FCDR,IAIMG,GAAa,SAAC,GAClB,OAD2C,EAAvBtS,iBAIlB,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,QANwB,kBAAC,IAAD,CAAUuI,GAAG,YAY7C+J,GAAWjJ,aAAe,CACxBrJ,kBAAkB,GAOpB,IAAMuR,GAAUjI,IAAOC,IAAV,MAIEC,gBA7BS,SAAC,GAAD,MAAe,CACrCxJ,iBADsB,EAAGG,KACFH,oBA4BVwJ,CAAyB8I,ICzBlCnL,GAAqB,CACzBsC,cACA8I,ajCCmB,iBAAO,CAC1BhQ,KAAM,mBiCCFjD,G,6LAIFmK,EAFuB2E,KAAKpE,MAApBP,YACYzI,aAAawR,QAAQ,kB,8CAMzCD,EADyBnE,KAAKpE,MAAtBuI,kB,+BAIA,IAAD,EACwBnE,KAAKpE,MAA5B5H,EADD,EACCA,QAASD,EADV,EACUA,UACjB,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAgBC,QAASA,EAASD,UAAWA,U,GAlBjC8N,IAAMC,WAyBb1G,gBAnCS,SAAC,GAAD,IAAGnH,EAAH,EAAGA,YAAH,MAAsB,CAC5CD,QAASC,EAAYD,QACrBD,UAAWE,EAAYF,aAiCegF,GAAzBqC,CAA6ClK,I,mKChC5D,IAOM6H,GAAqB,CACzBwI,kBAAmB3J,GACnByM,sBLhB4B,SAAAjU,GAAI,OAAI,SAAAkH,GACpCA,EAASC,MACTzE,EAAQxB,QAAQ7B,IAAIW,GACjBoH,MAAK,SAAAC,GACJ,IAAMC,EAAcD,EAAIxG,KACxBqG,EAASC,GAA6BG,OAEvCC,OAAM,WACLL,EAASC,WKSbuC,kBAAmB1C,IAGflH,G,4LACiB,IAAD,EACmC8P,KAAKpE,MAAlD2F,EADU,EACVA,kBAAmB8C,EADT,EACSA,sBACrBC,EAAc1R,aAAawR,QAAQ,eACzC7C,EAAkB+C,GAClBD,EAAsBC,K,+BAGd,IAAD,EACoEtE,KAAKpE,MAAxEnL,EADD,EACCA,QAAS6C,EADV,EACUA,WAAYlC,EADtB,EACsBA,SAAUwD,EADhC,EACgCA,aAAckF,EAD9C,EAC8CA,kBACrD,MAAqB,YAAjBlF,GACFkF,IACO,kBAAC,IAAD,CAAUK,GAAG,OAGpB,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAgB/I,SAAUA,EAAUX,QAASA,EAAS6C,WAAYA,IAClE,kBAAC,GAAD,a,GApBUuO,IAAMC,WA4B5B5R,GAAQ+K,aAAe,CACrB3H,YAAY,EACZlC,SAAU,GACVwD,aAAc,IAahB,IAAMmP,GAAO7I,IAAOC,IAAV,MAOKC,gBAhES,SAAC,GAAD,IAAG3K,EAAH,EAAGA,QAASsB,EAAZ,EAAYA,KAAZ,MAAwB,CAC9CtB,QAASA,EAAQ4D,eACjBf,WAAY7C,EAAQ6C,WACpBlC,SAAUW,EAAKL,YAAYN,SAC3BwD,aAAcnE,EAAQmE,gBA4DgBmE,GAAzBqC,CAA6ClL,I,4FClE5D,IAIMqU,GAAc,SAAC,GACnB,OAD4C,EAAvB3S,iBAGnB,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,QALwB,kBAAC,IAAD,CAAUuI,GAAG,YAW7CoK,GAAYtJ,aAAe,CACzBrJ,kBAAkB,GAOpB,IAAMuR,GAAUjI,IAAOC,IAAV,MAGEC,gBA3BS,SAAC,GAAD,MAAe,CACrCxJ,iBADsB,EAAGG,KACFH,oBA0BVwJ,CAAyBmJ,ICjCzBvH,MCiBTjE,I,cAAqB,CACzByL,mBjBwBkB,kBAAM,SAAAlN,GACxB,IAAMpI,EAAQ0D,aAAawR,QAAQ,OAC/BlV,GACF4D,EAAQ7D,SAASC,GAEnBoI,EAASC,MACTzE,EAAQlD,KAAKC,UACV2H,MAAK,SAAAC,GACJ,IAAMpF,EAAOoF,EAAIxG,KACjBqG,EAASC,GAAyBlF,OAEnCsF,OAAM,WACLL,EAASC,aiBjCTkN,G,6LAGFD,EAD+BxE,KAAKpE,MAA5B4I,wB,+BAMR,OADuBxE,KAAKpE,MAApB/J,WAEC,kBAAC,GAAD,MAIP,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8R,OAAK,EAACC,KAAK,IAAIC,UAAWI,KACjC,kBAAC,IAAD,CAAOL,KAAM,CAAC,SAAU,WAAYC,UAAWjU,KAC/C,kBAAC,IAAD,CAAOgU,KAAK,OAAOC,UAAWK,KAC9B,kBAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,aAAaC,UAAW3S,KAC1C,kBAAC,IAAD,CAAOyS,OAAK,EAACC,KAAK,kBAAkBc,OAAQ,kBAAM,kBAAC,GAAD,SAClD,kBAAC,IAAD,CAAOd,KAAK,uBAAuBC,UAAWU,W,GApBtC1C,IAAMC,WAgCT1G,gBA3CS,SAAC,GAAc,IAAZrJ,EAAW,EAAXA,KACzB,MAAO,CACLH,iBAAkBG,EAAKH,iBACvBC,WAAYE,EAAKF,cAwCmBkH,GAAzBqC,CAA6CqJ,IC3CxCE,QACW,cAA7B/O,OAAOgP,SAASC,UAEe,UAA7BjP,OAAOgP,SAASC,UAEhBjP,OAAOgP,SAASC,SAASC,MACvB,2DCTNC,IAASL,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU3O,MAAOA,GACf,kBAAC,GAAD,QAGJiP,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5N,MAAK,SAAA6N,GACJA,EAAaC,gBAEd3N,OAAM,SAAAhG,GACLgC,QAAQhC,MAAMA,EAAM4T,c","file":"static/js/main.62216ebe.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\r\nclass BlogApi {\r\n  setToken = token => {\r\n    if (token) {\r\n      axios.defaults.headers.common.Authorization = `Token ${token}`;\r\n    }\r\n  };\r\n\r\n  getArticles = (page = 0, limit = 10) =>\r\n    axios.get('/articles', {\r\n      params: {\r\n        limit,\r\n        offset: page * 10,\r\n      },\r\n    });\r\n\r\n  Auth = {\r\n    current: () => axios.get('/user'),\r\n    register: body => axios.post('/users', body),\r\n    login: body => axios.post('/users/login', body),\r\n  };\r\n\r\n  Article = {\r\n    del: slug => axios.delete(`/articles/${slug}`),\r\n    favorite: slug => axios.post(`/articles/${slug}/favorite`),\r\n    unfavorite: slug => axios.delete(`/articles/${slug}/favorite`),\r\n    create: article => axios.post('/articles', { article }),\r\n    edit: (slug, value) => axios.put(`/articles/${slug}`, { article: value }),\r\n  };\r\n\r\n  currentArticle = (requestMethod, slug, body = {}) => {\r\n    return axios({\r\n      method: requestMethod,\r\n      url: `/articles/${slug}`,\r\n      data: body,\r\n    });\r\n  };\r\n\r\n  Profile = {\r\n    follow: username => axios.post(`/profiles/${username}/follow`),\r\n    get: username => axios.get(`/profiles/${username}`),\r\n    unfollow: username => axios.delete(`/profiles/${username}/follow`),\r\n  };\r\n\r\n  Comment = {\r\n    get: slug => axios.get(`/articles/${slug}/comments`),\r\n    post: (slug, comment) => axios.post(`/articles/${slug}/comments`, comment),\r\n    delete: (slug, id) => axios.delete(`/articles/${slug}/comments/${id}`),\r\n  };\r\n}\r\n\r\nexport default new BlogApi();\r\n","import { handleActions } from 'redux-actions';\r\nimport blogApi from '../../services/services';\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  error: null,\r\n  isAuthorizedUser: false,\r\n  inProgress: false,\r\n  isRegistered: false,\r\n};\r\n\r\nconst auth = handleActions(\r\n  {\r\n    FETCH_USER_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_USER_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        currentUser: payload.user,\r\n        inProgress: false,\r\n        isAuthorizedUser: true,\r\n      };\r\n    },\r\n    FETCH_USER_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n      };\r\n    },\r\n    FETCH_REGISTER_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        currentUser: payload,\r\n        isRegistered: true,\r\n      };\r\n    },\r\n    FETCH_AUTH_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_AUTH_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        currentUser: payload.user,\r\n        inProgress: false,\r\n        isAuthorizedUser: true,\r\n      };\r\n    },\r\n    FETCH_AUTH_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n      };\r\n    },\r\n    LOGOUT: () => {\r\n      localStorage.setItem('jwt', '');\r\n      blogApi.setToken(null);\r\n      return { ...initialState };\r\n    },\r\n    RESET_FORM: state => {\r\n      return {\r\n        ...state,\r\n        isRegistered: false,\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default auth;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n  articles: [],\r\n  isProgress: false,\r\n};\r\n\r\nconst like = (articles, payload) =>\r\n  articles.map(article => {\r\n    if (article.slug === payload.article.slug) {\r\n      return {\r\n        ...article,\r\n        favorited: payload.article.favorited,\r\n        favoritesCount: payload.article.favoritesCount,\r\n      };\r\n    }\r\n    return article;\r\n  });\r\n\r\nconst articles = handleActions(\r\n  {\r\n    FETCH_ARTICLES_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_ARTICLES_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articles: payload.articles,\r\n        articlesCount: payload.articlesCount,\r\n        isProgress: false,\r\n      };\r\n    },\r\n    FETCH_ARTICLES_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n      };\r\n    },\r\n    ARTICLE_FAVORITED: (state, { payload }) => {\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        articles: like(state.articles, payload),\r\n      };\r\n    },\r\n    ARTICLE_UNFAVORITED: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articles: like(state.articles, payload),\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default articles;\r\n","const inicialState = {\r\n  isLoading: false,\r\n  profile: {},\r\n};\r\n\r\nconst userProfile = (state = inicialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_PROFILE_REQUEST':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case 'FETCH_PROFILE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        profile: action.payload.profile,\r\n        isLoading: false,\r\n      };\r\n    case 'RESET_PROFILE':\r\n      return {\r\n        ...inicialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userProfile;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n  isProgress: false,\r\n  isSuccess: null,\r\n  articleCurrent: {\r\n    author: {},\r\n  },\r\n};\r\nconst article = handleActions(\r\n  {\r\n    FETCH_ARTICLE_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_ARTICLE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n        isProgress: false,\r\n      };\r\n    },\r\n\r\n    FETCH_ARTICLE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n      };\r\n    },\r\n    FETCH_CREATE_ARTICLE_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_CREATE_ARTICLE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n        isProgress: false,\r\n        articleState: 'created',\r\n      };\r\n    },\r\n    FETCH_CREATE_ARTICLE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    FETCH_UPDATE_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_UPDATE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n        isProgress: false,\r\n        articleState: 'edited',\r\n      };\r\n    },\r\n    FETCH_UPDATE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    ARTICLE_FAVORITED: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: {\r\n          ...payload.article,\r\n          favorited: payload.article.favorited,\r\n          favoritesCount: payload.article.favoritesCount,\r\n        },\r\n      };\r\n    },\r\n    ARTICLE_UNFAVORITED: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: {\r\n          ...payload.article,\r\n          favorited: payload.article.favorited,\r\n          favoritesCount: payload.article.favoritesCount,\r\n        },\r\n      };\r\n    },\r\n    DELETE_ARTICLE: () => {\r\n      return {\r\n        ...initialState,\r\n        articleState: 'deleted',\r\n      };\r\n    },\r\n    RESET_STATE: () => {\r\n      return initialState;\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default article;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n  commentList: [],\r\n  isProgress: false,\r\n};\r\n\r\nconst comments = handleActions(\r\n  {\r\n    FETCH_COMMENTS_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_COMMENTS_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        commentList: payload.comments,\r\n      };\r\n    },\r\n    FETCH_ADD_COMMENTS_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        commentList: [payload, ...state.commentList],\r\n      };\r\n    },\r\n    FETCH_COMMENTS_DELETE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        commentList: state.commentList.filter(({ id }) => id !== payload),\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default comments;\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nimport articles from './article-list';\r\nimport userProfile from './profile';\r\nimport article from './article';\r\nimport comments from './comments';\r\n\r\nexport default combineReducers({ auth, articles, article, userProfile, comments });\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import { createAction } from 'redux-actions';\r\n\r\n// аctions getting all the articles\r\nexport const fetchArticlesRequest = createAction('FETCH_ARTICLES_REQUEST');\r\nexport const fetchArticlesSuccess = createAction('FETCH_ARTICLES_SUCCESS');\r\nexport const fetchArticlesFailure = createAction('FETCH_ARTICLES_FAILURE');\r\n\r\n// actions to get the current article\r\nexport const fetchArticleRequest = createAction('FETCH_ARTICLE_REQUEST');\r\nexport const fetchArticleSuccess = createAction('FETCH_ARTICLE_SUCCESS');\r\nexport const fetchArticleFailure = createAction('FETCH_ARTICLE_FAILURE');\r\n\r\n// action article creation\r\nexport const fetchCreateArticleRequest = createAction('FETCH_CREATE_ARTICLE_REQUEST');\r\nexport const fetchCreateArticleSuccess = createAction('FETCH_CREATE_ARTICLE_SUCCESS');\r\nexport const fetchCreateArticleFailure = createAction('FETCH_CREATE_ARTICLE_FAILURE');\r\n\r\n// action article update\r\nexport const fetchUpdateRequest = createAction('FETCH_UPDATE_REQUEST');\r\nexport const fetchUpdateSuccess = createAction('FETCH_UPDATE_SUCCESS');\r\nexport const fetchUpdateFailure = createAction('FETCH_UPDATE_FAILURE');\r\n\r\n// action like dislike\r\nexport const articleFavorited = createAction('ARTICLE_FAVORITED');\r\nexport const articleUnfavorited = createAction('ARTICLE_UNFAVORITED');\r\n\r\nexport const deleteArticle = createAction('DELETE_ARTICLE');\r\n\r\nexport const resetState = createAction('RESET_STATE');\r\n","import blogApi from '../../../services/services';\r\nimport * as actions from './article';\r\n\r\nconst getAllArticles = page => dispatch => {\r\n  dispatch(actions.fetchArticlesRequest());\r\n  blogApi\r\n    .getArticles(page)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchArticlesSuccess(articleData));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchArticlesFailure());\r\n    });\r\n};\r\n\r\nconst getArticle = slug => dispatch => {\r\n  localStorage.setItem('articleSlug', slug);\r\n  dispatch(actions.fetchArticleRequest());\r\n  blogApi\r\n    .currentArticle('get', slug)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchArticleSuccess(articleData));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchArticleFailure());\r\n    });\r\n};\r\n\r\nconst favorite = slug => dispatch => {\r\n  blogApi.Article.favorite(slug).then(res => {\r\n    const articleData = res.data;\r\n    dispatch(actions.articleFavorited(articleData));\r\n  });\r\n};\r\n\r\nconst unfavorite = slug => dispatch => {\r\n  blogApi.Article.unfavorite(slug).then(res => {\r\n    const articleData = res.data;\r\n    dispatch(actions.articleUnfavorited(articleData));\r\n  });\r\n};\r\n\r\nconst articleCreate = (article, setErrors, setSubmitting) => dispatch => {\r\n  dispatch(actions.fetchCreateArticleRequest());\r\n  blogApi.Article.create(article)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      setSubmitting();\r\n      dispatch(actions.fetchCreateArticleSuccess(articleData));\r\n      dispatch(actions.resetState());\r\n    })\r\n    .catch(error => {\r\n      const { errors } = error.response.data;\r\n      dispatch(actions.fetchCreateArticleFailure());\r\n      setErrors(errors);\r\n      setSubmitting();\r\n    });\r\n};\r\nconst editArticle = (slug, values) => dispatch => {\r\n  dispatch(actions.fetchUpdateRequest());\r\n  const filteredValues = Object.entries(values).reduce(\r\n    (acc, [field, value]) => (value === '' ? acc : { ...acc, [field]: value }),\r\n    {}\r\n  );\r\n  blogApi\r\n    .currentArticle('put', slug, filteredValues)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchUpdateSuccess(articleData));\r\n      dispatch(actions.resetState());\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch(actions.fetchUpdateFailure());\r\n    });\r\n};\r\n\r\nconst delArticle = slug => dispatch => {\r\n  blogApi.currentArticle('delete', slug).then(() => {\r\n    dispatch(actions.deleteArticle());\r\n  });\r\n};\r\n\r\nexport { getAllArticles, favorite, unfavorite, getArticle, articleCreate, editArticle, delArticle };\r\n","import { createAction } from 'redux-actions';\r\n\r\n// registration actions\r\nexport const fetchRegisterRequest = createAction('FETCH_REGISTER_REQUEST');\r\nexport const fetchRegisterSuccess = createAction('FETCH_REGISTER_SUCCESS');\r\nexport const fetchRegisterFailure = createAction('FETCH_REGISTER_FAILURE');\r\n\r\n// authorization actions\r\nexport const fetchAuthRequest = createAction('FETCH_AUTH_REQUEST');\r\nexport const fetchAuthSuccess = createAction('FETCH_AUTH_SUCCESS');\r\nexport const fetchAuthFailure = createAction('FETCH_AUTH_FAILURE');\r\n\r\n// current user actions\r\nexport const fetchUserRequest = createAction('FETCH_USER_REQUEST');\r\nexport const fetchUserSuccess = createAction('FETCH_USER_SUCCESS');\r\nexport const fetchUserFailure = createAction('FETCH_USER_FAILURE');\r\n\r\nexport const logout = createAction('LOGOUT');\r\nexport const resetFormState = createAction('RESET_FORM');\r\n","import { createAction } from 'redux-actions';\r\n\r\n// get comments from an Article\r\nexport const fetchCommentsRequest = createAction('FETCH_COMMENTS_REQUEST');\r\nexport const fetchCommentsSuccess = createAction('FETCH_COMMENTS_SUCCESS');\r\nexport const fetchCommentsFailure = createAction('FETCH_COMMENTS_FAILURE');\r\n\r\n// delete comment\r\nexport const fetchCommentDeleteRequest = createAction('FETCH_COMMENTS_DELETE_REQUEST');\r\nexport const fetchCommentDeleteSuccess = createAction('FETCH_COMMENTS_DELETE_SUCCESS');\r\nexport const fetchCommentDeleteFailure = createAction('FETCH_COMMENTS_DELETE_FAILURE');\r\n\r\n// add comments to an article\r\nexport const fetchAddCommentsRequest = createAction('FETCH_ADD_COMMENTS_REQUEST');\r\nexport const fetchAddCommentsSuccess = createAction('FETCH_ADD_COMMENTS_SUCCESS');\r\nexport const fetchAddCommentsFailure = createAction('FETCH_ADD_COMMENTS_FAILURE');\r\n","import React from 'react';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\nimport { Formik } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { articleCreate, editArticle, resetState } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ article: { articleCurrent, articleState } }) => ({\r\n  articleCurrent: {\r\n    title: articleCurrent.title,\r\n    description: articleCurrent.description,\r\n    body: articleCurrent.body,\r\n    tagList: articleCurrent.tagList,\r\n    slug: articleCurrent.slug,\r\n  },\r\n  articleState,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  articleCreateConnect: articleCreate,\r\n  editArticleConnect: editArticle,\r\n  resetStateConnect: resetState,\r\n};\r\n\r\nconst PostForm = ({\r\n  articleCreateConnect,\r\n  editArticleConnect,\r\n  articleCurrent,\r\n  articleState,\r\n  resetStateConnect,\r\n}) => {\r\n  const { pathname } = useLocation();\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    if (pathname === '/add') {\r\n      articleCreateConnect(\r\n        values,\r\n        error => setErrors(error),\r\n        () => setSubmitting(false)\r\n      );\r\n    } else {\r\n      editArticleConnect(articleCurrent.slug, values);\r\n    }\r\n  };\r\n\r\n  const setInitialValues = currentPathname => {\r\n    if (currentPathname === '/add') {\r\n      return {\r\n        title: '',\r\n        description: '',\r\n        body: '',\r\n        tagList: '',\r\n      };\r\n    }\r\n    return {\r\n      title: articleCurrent.title,\r\n      description: articleCurrent.description,\r\n      body: articleCurrent.body,\r\n      tagList: articleCurrent.tagList,\r\n    };\r\n  };\r\n  if (articleState === 'created' || articleState === 'edited') {\r\n    localStorage.setItem('articleSlug', articleCurrent.slug);\r\n    resetStateConnect();\r\n    return <Redirect to={`/articles/${articleCurrent.slug}`} />;\r\n  }\r\n  return (\r\n    <WrapperForm>\r\n      <Formik initialValues={setInitialValues(pathname)} onSubmit={onSubmit}>\r\n        <Form>\r\n          <Form.Item name=\"title\">\r\n            <Input name=\"title\" placeholder=\"Заголовок поста\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"description\">\r\n            <Input name=\"description\" placeholder=\"о чем этот пост?\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"body\">\r\n            <Input.TextArea rows={5} name=\"body\" placeholder=\"напишите свой пост\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"tagList\">\r\n            <Input name=\"tagList\" placeholder=\"введите теги\" />\r\n          </Form.Item>\r\n          <WrapperButton>\r\n            <SubmitButton size=\"large\">Опубликовать</SubmitButton>\r\n          </WrapperButton>\r\n        </Form>\r\n      </Formik>\r\n    </WrapperForm>\r\n  );\r\n};\r\n\r\nPostForm.defaultProps = {\r\n  articleState: '',\r\n};\r\n\r\nPostForm.propTypes = {\r\n  articleCreateConnect: PropTypes.func.isRequired,\r\n  editArticleConnect: PropTypes.func.isRequired,\r\n  articleState: PropTypes.string,\r\n  resetStateConnect: PropTypes.func.isRequired,\r\n  articleCurrent: PropTypes.objectOf(PropTypes.string).isRequired,\r\n};\r\n\r\nconst WrapperForm = styled.div`\r\n  width: 50%;\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst WrapperButton = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import { createAction } from 'redux-actions';\r\nimport blogApi from '../../services/services';\r\n\r\n// registration actions\r\nexport const fetchRegisterRequest = createAction('FETCH_REGISTER_REQUEST');\r\n\r\nconst fetchProfileRequest = () => ({\r\n  type: 'FETCH_PROFILE_REQUEST',\r\n});\r\n\r\nconst fetchProfileSuccess = profile => ({\r\n  type: 'FETCH_PROFILE_SUCCESS',\r\n  payload: profile,\r\n});\r\n\r\nconst resetProfile = () => ({\r\n  type: 'RESET_PROFILE',\r\n});\r\n\r\nconst getProfile = name => dispatch => {\r\n  localStorage.setItem('ProfileName', name);\r\n  dispatch(fetchProfileRequest());\r\n  blogApi.Profile.get(name).then(res => {\r\n    const profile = res.data;\r\n    dispatch(fetchProfileSuccess(profile));\r\n  });\r\n};\r\n\r\nexport { getProfile, resetProfile };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Block = ({ children, backcolor }) => (\r\n  <BlockStyle backcolor={backcolor} className=\"block\">\r\n    {children}\r\n  </BlockStyle>\r\n);\r\n\r\nBlock.defaultProps = {\r\n  backcolor: '',\r\n};\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  backcolor: PropTypes.string,\r\n};\r\n\r\nconst BlockStyle = styled.div`\r\n  padding: 45px;\r\n  background-color: ${props => props.backcolor};\r\n  box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.04204);\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default Block;\r\n","import Block from './Block';\r\n\r\nexport default Block;\r\n","import AddPost from './Add-post';\r\n\r\nexport default AddPost;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst AddPost = () => {\r\n  const { pathname } = useLocation();\r\n  if (pathname === '/add') {\r\n    return null;\r\n  }\r\n  return <Link to=\"/add\">Добавить новый пост</Link>;\r\n};\r\n\r\nexport default AddPost;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button as ButtonMain } from 'antd';\r\n\r\nconst Button = ({ children, type }) => <ButtonMain type={type}>{children}</ButtonMain>;\r\n\r\nButton.defaultProps = {\r\n  type: '',\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => <ContainerWrapper>{children}</ContainerWrapper>;\r\n\r\nconst ContainerWrapper = styled.div`\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Pagination } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { getAllArticles } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ articles }) => ({\r\n  articles: articles.articles,\r\n  articlesCount: articles.articlesCount,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAllArticlesConnect: getAllArticles,\r\n};\r\n\r\nconst ListPagination = ({ getAllArticlesConnect, articlesCount }) => {\r\n  if (articlesCount <= 10) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Nav>\r\n      <Pagination onChange={value => getAllArticlesConnect(value - 1)} total={articlesCount} />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nListPagination.defaultProps = {\r\n  articlesCount: 0,\r\n};\r\n\r\nListPagination.propTypes = {\r\n  getAllArticlesConnect: PropTypes.func.isRequired,\r\n  articlesCount: PropTypes.number,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPagination);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst LinkAuthPage = () => {\r\n  return (\r\n    <WrapperLink>\r\n      <Link to=\"/login\">Войти</Link>\r\n      <Span>или</Span>\r\n      <Link to=\"/signup\">зарегистрироваться</Link>\r\n    </WrapperLink>\r\n  );\r\n};\r\n\r\nconst WrapperLink = styled.div``;\r\n\r\nconst Span = styled.span`\r\n  margin: 0 5px;\r\n`;\r\nexport default LinkAuthPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserName = ({ profileName, username }) => {\r\n  const getProfile = () => {\r\n    localStorage.setItem('ProfileName', username);\r\n\r\n    profileName(username);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <Link onClick={getProfile} to={`/${username}`}>\r\n          {username}\r\n        </Link>\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserName.defaultProps = {\r\n  username: '',\r\n};\r\n\r\nUserName.propTypes = {\r\n  username: PropTypes.string,\r\n  profileName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserName;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\n\r\nconst LinkHomePage = () => {\r\n  const { pathname } = useLocation();\r\n  if (pathname === '/') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <HomeOutlined />\r\n        Главная\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkHomePage;\r\n","import React from 'react';\r\n\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-spinner-223z6fdkjge\">\r\n      <div className=\"ldio-vwhx2ilfl4e\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { LikeTwoTone } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { favorite, unfavorite } from '../../redux/actions';\r\n\r\nconst mapDispatchToProps = {\r\n  favoriteConnect: favorite,\r\n  unfavoriteConnect: unfavorite,\r\n};\r\nconst FavoritesCount = ({ count, favoriteConnect, unfavoriteConnect, slug, favorited }) => {\r\n  const like = () => {\r\n    if (favorited) {\r\n      return unfavoriteConnect(slug);\r\n    }\r\n    return favoriteConnect(slug);\r\n  };\r\n\r\n  return (\r\n    <Button favorited={favorited} type=\"button\" onClick={like}>\r\n      {count}\r\n      <LikeTwoTone width=\"2.5em\" height=\"2.5em\" twoToneColor={favorited ? '#0cf77e' : '#3e4240'} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nFavoritesCount.defaultProps = {\r\n  count: 0,\r\n  slug: '',\r\n  favorited: false,\r\n};\r\n\r\nFavoritesCount.propTypes = {\r\n  count: PropTypes.number,\r\n  slug: PropTypes.string,\r\n  favoriteConnect: PropTypes.func.isRequired,\r\n  unfavoriteConnect: PropTypes.func.isRequired,\r\n  favorited: PropTypes.bool,\r\n};\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  background: inherit;\r\n  border: none;\r\n`;\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(FavoritesCount);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Result } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\nconst ResultRegistration = ({ success, resetFormState }) => {\r\n  return (\r\n    <WrapperResult success={success}>\r\n      <Result\r\n        icon={<CheckCircleTwoTone twoToneColor=\"#52c41a\" />}\r\n        title=\"Вы успешно зарегистрировались!\"\r\n        extra={\r\n          <Link onClick={resetFormState} to=\"/login\" type=\"primary\">\r\n            Войти\r\n          </Link>\r\n        }\r\n      />\r\n    </WrapperResult>\r\n  );\r\n};\r\n\r\nResultRegistration.defaultProps = {\r\n  success: false,\r\n};\r\n\r\nResultRegistration.propTypes = {\r\n  resetFormState: PropTypes.func.isRequired,\r\n  success: PropTypes.bool,\r\n};\r\n\r\nconst WrapperResult = styled.div`\r\n  width: 300px;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport default ResultRegistration;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { delArticle } from '../../redux/actions';\r\n\r\nconst mapDispatchToProps = {\r\n  delArticleConnect: delArticle,\r\n};\r\n\r\nconst Management = ({ slug, delArticleConnect }) => {\r\n  return (\r\n    <WrapperManagement>\r\n      <Link className=\"management_link btn\" to={`/articles/${slug}/edit`}>\r\n        <Icon type=\"edit\" />\r\n        Редактировать\r\n      </Link>\r\n      <button className=\"management_btn btn\" onClick={() => delArticleConnect(slug)} type=\"button\">\r\n        <Icon type=\"delete\" />\r\n        Удалить\r\n      </button>\r\n    </WrapperManagement>\r\n  );\r\n};\r\n\r\nManagement.propTypes = {\r\n  slug: PropTypes.string.isRequired,\r\n  delArticleConnect: PropTypes.func.isRequired,\r\n};\r\n\r\nconst WrapperManagement = styled.div`\r\n  .management_btn {\r\n    color: #b85c5c;\r\n    border: 1px solid #b85c5c;\r\n    margin: 0 15px;\r\n\r\n    &:hover {\r\n      color: #fff;\r\n      background: #b85c5c;\r\n    }\r\n    &:focus {\r\n      color: #fff;\r\n      background: #b85c5c;\r\n    }\r\n    &:active {\r\n      color: #fff;\r\n      background: #b85c5c;\r\n    }\r\n  }\r\n  .management_link {\r\n    color: #1890ff;\r\n    border: 1px solid #1890ff;\r\n\r\n    &:hover {\r\n      color: #fff;\r\n      background: #1890ff;\r\n    }\r\n    &:focus {\r\n      color: #fff;\r\n      background: #1890ff;\r\n    }\r\n    &:active {\r\n      color: #fff;\r\n      background: #1890ff;\r\n    }\r\n  }\r\n  .btn {\r\n    padding: 0.25rem 0.5rem;\r\n    font-size: 0.875rem;\r\n    border-radius: 0.2rem;\r\n    display: inline-block;\r\n    font-weight: 400;\r\n    line-height: 1.25;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    vertical-align: middle;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(Management);\r\n","import React from 'react';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DateCreation = ({ date }) => {\r\n  if (!date) {\r\n    return null;\r\n  }\r\n  const formattedDate = formatDistanceToNow(new Date(date), {\r\n    locale: ruLocale,\r\n    addSuffix: true,\r\n  });\r\n\r\n  return (\r\n    <p>\r\n      <time dateTime={date}>{formattedDate}</time>\r\n    </p>\r\n  );\r\n};\r\n\r\nDateCreation.defaultProps = {\r\n  date: '',\r\n};\r\n\r\nDateCreation.propTypes = {\r\n  date: PropTypes.string,\r\n};\r\n\r\nexport default DateCreation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TagList = ({ tags }) => {\r\n  if (tags.length === 0) return null;\r\n  return (\r\n    <div>\r\n      <TagsWrapper>\r\n        {tags.map(tag => (\r\n          <li key={tag}>{tag}</li>\r\n        ))}\r\n      </TagsWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nTagList.defaultProps = {\r\n  tags: [],\r\n};\r\n\r\nTagList.propTypes = {\r\n  tags: PropTypes.instanceOf(Array),\r\n};\r\n\r\nconst TagsWrapper = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  padding: 0;\r\n  opacity: 0.7;\r\n  font-size: 12px;\r\n\r\n  li {\r\n    margin: 0 0.5em 0 0;\r\n    color: #5e6973;\r\n    font-size: 13px;\r\n    &:hover {\r\n      color: #548eaa;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileName = ({ username, children }) => {\r\n  const setUserName = () => {\r\n    localStorage.setItem('ProfileName', username);\r\n  };\r\n  return (\r\n    <Link onClick={setUserName} to={`/${username}`}>\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nProfileName.defaultProps = {\r\n  username: '',\r\n  children: null,\r\n};\r\n\r\nProfileName.propTypes = {\r\n  username: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ProfileName;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { logout } from '../../redux/actions/auth/auth';\r\nimport { getProfile } from '../../redux/actions/profile';\r\nimport { AddPost, Container, LinkAuthPage, UserName, LinkHomePage } from '../../components';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  username: auth.currentUser.username,\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logoutConnect: logout,\r\n  getProfileConnect: getProfile,\r\n};\r\n\r\nconst Header = ({ getProfileConnect, isAuthorizedUser, logoutConnect, username }) => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <Container>\r\n        <div>\r\n          <LinkHomePage />\r\n          {isAuthorizedUser ? (\r\n            <>\r\n              <UserName profileName={getProfileConnect} username={username} />\r\n              <AddPost />\r\n            </>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          {isAuthorizedUser ? (\r\n            <Button onClick={logoutConnect}>\r\n              <i className=\"fa fa-sign-in\" aria-hidden=\"true\" /> выход\r\n            </Button>\r\n          ) : (\r\n            <LinkAuthPage />\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  isAuthorizedUser: false,\r\n  username: '',\r\n};\r\n\r\nHeader.propTypes = {\r\n  logoutConnect: PropTypes.func.isRequired,\r\n  getProfileConnect: PropTypes.func.isRequired,\r\n  isAuthorizedUser: PropTypes.bool,\r\n  username: PropTypes.string,\r\n};\r\n\r\nconst HeaderWrapper = styled.header`\r\n  background: #eee;\r\n  padding: 30px 0;\r\n\r\n  > div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport { Form, SubmitButton, Input } from 'formik-antd';\r\nimport { Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Block, ResultRegistration } from '../../components';\r\nimport { resetFormState, registration } from '../../redux/actions';\r\n\r\nconst validation = Yup.object().shape({\r\n  username: Yup.string().required('Введите ваше имя'),\r\n  password: Yup.string().required('Введите пароль'),\r\n  repeatPassword: Yup.string()\r\n    .test('passwords-match', 'Пароли не совподают', function(value) {\r\n      return this.parent.password === value;\r\n    })\r\n    .required('Required'),\r\n  email: Yup.string().required('Введите ваш E-mail'),\r\n});\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isRegistered: auth.isRegistered,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  registrationConnect: registration,\r\n  resetFormStateConnect: resetFormState,\r\n};\r\n\r\nconst SignupForm = ({ registrationConnect, isRegistered, resetFormStateConnect }) => {\r\n  const onSubmit = (values, { setSubmitting, setErrors, resetForm }) => {\r\n    registrationConnect(\r\n      values,\r\n      err => setErrors(err),\r\n      () => setSubmitting(false)\r\n    );\r\n    if (isRegistered) resetForm();\r\n  };\r\n\r\n  if (isRegistered) {\r\n    return <ResultRegistration success={isRegistered} resetFormState={resetFormStateConnect} />;\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2 className=\"auth__title\">Регистрация</h2>\r\n        <p className=\"auth__text\">Для входа, вам нужно зарегистрироваться</p>\r\n      </div>\r\n      <Block backcolor=\"#fff\">\r\n        <Formik\r\n          initialValues={{\r\n            username: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n            email: '',\r\n          }}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          <Form>\r\n            <Form.Item name=\"email\">\r\n              <Input\r\n                prefix={<Icon type=\"mail\" />}\r\n                size=\"large\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"E-mail\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"username\">\r\n              <Input\r\n                prefix={<Icon type=\"user\" />}\r\n                size=\"large\"\r\n                name=\"username\"\r\n                placeholder=\"Ваше имя\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\">\r\n              <Input.Password\r\n                prefix={<Icon type=\"lock\" />}\r\n                size=\"large\"\r\n                name=\"password\"\r\n                placeholder=\"Пароль\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"repeatPassword\">\r\n              <Input.Password\r\n                prefix={<Icon type=\"lock\" />}\r\n                size=\"large\"\r\n                name=\"repeatPassword\"\r\n                placeholder=\"Повторите пароль\"\r\n              />\r\n            </Form.Item>\r\n            <div>\r\n              <SubmitButton size=\"large\" block>\r\n                Зарегистрироваться\r\n              </SubmitButton>\r\n            </div>\r\n            <div className=\"form__link\">\r\n              <Link to=\"/login\">Войти в аккаунт</Link>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </Block>\r\n    </>\r\n  );\r\n};\r\n\r\nSignupForm.defaultProps = {\r\n  isRegistered: false,\r\n};\r\n\r\nSignupForm.propTypes = {\r\n  registrationConnect: PropTypes.func.isRequired,\r\n  isRegistered: PropTypes.bool,\r\n  resetFormStateConnect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupForm);\r\n","import blogApi from '../../../services/services';\r\nimport * as actions from './auth';\r\n\r\nconst registration = (values, cbError = () => {}, cbSubmitting = () => {}) => dispatch => {\r\n  dispatch(actions.fetchRegisterRequest());\r\n  blogApi.Auth.register({\r\n    user: {\r\n      username: values.username,\r\n      email: values.email,\r\n      password: values.password,\r\n    },\r\n  })\r\n    .then(res => {\r\n      const { user } = res.data;\r\n      dispatch(actions.fetchRegisterSuccess(user));\r\n      cbSubmitting();\r\n    })\r\n    .catch(error => {\r\n      dispatch(actions.fetchRegisterFailure());\r\n      const { errors } = error.response.data;\r\n      cbError(errors);\r\n      cbSubmitting();\r\n    });\r\n};\r\n\r\nconst loginUser = values => dispatch => {\r\n  dispatch(actions.fetchAuthRequest());\r\n  blogApi.Auth.login({\r\n    user: {\r\n      email: values.email,\r\n      password: values.password,\r\n    },\r\n  })\r\n    .then(res => {\r\n      const userData = res.data.user;\r\n      localStorage.setItem('jwt', userData.token);\r\n      blogApi.getToken(userData.token);\r\n      dispatch(actions.fetchAuthSuccess({ user: userData }));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchAuthFailure());\r\n    });\r\n};\r\n\r\nconst setUserData = () => dispatch => {\r\n  const token = localStorage.getItem('jwt');\r\n  if (token) {\r\n    blogApi.setToken(token);\r\n  }\r\n  dispatch(actions.fetchUserRequest());\r\n  blogApi.Auth.current()\r\n    .then(res => {\r\n      const user = res.data;\r\n      dispatch(actions.fetchUserSuccess(user));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchUserFailure());\r\n    });\r\n};\r\n\r\nexport { setUserData, loginUser, registration };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, SubmitButton, Input } from 'formik-antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Icon } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Block } from '../../components';\r\nimport { loginUser } from '../../redux/actions/auth/async-auth';\r\n\r\nconst validation = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(8, 'Must be 8 characters or more')\r\n    .max(40, 'Must be 40 characters or less')\r\n    .test(\r\n      'pass',\r\n      'Latin letters and numbers only, at least one number and one capital letter',\r\n      value => /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])/.test(value)\r\n    )\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email('Введите коректные E-mail')\r\n    .required('Введите ваш E-mail'),\r\n});\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  email: auth.currentUser.email,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loginUser,\r\n};\r\n\r\nconst LoginForm = ({ loginUser, email }) => {\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    loginUser(values, setSubmitting, setErrors);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2 className=\"auth__title\">Войти в аккаунт</h2>\r\n        <p className=\"auth__text\">Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block backcolor=\"#fff\">\r\n        <Formik\r\n          initialValues={{\r\n            password: '',\r\n            email: `${email || ''}`,\r\n          }}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          <Form>\r\n            <Form.Item name=\"email\">\r\n              <Input\r\n                prefix={<Icon type=\"user\" />}\r\n                size=\"large\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"E-mail\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\">\r\n              <Input.Password\r\n                prefix={<Icon type=\"lock\" />}\r\n                size=\"large\"\r\n                name=\"password\"\r\n                placeholder=\"Пароль\"\r\n              />\r\n            </Form.Item>\r\n            <div>\r\n              <SubmitButton size=\"large\" block>\r\n                Войти в аккаунт\r\n              </SubmitButton>\r\n            </div>\r\n            <div className=\"form__link\">\r\n              <Link to=\"/signup\">Зарегистрироваться</Link>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </Block>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FavoritesCount, DateCreation, TagList, ProfileName } from '../../components';\r\n\r\nconst ArticleItem = ({ article }) => {\r\n  const setArticleSlug = () => {\r\n    localStorage.setItem('articleSlug', article.slug);\r\n  };\r\n\r\n  return (\r\n    <InnerArticle>\r\n      <ArticleHeader>\r\n        <div className=\"article__author\">\r\n          <span className=\"article__desc\">Автор:</span>\r\n          <ProfileName username={article.author.username}>{article.author.username}</ProfileName>\r\n        </div>\r\n        <DateCreation date={article.createdAt} />\r\n      </ArticleHeader>\r\n      <ArticleBody>\r\n        <Link onClick={setArticleSlug} to={`/articles/${article.slug}`}>\r\n          <div>\r\n            <h3 className=\"article__title\">{article.title}</h3>\r\n          </div>\r\n        </Link>\r\n        <TagList tags={article.tagList} />\r\n        <FavoritesCount\r\n          favorited={article.favorited}\r\n          count={article.favoritesCount}\r\n          slug={article.slug}\r\n        />\r\n      </ArticleBody>\r\n    </InnerArticle>\r\n  );\r\n};\r\n\r\nArticleItem.propTypes = {\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nconst InnerArticle = styled.div`\r\n  border: 2px solid rgba(0, 0, 0, 0.05);\r\n  background: #fff;\r\n  margin-bottom: 20px;\r\n  padding: 25px 15px;\r\n`;\r\n\r\nconst ArticleBody = styled.div`\r\n  .article__title {\r\n    color: #333;\r\n    font-weight: 500;\r\n    font-size: 28px;\r\n    line-height: 36.4px;\r\n\r\n    &:hover {\r\n      color: #548eaa;\r\n    }\r\n    &:active {\r\n      color: #5790ac;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArticleHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  .article__author {\r\n    color: #548eaa;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    text-decoration: none;\r\n    margin: 0 15px 0 0;\r\n  }\r\n  .article__desc {\r\n    margin-right: 10px;\r\n  }\r\n  p {\r\n    margin: 0;\r\n    font-weight: 700;\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport default ArticleItem;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getProfile } from '../../redux/actions/profile';\r\nimport { getArticle, getAllArticles } from '../../redux/actions';\r\nimport ArticleItem from '../Article-item/Article-item';\r\nimport { ListPagination, Loading } from '../../components';\r\n\r\nconst mapStateToProps = ({ articles }) => {\r\n  return {\r\n    articles: articles.articles,\r\n    isProgress: articles.isProgress,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getProfileConnect: getProfile,\r\n  getAllArticlesConnect: getAllArticles,\r\n  getArticleConnect: getArticle,\r\n};\r\n\r\nclass ArticleAll extends React.Component {\r\n  componentDidMount() {\r\n    const { getAllArticlesConnect } = this.props;\r\n    getAllArticlesConnect();\r\n  }\r\n\r\n  render() {\r\n    const { articles, getProfileConnect, getArticleConnect, isProgress } = this.props;\r\n    return (\r\n      <>\r\n        <WrapperLoading isProgress={isProgress}>\r\n          <Loading />\r\n        </WrapperLoading>\r\n        <WrapperArticle isProgress={isProgress}>\r\n          {articles.map(article => {\r\n            return (\r\n              <ArticleItem\r\n                article={article}\r\n                getArticle={getArticleConnect}\r\n                getProfileName={getProfileConnect}\r\n                key={article.slug}\r\n              />\r\n            );\r\n          })}\r\n        </WrapperArticle>\r\n        <WrapperPagination isProgress={isProgress}>\r\n          <ListPagination />\r\n        </WrapperPagination>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nArticleAll.defaultProps = {\r\n  isProgress: false,\r\n};\r\n\r\nArticleAll.propTypes = {\r\n  articles: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isProgress: PropTypes.bool,\r\n  getProfileConnect: PropTypes.func.isRequired,\r\n  getAllArticlesConnect: PropTypes.func.isRequired,\r\n  getArticleConnect: PropTypes.func.isRequired,\r\n};\r\n\r\nconst WrapperLoading = styled.div`\r\n  display: ${props => (props.isProgress ? 'block' : 'none')};\r\n  position: fixed;\r\n  z-index: 1;\r\n  top: 30%;\r\n  right: 42%;\r\n`;\r\n\r\nconst WrapperPagination = styled.div`\r\n  opacity: ${props => (props.isProgress ? 0.5 : 1)};\r\n  margin: 50px 0;\r\n`;\r\n\r\nconst WrapperArticle = styled.div`\r\n  opacity: ${props => (props.isProgress ? 0.5 : 1)};\r\n  max-width: 700px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleAll);\r\n","import React from 'react';\r\n\r\nimport { Loading } from '../../components';\r\n\r\nconst ProfilePreview = ({ profile, isLoading }) => {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img alt={profile.username} width=\"128\" height=\"128\" src={profile.image} />\r\n      </div>\r\n      <div>\r\n        <h1>{profile.username}</h1>\r\n        <div>\r\n          <span>Редактировать профиль</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePreview;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// import { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Loading,\r\n  FavoritesCount,\r\n  Management,\r\n  DateCreation,\r\n  TagList,\r\n  ProfileName,\r\n} from '../../components';\r\n\r\nconst ArticlePreview = ({ article, isProgress, username }) => {\r\n  if (isProgress) {\r\n    return <Loading />;\r\n  }\r\n  const canModify = username === article.author.username;\r\n  return (\r\n    <Article>\r\n      <ArticleHeader>\r\n        <div className=\"article__profile-info\">\r\n          <div className=\"article__inner\">\r\n            <ProfileName username={article.author.username}>\r\n              <img\r\n                className=\"article__profile-img\"\r\n                src={article.author.image}\r\n                alt={article.author.username}\r\n                width=\"40\"\r\n                height=\"40\"\r\n              />\r\n            </ProfileName>\r\n            <div>\r\n              <ProfileName username={article.author.username}>\r\n                {article.author.username}\r\n              </ProfileName>\r\n              <div>\r\n                <DateCreation date={article.createdAt} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <span>{article.author.bio}</span>\r\n        </div>\r\n        {canModify && <Management slug={article.slug} />}\r\n      </ArticleHeader>\r\n      <ArticleBody>\r\n        <h3 className=\"article__title\">{article.title}</h3>\r\n        <TagList tags={article.tagList} />\r\n        <p>{article.body}</p>\r\n        <div>{article.description}</div>\r\n        <div>\r\n          <FavoritesCount\r\n            count={article.favoritesCount}\r\n            slug={article.slug}\r\n            favorited={article.favorited}\r\n          />\r\n        </div>\r\n      </ArticleBody>\r\n    </Article>\r\n  );\r\n};\r\n\r\nArticlePreview.defaultProps = {\r\n  isProgress: false,\r\n  username: '',\r\n};\r\n\r\nArticlePreview.propTypes = {\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n  isProgress: PropTypes.bool,\r\n  username: PropTypes.string,\r\n};\r\n\r\nconst ArticleHeader = styled.div`\r\n  padding: 25px;\r\n  background: #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 30px;\r\n  .article__profile-img {\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  .article__profile-link {\r\n    font-size: 14px;\r\n  }\r\n  .article__inner {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst Article = styled.div`\r\n  border-top: 2px solid #d5dddf;\r\n  border-bottom: 2px solid #d5dddf;\r\n  color: #343434;\r\n  width: 900px;\r\n  padding: 30px 0;\r\n  max-width: 100%;\r\n`;\r\nconst ArticleBody = styled.div`\r\n  .article__title {\r\n    font-weight: 500;\r\n    font-size: 32px;\r\n    line-height: 40px;\r\n  }\r\n`;\r\nexport default ArticlePreview;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { DateCreation, ProfileName } from '../../components';\r\n\r\nconst CommentItem = ({ comment, commentId, slug, deleteComment, username }) => {\r\n  const canModify = username === comment.author.username;\r\n  return (\r\n    <Comment>\r\n      <CommentHeader>\r\n        <div className=\"comment__inner\">\r\n          <ProfileName username={comment.author.username}>\r\n            <img\r\n              className=\"comment__author-img\"\r\n              src={comment.author.image}\r\n              alt={comment.author.username}\r\n              width=\"30\"\r\n              height=\"30\"\r\n            />\r\n          </ProfileName>\r\n          <ProfileName username={comment.author.username}>\r\n            <span className=\"comment__author-img\">{comment.author.username}</span>\r\n          </ProfileName>\r\n          <div className=\"comment__date\">\r\n            <DateCreation date={comment.createdAt} />\r\n          </div>\r\n        </div>\r\n        {canModify ? (\r\n          <div>\r\n            <button\r\n              onClick={() => deleteComment(slug, commentId)}\r\n              className=\"comment__btn-delete\"\r\n              type=\"button\"\r\n            >\r\n              <Icon className=\"comment__icon-delete\" type=\"delete\" />\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </CommentHeader>\r\n      <CommentBody>{comment.body}</CommentBody>\r\n    </Comment>\r\n  );\r\n};\r\n\r\nCommentItem.defaultProps = {\r\n  commentId: 0,\r\n  slug: '',\r\n  username: '',\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  comment: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\r\n  commentId: PropTypes.number,\r\n  slug: PropTypes.string,\r\n  deleteComment: PropTypes.func.isRequired,\r\n  username: PropTypes.string,\r\n};\r\n\r\nconst Comment = styled.div`\r\n  border: 1px solid #e5e5e5;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\nconst CommentHeader = styled.div`\r\n  background: #eee;\r\n  padding: 10px 10px 5px 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .comment__author-img {\r\n    border-radius: 50%;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .comment__btn-delete {\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 1px 4px;\r\n    background: inherit;\r\n    color: #b85c5c;\r\n\r\n    &:hover {\r\n      color: #c72424;\r\n    }\r\n    &:focus {\r\n      color: #c72424;\r\n    }\r\n    &:active {\r\n      color: #c72424;\r\n    }\r\n  }\r\n\r\n  .comment__inner {\r\n    display: flex;\r\n    align-items: baseline;\r\n  }\r\n\r\n  .comment__date {\r\n    margin-left: 15px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nconst CommentBody = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport default CommentItem;\r\n","import React from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { ProfileName } from '../../components';\r\n\r\nclass AddComment extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  addComment = event => {\r\n    const { addNewComment, slug } = this.props;\r\n    const { value } = this.state;\r\n    event.preventDefault();\r\n    addNewComment(slug, value);\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n  onChangeValue = ({ target }) => {\r\n    this.setState({ value: target.value });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const { currentUser } = this.props;\r\n    return (\r\n      <Wrapper>\r\n        <ProfileName username={currentUser.username}>\r\n          <img\r\n            className=\"comment__author-img\"\r\n            src={currentUser.image}\r\n            alt={currentUser.username}\r\n            width=\"30\"\r\n            height=\"30\"\r\n          />\r\n        </ProfileName>\r\n        <form onSubmit={this.addComment} className=\"comment__form\">\r\n          <Input.TextArea rows={1} onChange={this.onChangeValue} value={value} />\r\n          <Button htmlType=\"submit\">отправить</Button>\r\n        </form>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nAddComment.defaultProps = {\r\n  slug: '',\r\n};\r\n\r\nAddComment.propTypes = {\r\n  addNewComment: PropTypes.func.isRequired,\r\n  slug: PropTypes.string,\r\n  currentUser: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n  background: #eee;\r\n  padding: 10px 15px;\r\n  margin-bottom: 20px;\r\n\r\n  .comment__author-img {\r\n    border-radius: 50%;\r\n    margin-right: 15px;\r\n  }\r\n  .comment__form {\r\n    display: flex;\r\n    align-items: baseline;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default AddComment;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport CommentItem from '../Comment-item/Comment-item';\r\nimport AddComment from '../Add-comment/Add-comment';\r\nimport { addNewComment, deleteComment } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ article, auth, comments }) => ({\r\n  slug: article.articleCurrent.slug,\r\n  isProgress: article.isProgress,\r\n  currentUser: auth.currentUser,\r\n  comments: comments.commentList,\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addNewCommentConnect: addNewComment,\r\n  deleteCommentConnect: deleteComment,\r\n};\r\n\r\nconst CommentList = ({\r\n  comments,\r\n  currentUser,\r\n  addNewCommentConnect,\r\n  slug,\r\n  deleteCommentConnect,\r\n  isProgress,\r\n  isAuthorizedUser,\r\n}) => {\r\n  if (isProgress || isAuthorizedUser) {\r\n    return null;\r\n  }\r\n\r\n  const renderList = (\r\n    <List>\r\n      {comments.map(comment => (\r\n        <li key={comment.id}>\r\n          <CommentItem\r\n            username={currentUser.username}\r\n            deleteComment={deleteCommentConnect}\r\n            comment={comment}\r\n            slug={slug}\r\n            commentId={comment.id}\r\n          />\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n  return (\r\n    <WrapperComments>\r\n      <AddComment addNewComment={addNewCommentConnect} slug={slug} currentUser={currentUser} />\r\n      <div>{comments.length === 0 ? null : renderList}</div>\r\n    </WrapperComments>\r\n  );\r\n};\r\n\r\nCommentList.defaultProps = {\r\n  slug: '',\r\n  isProgress: false,\r\n};\r\n\r\nCommentList.propTypes = {\r\n  comments: PropTypes.instanceOf(Array).isRequired,\r\n  currentUser: PropTypes.instanceOf(Object).isRequired,\r\n  addNewCommentConnect: PropTypes.func.isRequired,\r\n  deleteCommentConnect: PropTypes.func.isRequired,\r\n  slug: PropTypes.string,\r\n  isProgress: PropTypes.bool,\r\n};\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst WrapperComments = styled.div`\r\n  width: 700px;\r\n  max-width: 100%;\r\n  margin: 30px 0;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentList);\r\n","import blogApi from '../../../services/services';\r\nimport * as actions from './comment';\r\n\r\nexport const getAllComments = slug => dispatch => {\r\n  dispatch(actions.fetchCommentsRequest());\r\n  blogApi.Comment.get(slug)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchCommentsSuccess(articleData));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchCommentsFailure());\r\n    });\r\n};\r\n\r\nexport const deleteComment = (slug, id) => dispatch => {\r\n  dispatch(actions.fetchCommentDeleteRequest());\r\n  blogApi.Comment.delete(slug, id).then(() => {\r\n    dispatch(actions.fetchCommentDeleteSuccess(id));\r\n  });\r\n};\r\n\r\nexport const addNewComment = (slug, value) => dispatch => {\r\n  dispatch(actions.fetchAddCommentsRequest());\r\n  blogApi.Comment.post(slug, {\r\n    comment: {\r\n      body: value,\r\n    },\r\n  }).then(res => {\r\n    const { comment } = res.data;\r\n    dispatch(actions.fetchAddCommentsSuccess(comment));\r\n  });\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LoginForm, SignupForm } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst Auth = ({ isAuthorizedUser }) => {\r\n  if (isAuthorizedUser) return <Redirect to=\"/\" />;\r\n  return (\r\n    <WrapperForm>\r\n      <div>\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/signup\" component={SignupForm} />\r\n      </div>\r\n    </WrapperForm>\r\n  );\r\n};\r\n\r\nAuth.defaultProps = {\r\n  isAuthorizedUser: false,\r\n};\r\n\r\nAuth.propTypes = {\r\n  isAuthorizedUser: PropTypes.bool,\r\n};\r\n\r\nconst WrapperForm = styled.div`\r\n  text-align: center;\r\n  color: #202002;\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  > div {\r\n    width: 400px;\r\n    max-width: 75%;\r\n  }\r\n\r\n  .auth__title {\r\n    font-size: 28px;\r\n    line-height: 33px;\r\n    margin-bottom: 5px;\r\n  }\r\n  .form__link {\r\n    margin-top: 30px;\r\n\r\n    a {\r\n      font-size: 16px;\r\n      line-height: 19px;\r\n      color: #adadad;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n      &:focus {\r\n        color: #1890ff;\r\n      }\r\n      &:active {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .auth__text {\r\n    opacity: 0.5;\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n  .btn {\r\n    width: 200px;\r\n    height: 200px;\r\n    background: #000;\r\n  }\r\n  .btn-2 {\r\n    background: red;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps)(Auth);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Header, ArticleAll } from '../../modules';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main>\r\n        <ArticleAll />\r\n      </Main>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Main = styled.main`\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { PostForm, Header } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst CreatePost = ({ isAuthorizedUser }) => {\r\n  if (!isAuthorizedUser) return <Redirect to=\"/login\" />;\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Wrapper>\r\n        <PostForm />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nCreatePost.defaultProps = {\r\n  isAuthorizedUser: false,\r\n};\r\n\r\nCreatePost.propTypes = {\r\n  isAuthorizedUser: PropTypes.bool,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px 0;\r\n`;\r\n\r\nexport default connect(mapStateToProps)(CreatePost);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Header, ProfilePreview } from '../../modules';\r\nimport { Container } from '../../components';\r\nimport { getProfile, resetProfile } from '../../redux/actions/profile';\r\n\r\nconst mapStateToProps = ({ userProfile }) => ({\r\n  profile: userProfile.profile,\r\n  isLoading: userProfile.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProfile,\r\n  resetProfile,\r\n};\r\n\r\nclass Profile extends React.Component {\r\n  componentDidMount() {\r\n    const { getProfile } = this.props;\r\n    const profileName = localStorage.getItem('ProfileName');\r\n    getProfile(profileName);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetProfile } = this.props;\r\n    resetProfile();\r\n  }\r\n\r\n  render() {\r\n    const { profile, isLoading } = this.props;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <ProfilePreview profile={profile} isLoading={isLoading} />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Header, ArticlePreview, CommentList } from '../../modules';\r\nimport { Container } from '../../components';\r\nimport { getArticle, getAllComments, resetState } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ article, auth }) => ({\r\n  article: article.articleCurrent,\r\n  isProgress: article.isProgress,\r\n  username: auth.currentUser.username,\r\n  articleState: article.articleState,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getArticleConnect: getArticle,\r\n  getAllCommentsConnect: getAllComments,\r\n  resetStateConnect: resetState,\r\n};\r\n\r\nclass Article extends React.Component {\r\n  componentDidMount() {\r\n    const { getArticleConnect, getAllCommentsConnect } = this.props;\r\n    const articleSlug = localStorage.getItem('articleSlug');\r\n    getArticleConnect(articleSlug);\r\n    getAllCommentsConnect(articleSlug);\r\n  }\r\n\r\n  render() {\r\n    const { article, isProgress, username, articleState, resetStateConnect } = this.props;\r\n    if (articleState === 'deleted') {\r\n      resetStateConnect();\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <Main>\r\n            <ArticlePreview username={username} article={article} isProgress={isProgress} />\r\n            <CommentList />\r\n          </Main>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nArticle.defaultProps = {\r\n  isProgress: false,\r\n  username: '',\r\n  articleState: '',\r\n};\r\n\r\nArticle.propTypes = {\r\n  getArticleConnect: PropTypes.func.isRequired,\r\n  resetStateConnect: PropTypes.func.isRequired,\r\n  getAllCommentsConnect: PropTypes.func.isRequired,\r\n  articleState: PropTypes.string,\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n  isProgress: PropTypes.bool,\r\n  username: PropTypes.string,\r\n};\r\n\r\nconst Main = styled.div`\r\n  margin-top: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Header, PostForm } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst EditArticle = ({ isAuthorizedUser }) => {\r\n  if (!isAuthorizedUser) return <Redirect to=\"/login\" />;\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Wrapper>\r\n        <PostForm />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nEditArticle.defaultProps = {\r\n  isAuthorizedUser: false,\r\n};\r\n\r\nEditArticle.propTypes = {\r\n  isAuthorizedUser: PropTypes.bool,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px 0;\r\n`;\r\nexport default connect(mapStateToProps)(EditArticle);\r\n","import Loading from './loading';\r\n\r\nexport default Loading;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Home, Auth, CreatePost, Profile, Article, EditArticle } from '../../pages';\nimport { setUserData } from '../../redux/actions';\nimport Loading from '../Loading';\n\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    isAuthorizedUser: auth.isAuthorizedUser,\n    inProgress: auth.inProgress,\n  };\n};\n\nconst mapDispatchToProps = {\n  setUserDataConnect: setUserData,\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { setUserDataConnect } = this.props;\n    setUserDataConnect();\n  }\n\n  render() {\n    const { inProgress } = this.props;\n    if (inProgress) {\n      return <Loading />;\n    }\n\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path={['/login', '/signup']} component={Auth} />\n          <Route path=\"/add\" component={CreatePost} />\n          <Route exact path=\"/:username\" component={Profile} />\n          <Route exact path=\"/articles/:slug\" render={() => <Article />} />\n          <Route path=\"/articles/:slug/edit\" component={EditArticle} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  setUserDataConnect: PropTypes.func.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
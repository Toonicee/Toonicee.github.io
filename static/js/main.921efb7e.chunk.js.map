{"version":3,"sources":["servisec/servisec.js","redux/reducers/auth.js","redux/reducers/article.js","redux/reducers/profile.js","redux/reducers/index.js","redux/store.js","components/Block/Block.jsx","components/Block/index.js","helper/displayStatus.js","components/Input-type-password/Input-type-password.jsx","components/Input-type-password/index.js","components/Input-type-text/Input-type-text.jsx","components/Input-type-text/index.js","components/Input-type-textarea/Input-type-textarea.jsx","components/Add-post/index.js","components/Add-post/Add-post.jsx","components/Button/Button.jsx","components/Container/Container.jsx","components/Article-item/Article-item.jsx","redux/actions/article.js","components/List-pagination/List-pagination.jsx","components/Link-auth-page/Link-auth-page.jsx","components/User-name/User-name.jsx","components/Link-home-page/Link-home-page.jsx","components/Loading/loading.jsx","components/Favorites-count/Favorites-count.jsx","modules/Post-form/Post-form.jsx","redux/actions/profile.js","modules/Header/Header.jsx","redux/actions/auth.js","modules/Signup-form/Signup-form.jsx","modules/Login-form/Login-form.jsx","modules/Article-all/Article-all.jsx","modules/Profile-preview/Profile-preview.jsx","modules/Article-preview/Article-preview.jsx","pages/Auth/Auth.jsx","pages/Home/Home.jsx","pages/Create-Post/Create-Post.jsx","pages/Profile/Profile.jsx","pages/Article/Article.jsx","components/Loading/index.js","components/App/App.jsx","serviceWorker.js","index.jsx"],"names":["axios","defaults","baseURL","getAll","page","get","count","p","limit","favorite","slug","post","unfavorite","delete","create","article","current","register","body","login","token","headers","common","Authorization","follow","username","unfollow","del","initialState","currentUser","error","isAutoUser","isSuccess","isRegistered","auth","state","action","type","payload","user","isAuthorizedUser","inicialState","articles","isProgres","articleCurrent","author","articlesCount","map","favorited","favoritesCount","isLoading","profile","userProfile","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Block","children","backcolor","BlockStyle","className","defaultProps","styled","div","props","displayStatus","key","touched","InputTypePassword","name","placeholder","size","useField","meta","Item","hasFeedback","validateStatus","htmlFor","Password","prefix","LockOutlined","id","InputTypeText","icon","validating","status","InputTypeTextArea","TextArea","AddPost","useLocation","pathname","to","Button","ContainerWrapper","Container","WrapperArticle","ArticleBody","ArticleHeader","ArticleItem","getArticle","renderTagLIst","tagList","tag","getProfile","localStorage","setItem","onClick","src","image","alt","data-name","Date","createdAt","toDateString","title","length","articleLoaded","dispatch","servisec","then","res","articleData","data","catch","mapDispatchToProps","getAllArticles","ListPagination","Nav","onChange","value","setPage","total","nav","connect","LinkAuthPage","UserName","profileName","console","log","LinkHomePage","Loading","button","LikeTwoTone","width","height","twoToneColor","validata","Yup","shape","required","description","articleCreate","WrapperForm","WrapperButton","initialValues","validationSchema","onSubmit","values","setSubmitting","setErrors","errors","response","resetProfile","fetchProfileSuccess","onLogout","HeaderWrapper","max","password","min","test","repeatPassword","this","parent","email","registration","block","validation","onLogin","userData","erro0rs","WrapperPagination","getProfileName","ProfilePreview","href","ArticlePreview","bio","exact","path","component","LoginForm","SignupForm","Wrapper","Profile","getItem","React","Component","Article","onLoad","fetchUserSuccess","App","Home","Auth","CreatePost","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister","message"],"mappings":"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","file":"static/js/main.921efb7e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\r\n\r\nconst getToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common.Authorization = `Token ${token}`;\r\n  }\r\n};\r\n\r\nconst Auth = {\r\n  current: () => axios.get('/user'),\r\n  register: body => axios.post('/users', body),\r\n  login: body => axios.post('/users/login', body),\r\n};\r\n\r\nconst limit = (count, p = 0) => `limit=${count}&offset=${p ? p * count : 0}`;\r\nconst Article = {\r\n  getAll: page => axios.get(`/articles?${limit(10, page)}`),\r\n  favorite: slug => axios.post(`/articles/${slug}/favorite`),\r\n  get: slug => axios.get(`/articles/${slug}`),\r\n  unfavorite: slug => axios.delete(`/articles/${slug}/favorite`),\r\n  create: article => axios.post('/articles', { article }),\r\n};\r\n\r\nconst Profile = {\r\n  follow: username => axios.post(`/profiles/${username}/follow`),\r\n  get: username => axios.get(`/profiles/${username}`),\r\n  unfollow: username => axios.del(`/profiles/${username}/follow`),\r\n};\r\n\r\nexport default {\r\n  Article,\r\n  Auth,\r\n  getToken,\r\n  Profile,\r\n};\r\n","const initialState = {\r\n  currentUser: {},\r\n  error: null,\r\n  isAutoUser: false,\r\n  isSuccess: false,\r\n  isRegistered: false,\r\n};\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload.user,\r\n        isAuthorizedUser: true,\r\n      };\r\n    case 'FETCH_REGISTER_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isRegistered: true,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...initialState,\r\n      };\r\n    case 'FETCH_USER_REQUEST': {\r\n      return {\r\n        ...state,\r\n        isSuccess: true,\r\n      };\r\n    }\r\n    case 'FETCH_USER_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        isSuccess: false,\r\n        isAuthorizedUser: true,\r\n        currentUser: action.payload.user,\r\n      };\r\n    }\r\n    case 'FETCH_USER_FAILURE': {\r\n      return {\r\n        ...state,\r\n        isSuccess: false,\r\n        isAuthorizedUser: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","const inicialState = {\r\n  articles: [],\r\n  isProgres: false,\r\n  articleCurrent: {\r\n    author: {},\r\n  },\r\n};\r\n\r\nconst article = (state = inicialState, action) => {\r\n  switch (action.type) {\r\n    case 'REMOVE_ARTICLE': {\r\n      return {\r\n        ...inicialState,\r\n      };\r\n    }\r\n\r\n    case 'FETCH_ARTICLE_REQUEST': {\r\n      return {\r\n        ...state,\r\n        isProgres: false,\r\n      };\r\n    }\r\n    case 'FETCH_ARTICLE_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        articles: action.payload.articles,\r\n        articlesCount: action.payload.articlesCount,\r\n        isProgres: false,\r\n      };\r\n    }\r\n    case 'FETCH_ARTICLE_FAILURE': {\r\n      return {\r\n        ...state,\r\n        isProgres: false,\r\n      };\r\n    }\r\n    case 'FETCH_CURRENT_ARTICLE_REQUEST': {\r\n      return {\r\n        ...state,\r\n        isProgres: true,\r\n      };\r\n    }\r\n    case 'FETCH_CURRENT_ARTICLE_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        articleCurrent: action.payload.article,\r\n        isProgres: false,\r\n      };\r\n    }\r\n    case 'FETCH_CURRENT_ARTICLE_FAILURE': {\r\n      return {\r\n        ...state,\r\n        isProgres: false,\r\n      };\r\n    }\r\n    case 'ARTICLE_FAVORITED':\r\n    case 'ARTICLE_UNFAVORITED':\r\n      return {\r\n        ...state,\r\n        articles: state.articles.map(article => {\r\n          if (article.slug === action.payload.article.slug) {\r\n            return {\r\n              ...article,\r\n              favorited: action.payload.article.favorited,\r\n              favoritesCount: action.payload.article.favoritesCount,\r\n            };\r\n          }\r\n          return article;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default article;\r\n","const inicialState = {\r\n  isLoading: false,\r\n  profile: {},\r\n};\r\n\r\nconst userProfile = (state = inicialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_PROFILE_REQUEST':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case 'FETCH_PROFILE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        profile: action.payload.profile,\r\n        isLoading: false,\r\n      };\r\n    case 'RESET_PROFILE':\r\n      return {\r\n        ...inicialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userProfile;\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport article from './article';\r\nimport userProfile from './profile';\r\n\r\nexport default combineReducers({ auth, article, userProfile });\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport servisec from '../servisec/servisec';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Block = ({ children, backcolor }) => (\r\n  <BlockStyle backcolor={backcolor} className=\"block\">\r\n    {children}\r\n  </BlockStyle>\r\n);\r\n\r\nBlock.defaultProps = {\r\n  backcolor: '',\r\n};\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  backcolor: PropTypes.string,\r\n};\r\n\r\nconst BlockStyle = styled.div`\r\n  padding: 45px;\r\n  background-color: ${props => props.backcolor};\r\n  box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.04204);\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default Block;\r\n","import Block from './Block';\r\n\r\nexport default Block;\r\n","const displayStatus = key => {\r\n  if (key.touched && key.error) {\r\n    return 'error';\r\n  }\r\n  if (!key.touched) {\r\n    return '';\r\n  }\r\n  return 'success';\r\n};\r\n\r\nexport default displayStatus;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'formik-antd';\r\nimport { LockOutlined } from '@ant-design/icons';\r\nimport { useField } from 'formik';\r\n\r\nimport displayStatus from '../../helper/displayStatus';\r\n\r\nconst InputTypePassword = ({ name, placeholder, children, size }) => {\r\n  const [, meta] = useField(name);\r\n\r\n  return (\r\n    <Form.Item name={name} hasFeedback validateStatus={displayStatus(meta)}>\r\n      <label htmlFor={name}>{children}</label>\r\n      <Input.Password\r\n        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n        size={size}\r\n        id={name}\r\n        name={name}\r\n        placeholder={placeholder}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nInputTypePassword.defaultProps = {\r\n  placeholder: '',\r\n  children: null,\r\n  size: 'default',\r\n};\r\n\r\nInputTypePassword.propTypes = {\r\n  children: PropTypes.node,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  size: PropTypes.string,\r\n};\r\n\r\nexport default InputTypePassword;\r\n","import InputTypePassword from './Input-type-password';\r\n\r\nexport default InputTypePassword;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'formik-antd';\r\nimport { useField } from 'formik';\r\nimport { Icon } from 'antd';\r\n\r\nimport displayStatus from '../../helper/displayStatus';\r\n\r\nconst InputTypeText = ({ name, children, placeholder, type, icon, size, validating }) => {\r\n  const [, meta] = useField(name);\r\n  const status = validating ? displayStatus(meta) : null;\r\n  return (\r\n    <Form.Item name={name} hasFeedback validateStatus={status}>\r\n      <label htmlFor={name}>{children}</label>\r\n      <Input\r\n        prefix={<Icon type={icon} />}\r\n        size={size}\r\n        id={name}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nInputTypeText.defaultProps = {\r\n  type: 'text',\r\n  placeholder: '',\r\n  children: null,\r\n  size: 'default',\r\n  icon: 'none',\r\n  validating: true,\r\n};\r\n\r\nInputTypeText.propTypes = {\r\n  children: PropTypes.node,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  size: PropTypes.string,\r\n  type: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  validating: PropTypes.bool,\r\n};\r\nexport default InputTypeText;\r\n","import InputTypeText from './Input-type-text';\r\n\r\nexport default InputTypeText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'formik-antd';\r\n\r\nconst InputTypeTextArea = ({ name, children, placeholder }) => {\r\n  return (\r\n    <Form.Item name={name}>\r\n      <label htmlFor={name}>{children}</label>\r\n      <Input.TextArea\r\n        id={name}\r\n        // autoSize={{ minRows: 3, maxRows: 7 }}\r\n        name={name}\r\n        placeholder={placeholder}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nInputTypeTextArea.defaultProps = {\r\n  placeholder: '',\r\n  children: null,\r\n};\r\n\r\nInputTypeTextArea.propTypes = {\r\n  children: PropTypes.node,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default InputTypeTextArea;\r\n","import AddPost from './Add-post';\r\n\r\nexport default AddPost;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst AddPost = () => {\r\n  const { pathname } = useLocation();\r\n  if (pathname === '/add') {\r\n    return null;\r\n  }\r\n  return <Link to=\"/add\">Добавить новый пост</Link>;\r\n};\r\n\r\nexport default AddPost;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button as ButtonMain } from 'antd';\r\n\r\nconst Button = ({ children, type }) => <ButtonMain type={type}>{children}</ButtonMain>;\r\n\r\nButton.defaultProps = {\r\n  type: '',\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => <ContainerWrapper>{children}</ContainerWrapper>;\r\n\r\nconst ContainerWrapper = styled.div`\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FavoritesCount } from '../index';\r\n\r\nconst ArticleItem = ({ article, getArticle }) => {\r\n  const renderTagLIst = (\r\n    <div>\r\n      <ul className=\"article__tag-list\">\r\n        {article.tagList.map(tag => (\r\n          <li key={tag}>{tag}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n  const getProfile = () => {\r\n    localStorage.setItem('ProfileName', article.author.username);\r\n  };\r\n\r\n  const getArticleOne = () => {\r\n    getArticle(article.slug);\r\n  };\r\n  return (\r\n    <WrapperArticle>\r\n      <ArticleHeader>\r\n        <div>\r\n          <Link onClick={getProfile} to={`/${article.author.username}`}>\r\n            <div>\r\n              <img\r\n                className=\"article__image\"\r\n                src={article.author.image}\r\n                alt={article.author.username}\r\n                data-name={article.author.username}\r\n              />\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"article__meta\">\r\n          <Link\r\n            onClick={getProfile}\r\n            data-name={article.author.username}\r\n            to={`/${article.author.username}`}\r\n          >\r\n            {article.author.username}\r\n          </Link>\r\n          <span>{new Date(article.createdAt).toDateString()}</span>\r\n        </div>\r\n      </ArticleHeader>\r\n      <ArticleBody>\r\n        <Link onClick={getArticleOne} to={`/articles/${article.slug}`}>\r\n          <div>\r\n            <h3 className=\"article__title\">{article.title}</h3>\r\n          </div>\r\n          {article.tagList.length === 0 ? null : renderTagLIst}\r\n        </Link>\r\n        <FavoritesCount\r\n          favorited={article.favorited}\r\n          count={article.favoritesCount}\r\n          slug={article.slug}\r\n        />\r\n      </ArticleBody>\r\n    </WrapperArticle>\r\n  );\r\n};\r\n\r\nArticleItem.propTypes = {\r\n  article: PropTypes.node.isRequired,\r\n  getProfileName: PropTypes.func.isRequired,\r\n};\r\n\r\nconst WrapperArticle = styled.div`\r\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\r\n  max-width: 700px;\r\n  width: 100%;\r\n  padding: 35px 10px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ArticleBody = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n\r\n  .article__title {\r\n    font-size: 25px;\r\n    line-height: 1.04;\r\n  }\r\n\r\n  .article__tag-list {\r\n    display: flex;\r\n    list-style: none;\r\n    padding: 0;\r\n    opacity: 0.7;\r\n    font-size: 12px;\r\n    text-transform: uppercase;\r\n\r\n    li {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArticleHeader = styled.div`\r\n  display: flex;\r\n  .article__image {\r\n    border-radius: 50%;\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n\r\n  .article__meta {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport default ArticleItem;\r\n","import servisec from '../../servisec/servisec';\r\n\r\nconst articleSuccess = body => ({\r\n  type: 'ARTICLE_SUCCESS',\r\n  payload: body,\r\n});\r\n\r\nconst fetchArticleRequest = () => ({\r\n  type: 'FETCH_ARTICLE_REQUEST',\r\n});\r\n\r\nconst fetchArticleSuccess = body => ({\r\n  type: 'FETCH_ARTICLE_SUCCESS',\r\n  payload: body,\r\n});\r\n\r\nconst resetArticle = () => ({\r\n  type: 'REMOVE_ARTICLE',\r\n});\r\n\r\nconst fetchArticleFailure = () => ({\r\n  type: 'FETCH_ARTICLE_FAILURE',\r\n});\r\n\r\nconst articleLoaded = page => dispatch => {\r\n  dispatch(fetchArticleRequest());\r\n\r\n  servisec.Article.getAll(page)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(fetchArticleSuccess(articleData));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchArticleFailure());\r\n    });\r\n};\r\nconst fetchCurrentArticleRequest = () => ({\r\n  type: 'FETCH_CURRENT_ARTICLE_REQUEST',\r\n});\r\n\r\nconst fetchCurrentArticleSuccess = body => ({\r\n  type: 'FETCH_CURRENT_ARTICLE_SUCCESS',\r\n  payload: body,\r\n});\r\n\r\nconst fetchCurrentArticleFailure = () => ({\r\n  type: 'FETCH_CURRENT_ARTICLE_FAILURE',\r\n});\r\n\r\nconst articleFavorited = article => ({\r\n  type: 'ARTICLE_FAVORITED',\r\n  payload: article,\r\n});\r\n\r\nconst articleUnfavorited = article => ({\r\n  type: 'ARTICLE_UNFAVORITED',\r\n  payload: article,\r\n});\r\n\r\nconst favorite = slug => dispatch => {\r\n  servisec.Article.favorite(slug).then(res => {\r\n    const articleData = res.data;\r\n    dispatch(articleFavorited(articleData));\r\n  });\r\n};\r\n\r\nconst unfavorite = slug => dispatch => {\r\n  servisec.Article.unfavorite(slug).then(res => {\r\n    const articleData = res.data;\r\n    dispatch(articleUnfavorited(articleData));\r\n  });\r\n};\r\n\r\nconst getArticle = slug => dispatch => {\r\n  localStorage.setItem('articleSlug', slug);\r\n  dispatch(fetchCurrentArticleRequest());\r\n  servisec.Article.get(slug)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(fetchCurrentArticleSuccess(articleData));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchCurrentArticleFailure());\r\n    });\r\n};\r\n\r\nconst articleCreate = article => dispatch => {\r\n  dispatch(fetchArticleRequest());\r\n  servisec.Article.create(article).then(res => {\r\n    const articleData = res.data;\r\n  });\r\n};\r\n\r\nexport { articleLoaded, articleCreate, getArticle, favorite, unfavorite, resetArticle };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Pagination } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { setPage, articleLoaded } from '../../redux/actions/article';\r\n\r\nconst mapStateToProps = ({ article }) => ({\r\n  articles: article.articles,\r\n  articlesCount: article.articlesCount,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAllArticles: articleLoaded,\r\n};\r\n\r\nconst ListPagination = ({ getAllArticles, articlesCount }) => {\r\n  if (articlesCount <= 10) {\r\n    return null;\r\n  }\r\n\r\n  const setPage = value => {\r\n    getAllArticles(value * 10);\r\n  };\r\n\r\n  return (\r\n    <Nav>\r\n      <Pagination onChange={value => setPage(value)} total={articlesCount} />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nListPagination.defaultProps = {\r\n  articlesCount: 0,\r\n};\r\n\r\nListPagination.propTypes = {\r\n  getAllArticles: PropTypes.func.isRequired,\r\n  articlesCount: PropTypes.number,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPagination);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinkAuthPage = () => {\r\n  return (\r\n    <div>\r\n      <Link to=\"/login\">Войти</Link>\r\n      <span>или</span>\r\n      <Link to=\"/signup\">зарегистрироваться</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkAuthPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserName = ({ profileName, username, children }) => {\r\n  const getProfile = () => {\r\n    console.log(username);\r\n    profileName(username);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <Link onClick={getProfile} to={`/${username}`}>\r\n          {username}\r\n        </Link>\r\n      </h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nUserName.defaultProps = {\r\n  username: '',\r\n  children: null,\r\n};\r\n\r\nUserName.propTypes = {\r\n  username: PropTypes.string,\r\n  children: PropTypes.node,\r\n  profileName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserName;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst LinkHomePage = () => {\r\n  const { pathname } = useLocation();\r\n  if (pathname === '/') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Главная</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkHomePage;\r\n","import React from 'react';\r\n\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-spinner-223z6fdkjge\">\r\n      <div className=\"ldio-vwhx2ilfl4e\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { LikeTwoTone } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { favorite, unfavorite } from '../../redux/actions/article';\r\n\r\nconst mapDispatchToProps = {\r\n  favorite,\r\n  unfavorite,\r\n};\r\nconst FavoritesCount = ({ count, favorite, unfavorite, slug, favorited }) => {\r\n  const like = () => {\r\n    if (favorited) {\r\n      return unfavorite(slug);\r\n    }\r\n    return favorite(slug);\r\n  };\r\n\r\n  return (\r\n    <Button favorited={favorited} type=\"button\" onClick={like}>\r\n      {count}\r\n      <LikeTwoTone width=\"2.5em\" height=\"2.5em\" twoToneColor={favorited ? '#0cf77e' : '#3e4240'} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst Button = styled.button`\r\n  /* background: ${props => (props.favorited ? 'red' : 'pink')}; */\r\n  border: none;\r\n`;\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(FavoritesCount);\r\n","import React from 'react';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\nimport { Formik } from 'formik';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\nimport { InputTypeText, InputTypeTextArea } from '../../components';\r\nimport { articleCreate } from '../../redux/actions/article';\r\n\r\nconst validata = Yup.object().shape({\r\n  title: Yup.string().required('Введите ваше имя'),\r\n  description: Yup.string().required('Введите пароль'),\r\n  body: Yup.string().required('Required'),\r\n  tagList: Yup.string().required('Введите ваш E-mail'),\r\n});\r\n\r\nconst mapStateToProps = state => ({ state });\r\n\r\nconst mapDispatchToProps = {\r\n  articleCreate,\r\n};\r\n\r\nconst PostForm = ({ articleCreate }) => {\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    articleCreate(values).catch(error => {\r\n      const { errors } = error.response.data;\r\n      setErrors(errors);\r\n    });\r\n    console.log(21);\r\n    setSubmitting(false);\r\n  };\r\n  return (\r\n    <WrapperForm>\r\n      <Formik\r\n        initialValues={{\r\n          title: '',\r\n          description: '',\r\n          body: '',\r\n          tagList: '',\r\n        }}\r\n        validationSchema={validata}\r\n        onSubmit={onSubmit}\r\n      >\r\n        <Form>\r\n          <InputTypeText type=\"text\" name=\"title\" placeholder=\"title\" validating />\r\n          <InputTypeText type=\"text\" name=\"description\" placeholder=\"description\" validating />\r\n          <InputTypeTextArea name=\"body\" placeholder=\"content\" />\r\n          <InputTypeText type=\"text\" name=\"tagList\" placeholder=\"tags\" validating />\r\n          <WrapperButton>\r\n            <SubmitButton size=\"large\">Опубликовать</SubmitButton>\r\n          </WrapperButton>\r\n        </Form>\r\n      </Formik>\r\n    </WrapperForm>\r\n  );\r\n};\r\n\r\nconst WrapperForm = styled.div`\r\n  width: 50%;\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst WrapperButton = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import servisec from '../../servisec/servisec';\r\n\r\nconst fetchProfileRequest = () => ({\r\n  type: 'FETCH_PROFILE_REQUEST',\r\n});\r\n\r\nconst fetchProfileSuccess = profile => ({\r\n  type: 'FETCH_PROFILE_SUCCESS',\r\n  payload: profile,\r\n});\r\n\r\nconst fetchProfileFailure = () => ({\r\n  type: 'FETCH_PROFILE_FAILURE',\r\n});\r\n\r\nconst resetProfile = () => ({\r\n  type: 'RESET_PROFILE',\r\n});\r\n\r\nconst getProfile = name => dispatch => {\r\n  dispatch(fetchProfileRequest());\r\n  servisec.Profile.get(name).then(res => {\r\n    const profile = res.data;\r\n    dispatch(fetchProfileSuccess(profile));\r\n  });\r\n};\r\n\r\nexport { getProfile, resetProfile };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../../redux/actions/auth';\r\nimport { getProfile } from '../../redux/actions/profile';\r\nimport { AddPost, Container, LinkAuthPage, UserName, LinkHomePage } from '../../components';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  currentUser: auth.currentUser,\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logout,\r\n  getProfile,\r\n};\r\n\r\nconst Header = ({ getProfile, isAuthorizedUser, onLogout, currentUser: { username } }) => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <Container>\r\n        <div>\r\n          <LinkHomePage />\r\n          {isAuthorizedUser ? (\r\n            <UserName profileName={getProfile} username={username}>\r\n              <AddPost />\r\n            </UserName>\r\n          ) : null}\r\n        </div>\r\n        <div>{isAuthorizedUser ? <Button onClick={onLogout}>выход</Button> : <LinkAuthPage />}</div>\r\n      </Container>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nconst HeaderWrapper = styled.div`\r\n  background: #eee;\r\n  padding: 30px 0;\r\n\r\n  > div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import servisec from '../../servisec/servisec';\r\n\r\nconst login = user => {\r\n  return {\r\n    type: 'LOGIN',\r\n    payload: user,\r\n  };\r\n};\r\n\r\nconst fetchRegistrationSuccess = () => ({\r\n  type: 'FETCH_REGISTER_SUCCESS',\r\n});\r\n\r\nconst fetchRegistrationFailure = () => ({\r\n  type: 'FETCH_REGISTER_FAILURE',\r\n});\r\n\r\nconst registration = values => dispatch =>\r\n  servisec.Auth.register({\r\n    user: {\r\n      username: values.username,\r\n      email: values.email,\r\n      password: values.password,\r\n    },\r\n  }).then(res => {\r\n    dispatch(fetchRegistrationSuccess());\r\n  });\r\n\r\nconst fetchUserRequest = () => ({\r\n  type: 'FETCH_USER_REQUEST',\r\n});\r\n\r\nconst fetchUserSuccess = user => ({\r\n  type: 'FETCH_USER_SUCCESS',\r\n  payload: user,\r\n});\r\n\r\nconst fetchUserFailure = () => ({\r\n  type: 'FETCH_USER_FAILURE',\r\n});\r\n\r\nconst setUserData = () => dispatch => {\r\n  const token = localStorage.getItem('jwt');\r\n  if (token) {\r\n    servisec.getToken(token);\r\n  }\r\n  dispatch(fetchUserRequest());\r\n  servisec.Auth.current()\r\n    .then(res => {\r\n      const user = res.data;\r\n      dispatch(fetchUserSuccess(user));\r\n    })\r\n    .catch(() => {\r\n      dispatch(fetchUserFailure());\r\n    });\r\n};\r\nconst logout = () => {\r\n  localStorage.setItem('jwt', '');\r\n  servisec.getToken(null);\r\n  return {\r\n    type: 'LOGOUT',\r\n  };\r\n};\r\n\r\nconst loginUser = values => dispatch => {\r\n  servisec.Auth.login({\r\n    user: {\r\n      email: values.email,\r\n      password: values.password,\r\n    },\r\n  })\r\n    .then(res => {\r\n      const userData = res.data.user;\r\n      localStorage.setItem('jwt', userData.token);\r\n      servisec.getToken(userData.token);\r\n      dispatch(login({ user: userData }));\r\n    })\r\n    .catch(error => {\r\n      const { erro0rs } = error.response.data;\r\n    });\r\n};\r\nexport { registration, loginUser, logout, setUserData };\r\n","import React from 'react';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Block, InputTypePassword, InputTypeText } from '../../components';\r\nimport { registration } from '../../redux/actions/auth';\r\n\r\nconst validata = Yup.object().shape({\r\n  username: Yup.string()\r\n    .max(50, 'Имя должно содержать не более 50 символов')\r\n    .required('Введите ваше имя'),\r\n  password: Yup.string()\r\n    .min(8, 'Должно быть 8 символов или более')\r\n    .max(40, 'Должно быть не более 40 символов')\r\n    .test(\r\n      'pass',\r\n      'Только латинские буквы и цифры, хотя бы одна цифра и одна заглавная буква',\r\n      value => /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])/.test(value)\r\n    )\r\n    .required('Введите пароль'),\r\n  repeatPassword: Yup.string()\r\n    .test('passwords-match', 'Пароли не совподают', function(value) {\r\n      return this.parent.password === value;\r\n    })\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email('Введите коректные E-mail')\r\n    .required('Введите ваш E-mail'),\r\n});\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isRegistered: auth.isRegistered,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  registration,\r\n};\r\n\r\nconst SignupForm = ({ registration, isRegistered }) => {\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    registration(values).catch(error => {\r\n      const { errors } = error.response.data;\r\n      setErrors(errors);\r\n    });\r\n    setSubmitting(false);\r\n  };\r\n\r\n  if (isRegistered) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2 className=\"auth__title\">Регистрация</h2>\r\n        <p className=\"auth__text\">Для входа, вам нужно зарегистрироваться</p>\r\n      </div>\r\n      <Block backcolor=\"#fff\">\r\n        <Formik\r\n          initialValues={{\r\n            username: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n            email: '',\r\n          }}\r\n          validationSchema={validata}\r\n          onSubmit={onSubmit}\r\n        >\r\n          <Form>\r\n            <InputTypeText type=\"mail\" name=\"email\" placeholder=\"E-Mail\" icon=\"mail\" size=\"large\" />\r\n            <InputTypeText name=\"username\" placeholder=\"Ваше имя\" icon=\"user\" size=\"large\" />\r\n            <InputTypePassword name=\"password\" placeholder=\"Пароль\" />\r\n            <InputTypePassword name=\"repeatPassword\" placeholder=\"Повторите пароль\" size=\"large\" />\r\n            <div>\r\n              <SubmitButton size=\"large\" block>\r\n                Зарегистрироваться\r\n              </SubmitButton>\r\n            </div>\r\n            <div className=\"form__link\">\r\n              <Link to=\"/login\">Войти в аккаунт</Link>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </Block>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Block, InputTypePassword, InputTypeText } from '../../components';\r\nimport { loginUser } from '../../redux/actions/auth';\r\n\r\nconst validation = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(8, 'Must be 8 characters or more')\r\n    .max(40, 'Must be 40 characters or less')\r\n    .test(\r\n      'pass',\r\n      'Latin letters and numbers only, at least one number and one capital letter',\r\n      value => /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])/.test(value)\r\n    )\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email('Введите коректные E-mail')\r\n    .required('Введите ваш E-mail'),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: loginUser,\r\n};\r\n\r\nconst LoginForm = props => {\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    props.onLogin(values, setSubmitting, setErrors);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2 className=\"auth__title\">Войти в аккаунт</h2>\r\n        <p className=\"auth__text\">Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block backcolor=\"#fff\">\r\n        <Formik\r\n          initialValues={{\r\n            password: '',\r\n            email: '',\r\n          }}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          <Form>\r\n            <InputTypeText\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"E-mail\"\r\n              icon=\"mail\"\r\n              size=\"large\"\r\n            />\r\n            <InputTypePassword name=\"password\" placeholder=\"Пароль\" size=\"large\" />\r\n            <div>\r\n              <SubmitButton size=\"large\" block>\r\n                Войти в аккаунт\r\n              </SubmitButton>\r\n            </div>\r\n            <div className=\"form__link\">\r\n              <Link to=\"/signup\">Зарегистрироваться</Link>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </Block>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  onLogin: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { getProfile } from '../../redux/actions/profile';\r\nimport { getArticle } from '../../redux/actions/article';\r\nimport { ArticleItem, ListPagination, Container } from '../../components';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    articles: state.article.articles,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getProfile,\r\n  getArticle,\r\n};\r\n\r\nconst ArticleAll = ({ articles, getProfile, getArticle }) => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        {articles.map(article => {\r\n          return (\r\n            <ArticleItem\r\n              article={article}\r\n              getArticle={getArticle}\r\n              getProfileName={getProfile}\r\n              key={article.slug}\r\n            />\r\n          );\r\n        })}\r\n        <WrapperPagination>\r\n          <ListPagination />\r\n        </WrapperPagination>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrapperPagination = styled.div`\r\n  margin: 50px 0;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleAll);\r\n","import React from 'react';\r\n\r\nimport { Loading } from '../../components';\r\n\r\nconst ProfilePreview = ({ profile, isLoading }) => {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img alt={profile.username} width=\"128\" height=\"128\" src={profile.image} />\r\n      </div>\r\n      <div>\r\n        <h1>{profile.username}</h1>\r\n        <div>\r\n          <a href=\"\">Редактировать профиль</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePreview;\r\n","import React from 'react';\r\nimport { Loading, FavoritesCount } from '../../components';\r\n\r\nconst ArticlePreview = ({ article, isProgres }) => {\r\n  if (isProgres) {\r\n    return <Loading />;\r\n  }\r\n  console.log(article.favoritesCount);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src={article.author.image} alt={article.author.username} />\r\n        <span>{article.author.username}</span>\r\n        <span>{article.author.bio}</span>\r\n      </div>\r\n      <div>\r\n        <h3>{article.title}</h3>\r\n        <p>{article.body}</p>\r\n        <div>{article.description}</div>\r\n        <div>{article.tagList}</div>\r\n        <div>{article.createdAt}</div>\r\n        <div>\r\n          <FavoritesCount\r\n            count={article.favoritesCount}\r\n            slug={article.slug}\r\n            favorited={article.favorited}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticlePreview;\r\n// {\r\n//   \"article\": {\r\n//     \"slug\": \"how-to-train-your-dragon\",\r\n//     \"title\": \"How to train your dragon\",\r\n//     \"description\": \"Ever wonder how?\",\r\n//     \"body\": \"It takes a Jacobian\",\r\n//     \"tagList\": [\"dragons\", \"training\"],\r\n//     \"createdAt\": \"2016-02-18T03:22:56.637Z\",\r\n//     \"updatedAt\": \"2016-02-18T03:48:35.824Z\",\r\n//     \"favorited\": false,\r\n//     \"favoritesCount\": 0,\r\n//     \"author\": {\r\n//       \"username\": \"jake\",\r\n//       \"bio\": \"I work at statefarm\",\r\n//       \"image\": \"https://i.stack.imgur.com/xHWG8.jpg\",\r\n//       \"following\": false\r\n//     }\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { LoginForm, SignupForm } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst Auth = ({ isAuthorizedUser }) => {\r\n  if (isAuthorizedUser) return <Redirect to=\"/\" />;\r\n  return (\r\n    <WrapperForm>\r\n      <div>\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/signup\" component={SignupForm} />\r\n      </div>\r\n    </WrapperForm>\r\n  );\r\n};\r\n\r\nconst WrapperForm = styled.div`\r\n  text-align: center;\r\n  color: #202002;\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  > div {\r\n    width: 400px;\r\n    max-width: 75%;\r\n  }\r\n\r\n  .auth__title {\r\n    font-size: 28px;\r\n    line-height: 33px;\r\n    margin-bottom: 5px;\r\n  }\r\n  .form__link {\r\n    margin-top: 30px;\r\n\r\n    a {\r\n      font-size: 16px;\r\n      line-height: 19px;\r\n      color: #adadad;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n      &:focus {\r\n        color: #1890ff;\r\n      }\r\n      &:active {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .auth__text {\r\n    opacity: 0.5;\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n  .btn {\r\n    width: 200px;\r\n    height: 200px;\r\n    background: #000;\r\n  }\r\n  .btn-2 {\r\n    background: red;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps)(Auth);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Header, ArticleAll } from '../../modules';\r\n\r\nconst mapStateToProps = state => ({\r\n  isProgres: state.article.isProgres,\r\n});\r\n\r\nconst Home = ({ isProgres }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      {isProgres ? <div>Загрузка</div> : <ArticleAll />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { PostForm, Header } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst CreatePost = ({ isAuthorizedUser }) => {\r\n  if (!isAuthorizedUser) return <Redirect to=\"/login\" />;\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Wrapper>\r\n        <PostForm />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px 0;\r\n`;\r\n\r\nexport default connect(mapStateToProps)(CreatePost);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Header, ProfilePreview } from '../../modules';\r\nimport { Container } from '../../components';\r\nimport { getProfile, resetProfile } from '../../redux/actions/profile';\r\n\r\nconst mapStateToProps = ({ userProfile }) => ({\r\n  profile: userProfile.profile,\r\n  isLoading: userProfile.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProfile,\r\n  resetProfile,\r\n};\r\n\r\nclass Profile extends React.Component {\r\n  componentDidMount() {\r\n    const { getProfile } = this.props;\r\n    const profileName = localStorage.getItem('ProfileName');\r\n    getProfile(profileName);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetProfile } = this.props;\r\n    resetProfile();\r\n  }\r\n\r\n  render() {\r\n    const { profile, isLoading } = this.props;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <ProfilePreview profile={profile} isLoading={isLoading} />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Header, ArticlePreview } from '../../modules';\r\nimport { Container } from '../../components';\r\nimport { getProfile, resetProfile } from '../../redux/actions/profile';\r\nimport { getArticle } from '../../redux/actions/article';\r\n\r\nconst mapStateToProps = ({ article }) => ({\r\n  article: article.articleCurrent,\r\n  isProgres: article.isProgres,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getArticle,\r\n  resetProfile,\r\n};\r\n\r\nclass Article extends React.Component {\r\n  componentDidMount() {\r\n    const { getArticle } = this.props;\r\n    const articleSlug = localStorage.getItem('articleSlug');\r\n    getArticle(articleSlug);\r\n  }\r\n\r\n  render() {\r\n    const { article, isProgres } = this.props;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <ArticlePreview article={article} isProgres={isProgres} />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);\r\n","import Loading from './loading';\r\n\r\nexport default Loading;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Home, Auth, CreatePost, Profile, Article } from '../../pages';\nimport { setUserData } from '../../redux/actions/auth';\nimport { articleLoaded } from '../../redux/actions/article';\nimport Loading from '../Loading';\n\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\n\nconst mapStateToProps = ({ auth, article }) => {\n  return {\n    isAutoUser: auth.isAutoUser,\n    articles: article.articles,\n    isSuccess: auth.isSuccess,\n  };\n};\n\nconst mapDispatchToProps = {\n  getAllArticles: articleLoaded,\n  onLoad: setUserData,\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { getAllArticles, onLoad } = this.props;\n    getAllArticles();\n    onLoad();\n  }\n\n  render() {\n    const { isSuccess } = this.props;\n    if (isSuccess) {\n      return <Loading />;\n    }\n\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path={['/login', '/signup']} component={Auth} />\n          <Route path=\"/add\" component={CreatePost} />\n          <Route exact path=\"/:username\" component={Profile} />\n          <Route exact path=\"/articles/:slug\" component={Article} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  getAllArticles: PropTypes.func.isRequired,\n  onLoad: PropTypes.func.isRequired,\n  isSuccess: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
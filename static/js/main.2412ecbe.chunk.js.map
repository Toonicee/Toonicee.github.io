{"version":3,"sources":["servisec/servisec.js","redux/reducers/auth.js","redux/reducers/article-list.js","redux/reducers/profile.js","redux/reducers/article.js","redux/reducers/index.js","redux/store.js","components/Block/Block.jsx","components/Block/index.js","helper/displayStatus.js","components/Input-type-password/Input-type-password.jsx","components/Input-type-password/index.js","components/Input-type-text/Input-type-text.jsx","components/Input-type-text/index.js","components/Input-type-textarea/Input-type-textarea.jsx","components/Add-post/index.js","components/Add-post/Add-post.jsx","components/Button/Button.jsx","components/Container/Container.jsx","components/Article-item/Article-item.jsx","redux/actions/article/article.js","redux/actions/article/async-article.js","redux/actions/auth/auth.js","components/List-pagination/List-pagination.jsx","components/Link-auth-page/Link-auth-page.jsx","components/User-name/User-name.jsx","components/Link-home-page/Link-home-page.jsx","components/Loading/loading.jsx","components/Favorites-count/Favorites-count.jsx","components/result-registration/result-registration.jsx","components/Edit-link/Edit-link.jsx","components/Date-creation/Date-creation.jsx","modules/Post-form/Post-form.jsx","redux/actions/profile.js","modules/Header/Header.jsx","modules/Signup-form/Signup-form.jsx","redux/actions/auth/async-auth.js","modules/Login-form/Login-form.jsx","modules/Article-all/Article-all.jsx","modules/Profile-preview/Profile-preview.jsx","modules/Article-preview/Article-preview.jsx","pages/Auth/Auth.jsx","pages/Home/Home.jsx","pages/Create-Post/Create-Post.jsx","pages/Profile/Profile.jsx","pages/Article/Article.jsx","pages/Edit-article/Edit-article.jsx","components/Loading/index.js","components/App/App.jsx","serviceWorker.js","index.jsx"],"names":["axios","defaults","baseURL","getAll","page","get","params","limit","offset","del","slug","delete","favorite","post","unfavorite","create","article","edit","value","put","current","register","body","login","token","headers","common","Authorization","follow","username","unfollow","initialState","currentUser","error","isAuthorizedUser","inProgress","isRegistered","auth","handleActions","FETCH_USER_REQUEST","state","FETCH_REGISTER_REQUEST","FETCH_USER_SUCCESS","payload","user","FETCH_USER_FAILURE","FETCH_REGISTER_SUCCESS","FETCH_REGISTER_FAILURE","FETCH_AUTH_REQUEST","FETCH_AUTH_SUCCESS","FETCH_AUTH_FAILURE","LOGOUT","localStorage","setItem","servisec","RESET_FORM","like","articles","map","favorited","favoritesCount","FETCH_ARTICLES_REQUEST","isProgress","FETCH_ARTICLES_SUCCESS","articlesCount","FETCH_ARTICLES_FAILURE","ARTICLE_FAVORITED","ARTICLE_UNFAVORITED","inicialState","isLoading","profile","userProfile","action","type","FETCH_ARTICLE_REQUEST","FETCH_ARTICLE_SUCCESS","articleCurrent","FETCH_ARTICLE_FAILURE","FETCH_CREATE_ARTICLE_REQUEST","FETCH_CREATE_ARTICLE_SUCCESS","FETCH_CREATE_ARTICLE_FAILURE","FETCH_UPDATE_REQUEST","FETCH_UPDATE_SUCCESS","console","log","FETCH_UPDATE_FAILURE","author","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Block","children","backcolor","BlockStyle","className","defaultProps","styled","div","props","displayStatus","key","touched","InputTypePassword","name","placeholder","size","useField","meta","Item","hasFeedback","validateStatus","htmlFor","Password","prefix","LockOutlined","id","InputTypeText","icon","validating","status","InputTypeTextArea","TextArea","AddPost","useLocation","pathname","to","Button","ContainerWrapper","Container","InnerArticle","ArticleBody","ArticleHeader","ArticleItem","getArticle","renderTagLIst","tagList","tag","onClick","date","createdAt","title","length","count","fetchArticlesRequest","createAction","fetchArticlesSuccess","fetchArticlesFailure","fetchArticleRequest","fetchArticleSuccess","fetchArticleFailure","fetchCreateArticleRequest","fetchCreateArticleSuccess","fetchCreateArticleFailure","fetchUpdateRequest","fetchUpdateSuccess","fetchUpdateFailure","articleFavorited","articleUnfavorited","getAllArticles","dispatch","actions","then","res","articleData","data","catch","fetchRegisterRequest","fetchRegisterSuccess","fetchRegisterFailure","fetchAuthRequest","fetchAuthSuccess","fetchAuthFailure","fetchUserRequest","fetchUserSuccess","fetchUserFailure","logout","resetFormState","mapDispatchToProps","ListPagination","Nav","onChange","total","nav","connect","LinkAuthPage","UserName","profileName","LinkHomePage","Loading","button","LikeTwoTone","width","height","twoToneColor","ResultRegistration","success","WrapperResult","CheckCircleTwoTone","extra","EditLink","DateCreation","undefined","formattedDate","formatDistanceToNow","Date","locale","ruLocale","addSuffix","dateTime","articleCreate","setErrors","setSubmitting","errors","response","editArticle","values","filteredValues","Object","entries","reduce","acc","field","err","WrapperForm","WrapperButton","initialValues","description","setInitialValues","onSubmit","rows","resetProfile","getProfile","fetchProfileSuccess","onLogout","HeaderWrapper","header","validata","Yup","shape","required","password","repeatPassword","test","this","parent","email","registration","cbError","cbSubmitting","validationSchema","resetForm","block","validation","min","max","loginUser","userData","ArticleAll","Main","WrapperArticle","getProfileName","WrapperPagination","React","Component","main","ProfilePreview","alt","src","image","href","ArticlePreview","canModify","bio","updatedAt","Auth","exact","path","component","LoginForm","SignupForm","Home","Wrapper","Profile","getItem","Article","EditArticle","setUserData","App","CreatePost","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister","message"],"mappings":"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","file":"static/js/main.2412ecbe.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\r\n\r\nconst getToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common.Authorization = `Token ${token}`;\r\n  }\r\n};\r\n\r\nconst Auth = {\r\n  current: () => axios.get('/user'),\r\n  register: body => axios.post('/users', body),\r\n  login: body => axios.post('/users/login', body),\r\n};\r\nconst Article = {\r\n  getAll: (page = 0) =>\r\n    axios.get('/articles', {\r\n      params: {\r\n        limit: 10,\r\n        offset: page * 10,\r\n      },\r\n    }),\r\n  del: slug => axios.delete(`/articles/${slug}`),\r\n  favorite: slug => axios.post(`/articles/${slug}/favorite`),\r\n  get: slug => axios.get(`/articles/${slug}`),\r\n  unfavorite: slug => axios.delete(`/articles/${slug}/favorite`),\r\n  create: article => axios.post('/articles', { article }),\r\n  edit: (slug, value) => axios.put(`/articles/${slug}`, { article: value }),\r\n};\r\n\r\nconst Profile = {\r\n  follow: username => axios.post(`/profiles/${username}/follow`),\r\n  get: username => axios.get(`/profiles/${username}`),\r\n  unfollow: username => axios.del(`/profiles/${username}/follow`),\r\n};\r\n\r\nexport default {\r\n  Article,\r\n  Auth,\r\n  getToken,\r\n  Profile,\r\n};\r\n\r\n// нэйминги: опечатки и переименование\r\n// переделать экшены - какие-то объеденить, какие-то разделить (посмотреть в документации редакс как работать с асинхронными экшенами)\r\n// переработать структуру и логику services\r\n// почистить проект от лишнего кода (например пропсов)\r\n","import { handleActions } from 'redux-actions';\r\nimport servisec from '../../servisec/servisec';\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  error: null,\r\n  isAuthorizedUser: false,\r\n  inProgress: false,\r\n  isRegistered: false,\r\n};\r\n\r\nconst auth = handleActions(\r\n  {\r\n    FETCH_USER_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_REGISTER_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_USER_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        currentUser: payload.user,\r\n        inProgress: false,\r\n        isAuthorizedUser: true,\r\n      };\r\n    },\r\n    FETCH_USER_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n      };\r\n    },\r\n    FETCH_REGISTER_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        currentUser: payload,\r\n        inProgress: false,\r\n        isRegistered: true,\r\n      };\r\n    },\r\n    FETCH_REGISTER_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n      };\r\n    },\r\n    FETCH_AUTH_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_AUTH_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        currentUser: payload.user,\r\n        inProgress: false,\r\n        isAuthorizedUser: true,\r\n      };\r\n    },\r\n    FETCH_AUTH_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n      };\r\n    },\r\n    LOGOUT: () => {\r\n      localStorage.setItem('jwt', '');\r\n      servisec.getToken(null);\r\n      return { ...initialState };\r\n    },\r\n    RESET_FORM: state => {\r\n      return {\r\n        ...state,\r\n        isRegistered: false,\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default auth;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n  articles: [],\r\n  isProgress: false,\r\n};\r\n\r\nconst like = (articles, payload) =>\r\n  articles.map(article => {\r\n    if (article.slug === payload.article.slug) {\r\n      return {\r\n        ...article,\r\n        favorited: payload.article.favorited,\r\n        favoritesCount: payload.article.favoritesCount,\r\n      };\r\n    }\r\n    return article;\r\n  });\r\n\r\nconst articles = handleActions(\r\n  {\r\n    FETCH_ARTICLES_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n      };\r\n    },\r\n    FETCH_ARTICLES_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articles: payload.articles,\r\n        articlesCount: payload.articlesCount,\r\n        isProgress: false,\r\n      };\r\n    },\r\n    FETCH_ARTICLES_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n      };\r\n    },\r\n    ARTICLE_FAVORITED: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articles: like(state.articles, payload),\r\n      };\r\n    },\r\n    ARTICLE_UNFAVORITED: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articles: like(state.articles, payload),\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default articles;\r\n","const inicialState = {\r\n  isLoading: false,\r\n  profile: {},\r\n};\r\n\r\nconst userProfile = (state = inicialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_PROFILE_REQUEST':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case 'FETCH_PROFILE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        profile: action.payload.profile,\r\n        isLoading: false,\r\n      };\r\n    case 'RESET_PROFILE':\r\n      return {\r\n        ...inicialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userProfile;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n  isProgress: false,\r\n  error: null,\r\n  articleCurrent: {\r\n    author: {},\r\n  },\r\n};\r\nconst article = handleActions(\r\n  {\r\n    FETCH_ARTICLE_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_ARTICLE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n        isProgress: false,\r\n      };\r\n    },\r\n\r\n    FETCH_ARTICLE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n      };\r\n    },\r\n    FETCH_CREATE_ARTICLE_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_CREATE_ARTICLE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n        isProgress: false,\r\n        error: false,\r\n      };\r\n    },\r\n    FETCH_CREATE_ARTICLE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    FETCH_UPDATE_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_UPDATE_SUCCESS: (state, { payload }) => {\r\n      console.log(payload);\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n        isProgress: false,\r\n        error: false,\r\n      };\r\n    },\r\n    FETCH_UPDATE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default article;\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nimport articles from './article-list';\r\nimport userProfile from './profile';\r\nimport article from './article';\r\n\r\nexport default combineReducers({ auth, articles, article, userProfile });\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Block = ({ children, backcolor }) => (\r\n  <BlockStyle backcolor={backcolor} className=\"block\">\r\n    {children}\r\n  </BlockStyle>\r\n);\r\n\r\nBlock.defaultProps = {\r\n  backcolor: '',\r\n};\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  backcolor: PropTypes.string,\r\n};\r\n\r\nconst BlockStyle = styled.div`\r\n  padding: 45px;\r\n  background-color: ${props => props.backcolor};\r\n  box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.04204);\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default Block;\r\n","import Block from './Block';\r\n\r\nexport default Block;\r\n","const displayStatus = key => {\r\n  if (key.touched && key.error) {\r\n    return 'error';\r\n  }\r\n  if (!key.touched) {\r\n    return '';\r\n  }\r\n  return 'success';\r\n};\r\n\r\nexport default displayStatus;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'formik-antd';\r\nimport { LockOutlined } from '@ant-design/icons';\r\nimport { useField } from 'formik';\r\n\r\nimport displayStatus from '../../helper/displayStatus';\r\n\r\nconst InputTypePassword = ({ name, placeholder, children, size }) => {\r\n  const [, meta] = useField(name);\r\n\r\n  return (\r\n    <Form.Item name={name} hasFeedback validateStatus={displayStatus(meta)}>\r\n      <label htmlFor={name}>{children}</label>\r\n      <Input.Password\r\n        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n        size={size}\r\n        id={name}\r\n        name={name}\r\n        placeholder={placeholder}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nInputTypePassword.defaultProps = {\r\n  placeholder: '',\r\n  children: null,\r\n  size: 'default',\r\n};\r\n\r\nInputTypePassword.propTypes = {\r\n  children: PropTypes.node,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  size: PropTypes.string,\r\n};\r\n\r\nexport default InputTypePassword;\r\n","import InputTypePassword from './Input-type-password';\r\n\r\nexport default InputTypePassword;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'formik-antd';\r\nimport { useField } from 'formik';\r\nimport { Icon } from 'antd';\r\n\r\nimport displayStatus from '../../helper/displayStatus';\r\n\r\nconst InputTypeText = ({ name, children, placeholder, type, icon, size, validating }) => {\r\n  const [, meta] = useField(name);\r\n  console.log(meta);\r\n  const status = validating ? displayStatus(meta) : null;\r\n  return (\r\n    <Form.Item name={name} hasFeedback validateStatus={status}>\r\n      <label htmlFor={name}>{children}</label>\r\n      <Input\r\n        prefix={<Icon type={icon} />}\r\n        size={size}\r\n        id={name}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nInputTypeText.defaultProps = {\r\n  type: 'text',\r\n  placeholder: '',\r\n  children: null,\r\n  size: 'default',\r\n  icon: 'none',\r\n  validating: true,\r\n};\r\n\r\nInputTypeText.propTypes = {\r\n  children: PropTypes.node,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  size: PropTypes.string,\r\n  type: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  validating: PropTypes.bool,\r\n};\r\nexport default InputTypeText;\r\n","import InputTypeText from './Input-type-text';\r\n\r\nexport default InputTypeText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'formik-antd';\r\n\r\nconst InputTypeTextArea = ({ name, children, placeholder }) => {\r\n  return (\r\n    <Form.Item name={name}>\r\n      <label htmlFor={name}>{children}</label>\r\n      <Input.TextArea\r\n        id={name}\r\n        // autoSize={{ minRows: 3, maxRows: 7 }}\r\n        name={name}\r\n        placeholder={placeholder}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nInputTypeTextArea.defaultProps = {\r\n  placeholder: '',\r\n  children: null,\r\n};\r\n\r\nInputTypeTextArea.propTypes = {\r\n  children: PropTypes.node,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default InputTypeTextArea;\r\n","import AddPost from './Add-post';\r\n\r\nexport default AddPost;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst AddPost = () => {\r\n  const { pathname } = useLocation();\r\n  if (pathname === '/add') {\r\n    return null;\r\n  }\r\n  return <Link to=\"/add\">Добавить новый пост</Link>;\r\n};\r\n\r\nexport default AddPost;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button as ButtonMain } from 'antd';\r\n\r\nconst Button = ({ children, type }) => <ButtonMain type={type}>{children}</ButtonMain>;\r\n\r\nButton.defaultProps = {\r\n  type: '',\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => <ContainerWrapper>{children}</ContainerWrapper>;\r\n\r\nconst ContainerWrapper = styled.div`\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FavoritesCount, DateCreation } from '../index';\r\n\r\nconst ArticleItem = ({ article, getArticle }) => {\r\n  const renderTagLIst = (\r\n    <div>\r\n      <ul className=\"article__tag-list\">\r\n        {article.tagList.map(tag => (\r\n          <li key={tag}>{tag}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n  const getProfile = () => {\r\n    localStorage.setItem('ProfileName', article.author.username);\r\n  };\r\n\r\n  const getArticleOne = () => {\r\n    getArticle(article.slug);\r\n  };\r\n  return (\r\n    <InnerArticle>\r\n      <ArticleHeader>\r\n        <div className=\"article__author\">\r\n          <span className=\"article__desc\">Автор:</span>\r\n          <Link onClick={getProfile} to={`/${article.author.username}`}>\r\n            {article.author.username}\r\n          </Link>\r\n        </div>\r\n        <DateCreation date={article.createdAt} />\r\n      </ArticleHeader>\r\n      <ArticleBody>\r\n        <Link onClick={getArticleOne} to={`/articles/${article.slug}`}>\r\n          <div>\r\n            <h3 className=\"article__title\">{article.title}</h3>\r\n          </div>\r\n          {article.tagList.length === 0 ? null : renderTagLIst}\r\n        </Link>\r\n        <FavoritesCount\r\n          favorited={article.favorited}\r\n          count={article.favoritesCount}\r\n          slug={article.slug}\r\n        />\r\n      </ArticleBody>\r\n    </InnerArticle>\r\n  );\r\n};\r\n\r\nArticleItem.propTypes = {\r\n  article: PropTypes.node.isRequired,\r\n  getProfileName: PropTypes.func.isRequired,\r\n};\r\n\r\nconst InnerArticle = styled.div`\r\n  border: 2px solid rgba(0, 0, 0, 0.05);\r\n  background: #fff;\r\n  margin-bottom: 20px;\r\n  padding: 25px 15px;\r\n`;\r\n\r\nconst ArticleBody = styled.div`\r\n  .article__tag-list {\r\n    display: flex;\r\n    list-style: none;\r\n    padding: 0;\r\n    opacity: 0.7;\r\n    font-size: 12px;\r\n\r\n    li {\r\n      margin: 0 0.5em 0 0;\r\n      color: #5e6973;\r\n      font-size: 13px;\r\n      &:hover {\r\n        color: #548eaa;\r\n      }\r\n    }\r\n  }\r\n  .article__title {\r\n    color: #333;\r\n    font-weight: 500;\r\n    font-size: 28px;\r\n    line-height: 36.4px;\r\n\r\n    &:hover {\r\n      color: #548eaa;\r\n    }\r\n    &:active {\r\n      color: #5790ac;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArticleHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  .article__author {\r\n    color: #548eaa;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    text-decoration: none;\r\n    margin: 0 15px 0 0;\r\n  }\r\n  .article__desc {\r\n    margin-right: 10px;\r\n  }\r\n  p {\r\n    margin: 0;\r\n    font-weight: 700;\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport default ArticleItem;\r\n","import { createAction } from 'redux-actions';\r\n\r\n// аctions getting all the articles\r\nexport const fetchArticlesRequest = createAction('FETCH_ARTICLES_REQUEST');\r\nexport const fetchArticlesSuccess = createAction('FETCH_ARTICLES_SUCCESS');\r\nexport const fetchArticlesFailure = createAction('FETCH_ARTICLES_FAILURE');\r\n\r\n// actions to get the current article\r\nexport const fetchArticleRequest = createAction('FETCH_ARTICLE_REQUEST');\r\nexport const fetchArticleSuccess = createAction('FETCH_ARTICLE_SUCCESS');\r\nexport const fetchArticleFailure = createAction('FETCH_ARTICLE_FAILURE');\r\n\r\n// action article creation\r\nexport const fetchCreateArticleRequest = createAction('FETCH_CREATE_ARTICLE_REQUEST');\r\nexport const fetchCreateArticleSuccess = createAction('FETCH_CREATE_ARTICLE_SUCCESS');\r\nexport const fetchCreateArticleFailure = createAction('FETCH_CREATE_ARTICLE_FAILURE');\r\n\r\n// action article update\r\nexport const fetchUpdateRequest = createAction('FETCH_UPDATE_REQUEST');\r\nexport const fetchUpdateSuccess = createAction('FETCH_UPDATE_SUCCESS');\r\nexport const fetchUpdateFailure = createAction('FETCH_UPDATE_FAILURE');\r\n\r\n// action like dislike\r\nexport const articleFavorited = createAction('ARTICLE_FAVORITED');\r\nexport const articleUnfavorited = createAction('ARTICLE_UNFAVORITED');\r\n\r\nexport const resetFormArticle = createAction('RESET_FORM_ARTICLE');\r\n","import servisec from '../../../servisec/servisec';\r\nimport * as actions from './article';\r\n\r\nconst getAllArticles = page => dispatch => {\r\n  dispatch(actions.fetchArticlesRequest());\r\n  servisec.Article.getAll(page)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchArticlesSuccess(articleData));\r\n    })\r\n    .catch(error => {\r\n      dispatch(actions.fetchArticlesFailure());\r\n    });\r\n};\r\n\r\nconst getArticle = slug => dispatch => {\r\n  localStorage.setItem('articleSlug', slug);\r\n  dispatch(actions.fetchArticleRequest());\r\n  servisec.Article.get(slug)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchArticleSuccess(articleData));\r\n    })\r\n    .catch(error => {\r\n      dispatch(actions.fetchArticleFailure());\r\n    });\r\n};\r\n\r\nconst favorite = slug => dispatch => {\r\n  servisec.Article.favorite(slug).then(res => {\r\n    const articleData = res.data;\r\n    dispatch(actions.articleFavorited(articleData));\r\n  });\r\n};\r\n\r\nconst unfavorite = slug => dispatch => {\r\n  servisec.Article.unfavorite(slug).then(res => {\r\n    const articleData = res.data;\r\n    dispatch(actions.articleUnfavorited(articleData));\r\n  });\r\n};\r\n\r\nconst articleCreate = (article, setErrors, setSubmitting) => dispatch => {\r\n  dispatch(actions.fetchCreateArticleRequest());\r\n  servisec.Article.create(article)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      console.log(articleData);\r\n      dispatch(actions.fetchCreateArticleSuccess(articleData));\r\n      setSubmitting();\r\n    })\r\n    .catch(error => {\r\n      const { errors } = error.response.data;\r\n      dispatch(actions.fetchCreateArticleFailure());\r\n      setErrors(errors);\r\n      setSubmitting();\r\n    });\r\n};\r\nconst editArticle = (slug, values) => dispatch => {\r\n  dispatch(actions.fetchUpdateRequest());\r\n  const filteredValues = Object.entries(values).reduce(\r\n    (acc, [field, value]) => (value === '' ? acc : { ...acc, [field]: value }),\r\n    {}\r\n  );\r\n  console.log(slug, filteredValues);\r\n  servisec.Article.edit(slug, filteredValues)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchUpdateSuccess(articleData));\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch(actions.fetchUpdateFailure());\r\n    });\r\n};\r\n\r\nexport { getAllArticles, favorite, unfavorite, getArticle, articleCreate, editArticle };\r\n","import { createAction } from 'redux-actions';\r\n\r\n// registration actions\r\nexport const fetchRegisterRequest = createAction('FETCH_REGISTER_REQUEST');\r\nexport const fetchRegisterSuccess = createAction('FETCH_REGISTER_SUCCESS');\r\nexport const fetchRegisterFailure = createAction('FETCH_REGISTER_FAILURE');\r\n\r\n// authorization actions\r\nexport const fetchAuthRequest = createAction('FETCH_AUTH_REQUEST');\r\nexport const fetchAuthSuccess = createAction('FETCH_AUTH_SUCCESS');\r\nexport const fetchAuthFailure = createAction('FETCH_AUTH_FAILURE');\r\n\r\n// current user actions\r\nexport const fetchUserRequest = createAction('FETCH_USER_REQUEST');\r\nexport const fetchUserSuccess = createAction('FETCH_USER_SUCCESS');\r\nexport const fetchUserFailure = createAction('FETCH_USER_FAILURE');\r\n\r\nexport const logout = createAction('LOGOUT');\r\nexport const resetFormState = createAction('RESET_FORM');\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Pagination } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { getAllArticles } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ articles }) => ({\r\n  articles: articles.articles,\r\n  articlesCount: articles.articlesCount,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAllArticles,\r\n};\r\n\r\nconst ListPagination = ({ getAllArticles, articlesCount }) => {\r\n  if (articlesCount <= 10) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Nav>\r\n      <Pagination onChange={value => getAllArticles(value - 1)} total={articlesCount} />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nListPagination.defaultProps = {\r\n  articlesCount: 0,\r\n};\r\n\r\nListPagination.propTypes = {\r\n  getAllArticles: PropTypes.func.isRequired,\r\n  articlesCount: PropTypes.number,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPagination);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinkAuthPage = () => {\r\n  return (\r\n    <div>\r\n      <Link to=\"/login\">Войти</Link>\r\n      <span>или</span>\r\n      <Link to=\"/signup\">зарегистрироваться</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkAuthPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserName = ({ profileName, username, children }) => {\r\n  const getProfile = () => {\r\n    localStorage.setItem('ProfileName', username);\r\n\r\n    profileName(username);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <Link onClick={getProfile} to={`/${username}`}>\r\n          {username}\r\n        </Link>\r\n      </h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nUserName.defaultProps = {\r\n  username: '',\r\n  children: null,\r\n};\r\n\r\nUserName.propTypes = {\r\n  username: PropTypes.string,\r\n  children: PropTypes.node,\r\n  profileName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserName;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst LinkHomePage = () => {\r\n  const { pathname } = useLocation();\r\n  if (pathname === '/') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Главная</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkHomePage;\r\n","import React from 'react';\r\n\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-spinner-223z6fdkjge\">\r\n      <div className=\"ldio-vwhx2ilfl4e\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { LikeTwoTone } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { favorite, unfavorite } from '../../redux/actions';\r\n\r\nconst mapDispatchToProps = {\r\n  favorite,\r\n  unfavorite,\r\n};\r\nconst FavoritesCount = ({ count, favorite, unfavorite, slug, favorited }) => {\r\n  const like = () => {\r\n    if (favorited) {\r\n      return unfavorite(slug);\r\n    }\r\n    return favorite(slug);\r\n  };\r\n\r\n  return (\r\n    <Button favorited={favorited} type=\"button\" onClick={like}>\r\n      {count}\r\n      <LikeTwoTone width=\"2.5em\" height=\"2.5em\" twoToneColor={favorited ? '#0cf77e' : '#3e4240'} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  background: inherit;\r\n  border: none;\r\n`;\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(FavoritesCount);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Result } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\nconst ResultRegistration = ({ success, resetFormState }) => {\r\n  return (\r\n    <WrapperResult success={success}>\r\n      <Result\r\n        icon={<CheckCircleTwoTone twoToneColor=\"#52c41a\" />}\r\n        title=\"Вы успешно зарегистрировались!\"\r\n        extra={\r\n          <Link onClick={resetFormState} to=\"/login\" type=\"primary\">\r\n            Войти\r\n          </Link>\r\n        }\r\n      />\r\n    </WrapperResult>\r\n  );\r\n};\r\n\r\nResultRegistration.defaultProps = {\r\n  success: false,\r\n};\r\n\r\nResultRegistration.propTypes = {\r\n  resetFormState: PropTypes.func.isRequired,\r\n  success: PropTypes.bool,\r\n};\r\n\r\nconst WrapperResult = styled.div`\r\n  width: 300px;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport default ResultRegistration;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EditLink = ({ slug }) => {\r\n  return (\r\n    <div>\r\n      <Link to={`/articles/${slug}/edit`}>редактировть</Link>\r\n      <Link to={`/articles/${slug}/edit`}>удалить</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditLink;\r\n","import React from 'react';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DateCreation = ({ date }) => {\r\n  if (date === undefined) {\r\n    return null;\r\n  }\r\n  const formattedDate = formatDistanceToNow(new Date(date), {\r\n    locale: ruLocale,\r\n    addSuffix: true,\r\n  });\r\n\r\n  return (\r\n    <p>\r\n      <time dateTime={date}>{formattedDate}</time>\r\n    </p>\r\n  );\r\n};\r\n\r\nDateCreation.propTypes = {\r\n  date: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DateCreation;\r\n","import React from 'react';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\nimport { Formik } from 'formik';\r\nimport { Icon } from 'antd';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { InputTypeText, InputTypeTextArea } from '../../components';\r\nimport { articleCreate, editArticle } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ article }) => ({\r\n  articleCurrent: article.articleCurrent,\r\n  error: article.error,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  articleCreate,\r\n  editArticle,\r\n};\r\n\r\nconst PostForm = ({ articleCreate, editArticle, articleCurrent, error }) => {\r\n  const { pathname } = useLocation();\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    if (pathname === '/add') {\r\n      articleCreate(\r\n        values,\r\n        error => setErrors(error),\r\n        () => setSubmitting(false)\r\n      );\r\n    } else {\r\n      editArticle(articleCurrent.slug, values);\r\n    }\r\n  };\r\n  if (error === false) {\r\n    localStorage.setItem('articleSlug', articleCurrent.slug);\r\n    return <Redirect to={`/articles/${articleCurrent.slug}`} />;\r\n  }\r\n  const setInitialValues = pathname => {\r\n    if (pathname !== '/add') {\r\n      return {\r\n        title: articleCurrent.title,\r\n        description: articleCurrent.description,\r\n        body: articleCurrent.body,\r\n      };\r\n    }\r\n    return {\r\n      title: '',\r\n      description: '',\r\n      body: '',\r\n      tagList: '',\r\n    };\r\n  };\r\n  return (\r\n    <WrapperForm>\r\n      <Formik initialValues={setInitialValues(pathname)} onSubmit={onSubmit}>\r\n        <Form>\r\n          <Form.Item name=\"title\">\r\n            <Input name=\"title\" placeholder=\"Заголовок поста\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"description\">\r\n            <Input name=\"description\" placeholder=\"о чем этот пост?\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"body\">\r\n            <Input.TextArea rows={5} name=\"body\" placeholder=\"напишите свой пост\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"tagList\">\r\n            <Input name=\"tagList\" placeholder=\"введите теги\" />\r\n          </Form.Item>\r\n          <WrapperButton>\r\n            <SubmitButton size=\"large\">Опубликовать</SubmitButton>\r\n          </WrapperButton>\r\n        </Form>\r\n      </Formik>\r\n    </WrapperForm>\r\n  );\r\n};\r\n\r\nconst WrapperForm = styled.div`\r\n  width: 50%;\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst WrapperButton = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import { createAction } from 'redux-actions';\r\nimport servisec from '../../servisec/servisec';\r\n\r\n// registration actions\r\nexport const fetchRegisterRequest = createAction('FETCH_REGISTER_REQUEST');\r\n\r\nconst fetchProfileRequest = () => ({\r\n  type: 'FETCH_PROFILE_REQUEST',\r\n});\r\n\r\nconst fetchProfileSuccess = profile => ({\r\n  type: 'FETCH_PROFILE_SUCCESS',\r\n  payload: profile,\r\n});\r\n\r\nconst fetchProfileFailure = () => ({\r\n  type: 'FETCH_PROFILE_FAILURE',\r\n});\r\n\r\nconst resetProfile = () => ({\r\n  type: 'RESET_PROFILE',\r\n});\r\n\r\nconst getProfile = name => dispatch => {\r\n  console.log(name);\r\n  dispatch(fetchProfileRequest());\r\n  servisec.Profile.get(name).then(res => {\r\n    const profile = res.data;\r\n    dispatch(fetchProfileSuccess(profile));\r\n  });\r\n};\r\n\r\nexport { getProfile, resetProfile };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../../redux/actions/auth/auth';\r\nimport { getProfile } from '../../redux/actions/profile';\r\nimport { AddPost, Container, LinkAuthPage, UserName, LinkHomePage } from '../../components';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  currentUser: auth.currentUser,\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logout,\r\n  getProfile,\r\n};\r\n\r\nconst Header = ({ getProfile, isAuthorizedUser, onLogout, currentUser }) => {\r\n  console.log(isAuthorizedUser);\r\n  return (\r\n    <HeaderWrapper>\r\n      <Container>\r\n        <div>\r\n          <LinkHomePage />\r\n          {isAuthorizedUser ? (\r\n            <UserName profileName={getProfile} username={currentUser.username}>\r\n              <AddPost />\r\n            </UserName>\r\n          ) : null}\r\n        </div>\r\n        <div>{isAuthorizedUser ? <Button onClick={onLogout}>выход</Button> : <LinkAuthPage />}</div>\r\n      </Container>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nconst HeaderWrapper = styled.header`\r\n  background: #eee;\r\n  padding: 30px 0;\r\n\r\n  > div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Block, InputTypePassword, InputTypeText, ResultRegistration } from '../../components';\r\nimport { resetFormState, registration } from '../../redux/actions';\r\n\r\nconst validata = Yup.object().shape({\r\n  username: Yup.string().required('Введите ваше имя'),\r\n  password: Yup.string().required('Введите пароль'),\r\n  repeatPassword: Yup.string()\r\n    .test('passwords-match', 'Пароли не совподают', function(value) {\r\n      return this.parent.password === value;\r\n    })\r\n    .required('Required'),\r\n  email: Yup.string().required('Введите ваш E-mail'),\r\n});\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isRegistered: auth.isRegistered,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  registration,\r\n  resetFormState,\r\n};\r\n\r\nconst SignupForm = ({ registration, isRegistered, resetFormState }) => {\r\n  const onSubmit = (values, { setSubmitting, setErrors, resetForm }) => {\r\n    registration(\r\n      values,\r\n      err => setErrors(err),\r\n      () => setSubmitting(false)\r\n    );\r\n    if (isRegistered) resetForm();\r\n  };\r\n\r\n  if (isRegistered) {\r\n    return <ResultRegistration success={isRegistered} resetFormState={resetFormState} />;\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2 className=\"auth__title\">Регистрация</h2>\r\n        <p className=\"auth__text\">Для входа, вам нужно зарегистрироваться</p>\r\n      </div>\r\n      <Block backcolor=\"#fff\">\r\n        <Formik\r\n          initialValues={{\r\n            username: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n            email: '',\r\n          }}\r\n          validationSchema={validata}\r\n          onSubmit={onSubmit}\r\n        >\r\n          <Form>\r\n            <InputTypeText type=\"mail\" name=\"email\" placeholder=\"E-Mail\" icon=\"mail\" size=\"large\" />\r\n            <InputTypeText name=\"username\" placeholder=\"Ваше имя\" icon=\"user\" size=\"large\" />\r\n            <InputTypePassword name=\"password\" placeholder=\"Пароль\" />\r\n            <InputTypePassword name=\"repeatPassword\" placeholder=\"Повторите пароль\" size=\"large\" />\r\n            <div>\r\n              <SubmitButton size=\"large\" block>\r\n                Зарегистрироваться\r\n              </SubmitButton>\r\n            </div>\r\n            <div className=\"form__link\">\r\n              <Link to=\"/login\">Войти в аккаунт</Link>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </Block>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupForm);\r\n","import servisec from '../../../servisec/servisec';\r\nimport * as actions from './auth';\r\n\r\nconst registration = (values, cbError = () => {}, cbSubmitting = () => {}) => dispatch => {\r\n  dispatch(actions.fetchRegisterRequest());\r\n  servisec.Auth.register({\r\n    user: {\r\n      username: values.username,\r\n      email: values.email,\r\n      password: values.password,\r\n    },\r\n  })\r\n    .then(res => {\r\n      const { user } = res.data;\r\n      dispatch(actions.fetchRegisterSuccess(user));\r\n      cbSubmitting();\r\n    })\r\n    .catch(error => {\r\n      dispatch(actions.fetchRegisterFailure());\r\n      const { errors } = error.response.data;\r\n      cbError(errors);\r\n      cbSubmitting();\r\n    });\r\n};\r\n\r\nconst loginUser = values => dispatch => {\r\n  dispatch(actions.fetchAuthRequest());\r\n  servisec.Auth.login({\r\n    user: {\r\n      email: values.email,\r\n      password: values.password,\r\n    },\r\n  })\r\n    .then(res => {\r\n      const userData = res.data.user;\r\n      localStorage.setItem('jwt', userData.token);\r\n      servisec.getToken(userData.token);\r\n      dispatch(actions.fetchAuthSuccess({ user: userData }));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchAuthFailure());\r\n    });\r\n};\r\n\r\nconst setUserData = () => dispatch => {\r\n  const token = localStorage.getItem('jwt');\r\n  if (token) {\r\n    servisec.getToken(token);\r\n  }\r\n  dispatch(actions.fetchUserRequest());\r\n  servisec.Auth.current()\r\n    .then(res => {\r\n      const user = res.data;\r\n      dispatch(actions.fetchUserSuccess(user));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchUserFailure());\r\n    });\r\n};\r\n\r\nexport { setUserData, loginUser, registration };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, SubmitButton, Input } from 'formik-antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Icon } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Block } from '../../components';\r\nimport { loginUser } from '../../redux/actions/auth/async-auth';\r\n\r\nconst validation = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(8, 'Must be 8 characters or more')\r\n    .max(40, 'Must be 40 characters or less')\r\n    .test(\r\n      'pass',\r\n      'Latin letters and numbers only, at least one number and one capital letter',\r\n      value => /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])/.test(value)\r\n    )\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email('Введите коректные E-mail')\r\n    .required('Введите ваш E-mail'),\r\n});\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  email: auth.currentUser.email,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loginUser,\r\n};\r\n\r\nconst LoginForm = ({ loginUser, email }) => {\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    loginUser(values, setSubmitting, setErrors);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2 className=\"auth__title\">Войти в аккаунт</h2>\r\n        <p className=\"auth__text\">Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block backcolor=\"#fff\">\r\n        <Formik\r\n          initialValues={{\r\n            password: '',\r\n            email: `${email || ''}`,\r\n          }}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          <Form>\r\n            <Form.Item name=\"email\">\r\n              <Input\r\n                prefix={<Icon type=\"user\" />}\r\n                size=\"large\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"E-mail\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\">\r\n              <Input.Password\r\n                prefix={<Icon type=\"lock\" />}\r\n                size=\"large\"\r\n                name=\"password\"\r\n                placeholder=\"Пароль\"\r\n              />\r\n            </Form.Item>\r\n            <div>\r\n              <SubmitButton size=\"large\" block>\r\n                Войти в аккаунт\r\n              </SubmitButton>\r\n            </div>\r\n            <div className=\"form__link\">\r\n              <Link to=\"/signup\">Зарегистрироваться</Link>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </Block>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { getProfile } from '../../redux/actions/profile';\r\nimport { getArticle, getAllArticles } from '../../redux/actions';\r\nimport { ArticleItem, ListPagination, Container } from '../../components';\r\n\r\nconst mapStateToProps = ({ articles }) => {\r\n  return {\r\n    articles: articles.articles,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getProfile,\r\n  getAllArticles,\r\n  getArticle,\r\n};\r\n\r\nclass ArticleAll extends React.Component {\r\n  componentDidMount() {\r\n    const { getAllArticles } = this.props;\r\n    getAllArticles();\r\n  }\r\n\r\n  render() {\r\n    const { articles, getProfile, getArticle } = this.props;\r\n    return (\r\n      <Main>\r\n        <WrapperArticle>\r\n          {articles.map(article => {\r\n            return (\r\n              <ArticleItem\r\n                article={article}\r\n                getArticle={getArticle}\r\n                getProfileName={getProfile}\r\n                key={article.slug}\r\n              />\r\n            );\r\n          })}\r\n        </WrapperArticle>\r\n        <WrapperPagination>\r\n          <ListPagination />\r\n        </WrapperPagination>\r\n      </Main>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrapperPagination = styled.div`\r\n  margin: 50px 0;\r\n`;\r\n\r\nconst WrapperArticle = styled.div`\r\n  max-width: 500px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Main = styled.main`\r\n  background: #eee;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleAll);\r\n","import React from 'react';\r\n\r\nimport { Loading } from '../../components';\r\n\r\nconst ProfilePreview = ({ profile, isLoading }) => {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img alt={profile.username} width=\"128\" height=\"128\" src={profile.image} />\r\n      </div>\r\n      <div>\r\n        <h1>{profile.username}</h1>\r\n        <div>\r\n          <a href=\"\">Редактировать профиль</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePreview;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Loading, FavoritesCount, EditLink, DateCreation } from '../../components';\r\n\r\nconst ArticlePreview = ({ article, isProgress, canModify, getProfile }) => {\r\n  if (isProgress) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Link onClick={getProfile} to={`/${article.author.username}`}>\r\n          <img src={article.author.image} alt={article.author.username} />\r\n        </Link>\r\n\r\n        <Link onClick={getProfile} to={`/${article.author.username}`}>\r\n          {article.author.username}\r\n        </Link>\r\n        <span>{article.author.bio}</span>\r\n      </div>\r\n      <div>\r\n        <h3>{article.title}</h3>\r\n        <p>{article.body}</p>\r\n        <div>{article.description}</div>\r\n        <div>{article.tagList}</div>\r\n        <div>\r\n          <DateCreation date={article.createdAt} />\r\n        </div>\r\n        <div>\r\n          <span>Последнее обновление</span>\r\n          <DateCreation date={article.updatedAt} />\r\n        </div>\r\n        <div>\r\n          <FavoritesCount\r\n            count={article.favoritesCount}\r\n            slug={article.slug}\r\n            favorited={article.favorited}\r\n          />\r\n        </div>\r\n      </div>\r\n      {canModify && <EditLink slug={article.slug} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticlePreview;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LoginForm, SignupForm } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst Auth = ({ isAuthorizedUser }) => {\r\n  if (isAuthorizedUser) return <Redirect to=\"/\" />;\r\n  return (\r\n    <WrapperForm>\r\n      <div>\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/signup\" component={SignupForm} />\r\n      </div>\r\n    </WrapperForm>\r\n  );\r\n};\r\n\r\nAuth.defaultProps = {\r\n  isAuthorizedUser: false,\r\n};\r\n\r\nAuth.propTypes = {\r\n  isAuthorizedUser: PropTypes.bool,\r\n};\r\n\r\nconst WrapperForm = styled.div`\r\n  text-align: center;\r\n  color: #202002;\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  > div {\r\n    width: 400px;\r\n    max-width: 75%;\r\n  }\r\n\r\n  .auth__title {\r\n    font-size: 28px;\r\n    line-height: 33px;\r\n    margin-bottom: 5px;\r\n  }\r\n  .form__link {\r\n    margin-top: 30px;\r\n\r\n    a {\r\n      font-size: 16px;\r\n      line-height: 19px;\r\n      color: #adadad;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n      &:focus {\r\n        color: #1890ff;\r\n      }\r\n      &:active {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .auth__text {\r\n    opacity: 0.5;\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n  .btn {\r\n    width: 200px;\r\n    height: 200px;\r\n    background: #000;\r\n  }\r\n  .btn-2 {\r\n    background: red;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps)(Auth);\r\n","import React from 'react';\r\nimport { Header, ArticleAll } from '../../modules';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <ArticleAll />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { PostForm, Header } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst CreatePost = ({ isAuthorizedUser }) => {\r\n  if (!isAuthorizedUser) return <Redirect to=\"/login\" />;\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Wrapper>\r\n        <PostForm />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px 0;\r\n`;\r\n\r\nexport default connect(mapStateToProps)(CreatePost);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Header, ProfilePreview } from '../../modules';\r\nimport { Container } from '../../components';\r\nimport { getProfile, resetProfile } from '../../redux/actions/profile';\r\n\r\nconst mapStateToProps = ({ userProfile }) => ({\r\n  profile: userProfile.profile,\r\n  isLoading: userProfile.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProfile,\r\n  resetProfile,\r\n};\r\n\r\nclass Profile extends React.Component {\r\n  componentDidMount() {\r\n    const { getProfile } = this.props;\r\n    const profileName = localStorage.getItem('ProfileName');\r\n    getProfile(profileName);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetProfile } = this.props;\r\n    resetProfile();\r\n  }\r\n\r\n  render() {\r\n    const { profile, isLoading } = this.props;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <ProfilePreview profile={profile} isLoading={isLoading} />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Header, ArticlePreview } from '../../modules';\r\nimport { Container } from '../../components';\r\nimport { getProfile, resetProfile } from '../../redux/actions/profile';\r\nimport { getArticle } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ article, auth }) => ({\r\n  article: article.articleCurrent,\r\n  isProgress: article.isProgress,\r\n  username: auth.currentUser.username,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getArticle,\r\n  getProfile,\r\n  resetProfile,\r\n};\r\n\r\nclass Article extends React.Component {\r\n  componentDidMount() {\r\n    const { getArticle } = this.props;\r\n    const articleSlug = localStorage.getItem('articleSlug');\r\n    getArticle(articleSlug);\r\n  }\r\n\r\n  render() {\r\n    const { article, isProgress, username } = this.props;\r\n    const canModify = username === article.author.username;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <ArticlePreview\r\n            canModify={canModify}\r\n            article={article}\r\n            getProfile={getProfile}\r\n            isProgress={isProgress}\r\n          />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Header, PostForm } from '../../modules';\r\nimport { Container } from '../../components';\r\nimport { getArticle } from '../../redux/actions';\r\n\r\nconst mapDispatchToProps = {\r\n  getArticle,\r\n};\r\n\r\nclass EditArticle extends React.Component {\r\n  componentDidMount() {\r\n    const { getArticle } = this.props;\r\n    const articleSlug = localStorage.getItem('articleSlug');\r\n    getArticle(articleSlug);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <PostForm />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(EditArticle);\r\n","import Loading from './loading';\r\n\r\nexport default Loading;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Home, Auth, CreatePost, Profile, Article, EditArticle } from '../../pages';\nimport { setUserData } from '../../redux/actions';\nimport Loading from '../Loading';\n\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    isAuthorizedUser: auth.isAuthorizedUser,\n    inProgress: auth.inProgress,\n  };\n};\n\nconst mapDispatchToProps = {\n  setUserData,\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { setUserData } = this.props;\n    setUserData();\n  }\n\n  render() {\n    const { inProgress } = this.props;\n    if (inProgress) {\n      return <Loading />;\n    }\n\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path={['/login', '/signup']} component={Auth} />\n          <Route path=\"/add\" component={CreatePost} />\n          <Route exact path=\"/:username\" component={Profile} />\n          <Route exact path=\"/articles/:slug\" component={Article} />\n          <Route path=\"/articles/:slug/edit\" component={EditArticle} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  setUserData: PropTypes.func.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
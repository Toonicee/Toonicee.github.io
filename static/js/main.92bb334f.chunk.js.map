{"version":3,"sources":["media/img/logo.png","constants/index.js","utils/index.js","serverQueries/index.jsx","routes/PrivateRoute.jsx","components/Main/styled/index.js","components/Subsection/TopicsList.jsx","components/Main/propTypes/subSectionProps.js","components/Main/propTypes/topicProps.js","components/Main/propTypes/sectionProps.js","components/Subsection/styled/index.jsx","components/Subsection/ClickableItemWrapper.jsx","components/Main/SubSectionItem.jsx","components/Main/SubSectionsList.jsx","components/Subsection/TopicsListItem.jsx","components/Context/index.jsx","components/Profile/Albums/Albums.jsx","components/formItems/SimpleInput.jsx","components/Main/SearchForm.jsx","components/Main/MainPage.jsx","routes/CommonRoute.jsx","components/formItems/FormItem.jsx","components/Login.jsx","components/Registration.jsx","components/RegistrationAccept.jsx","routes/AuthRoute.jsx","components/Topic/propTypes/userProps.js","components/Topic/TopicCommentsList.jsx","components/Topic/propTypes/commentProps.js","components/Topic/styled/index.js","components/Topic/TopicReplyEditor.jsx","components/Topic/propTypes/fileProps.js","components/Topic/TopicPhotoList.jsx","components/Topic/TopicReplyForm.jsx","components/Topic/TopicEditingForm.jsx","components/AdminMenu/index.jsx","components/Topic/TopicUserInfo.jsx","components/commons/UserAvatar.jsx","components/Topic/TopicCommentListItem.jsx","components/Topic/TopicCommentItem.jsx","components/Topic/TopicHeaderStyled/index.js","components/Topic/TopicStartMessage.jsx","components/hoc/withGetUserProfile.jsx","components/Topic/TopicPage.jsx","components/Topic/TopicAddFileModal.jsx","components/Topic/TopicCreate.jsx","routes/TopicRoute.jsx","components/Search/SearchTopicsPage.jsx","components/Search/SearchCommentsItem.jsx","components/Search/SearchCommentsPage.jsx","routes/SearchRoute.jsx","components/Subsection/Subsection.jsx","components/Subsection/Section.jsx","routes/SubsectionRoute.jsx","components/Articles/styled/index.js","hooks/useQuery.jsx","components/Articles/TagsMenu/TagsMenu.jsx","components/commons/HTMLContentViews.jsx","components/Articles/Article.jsx","components/Articles/ArticlesByTag.jsx","components/Articles/Articles.jsx","components/forms/fields/FormItemLabel.jsx","components/forms/fields/EditorField/index.jsx","components/forms/fields/SelectField.jsx","hooks/useTagsFetching.jsx","components/forms/ArticleForm.jsx","hooks/useArticleFetching.jsx","components/Articles/ArticleUpdate.jsx","components/forms/CommentForm.jsx","components/Articles/ArticleComment.jsx","components/Articles/ArticlePage.jsx","routes/ArticlesRoute.jsx","routes/ChatRoute.jsx","components/layouts/Header.jsx","components/formItems/PhoneInput.jsx","components/Profile/EditProfile.jsx","components/Profile/EditAvatar.jsx","components/Profile/ProfileData.jsx","components/hoc/withGetData.jsx","components/Profile/MainProfile.jsx","components/Profile/Messages.jsx","components/Profile/Themes.jsx","components/Profile/Subscriptions.jsx","components/Profile/Invite.jsx","components/Profile/Albums/UploadPhoto.jsx","components/Profile/Albums/Album.jsx","components/Profile/Albums/EditAlbum.jsx","components/Profile/index.jsx","components/Chat/styled.js","components/Chat/Chat.jsx","components/Chat/Greeting.jsx","components/Chat/ChatAuth.jsx","components/Chat/PrivateChat.jsx","components/AdminPanel/LinkToUserPage.jsx","components/AdminPanel/UsersList.jsx","components/AdminPanel/InvitedUsersTree.jsx","components/AdminPanel/UserInfo.jsx","components/AdminPanel/MailingLetters.jsx","components/AdminPanel/ArticleCreate.jsx","components/forms/TagsForm.jsx","components/AdminPanel/ArticlesTagsEdit.jsx","components/AdminPanel/index.jsx","components/Profile/ProfileAnotherUser.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","BASE_URL","process","BASE_IMG_URL","SECURED_ALBUM_URL","DEFAULT_COMMENT_PICTURE","DEFAULT_AVATAR_PICTURE","userRoles","admin","moderator","dateToDateDistance","isoDate","addSuffix","formatDistance","parseISO","Date","locale","ru","dataToFormatedDate","format","paramsSerializer","params","Object","entries","reduce","acc","key","value","str","Array","isArray","join","slice","handleSuccess","response","handleError","error","message","Promise","reject","logIn","formData","a","axios","post","logOut","get","res","updateProfile","data","updateAvatar","createArticle","getArticlesByTag","tags","tagsString","getTagsDtoTree","withCredentials","addNewTagTree","updateTagsTree","put","deleteTags","delete","updateArticle","id","getArticleById","createArticleComment","headers","updateArticleComment","deleteArticleComment","getArticleTags","getData","page","getProfileTopics","getProfileComments","getTopic","limit","getProfileSubscriptions","addTopicToSubscriptions","topicId","deleteTopicFromSubscriptions","getProfileData","getUserProfileData","getSubsectionTopics","dateTime","getAllSections","getActualTopics","searchByComments","finderTag","searchByTopics","node","nodeValue","addComment","newComment","FormData","set","idTopic","idUser","text","answerID","image1","originFileObj","name","image2","updateComment","editingComment","commentId","JSON","stringify","photoIdList","commentID","deleteComment","status","getInviteCode","sendInviteCode","mail","registrationUserAdd","registrationUser","values","getAlbums","createNewAlbum","updateAlbum","deleteAlbum","getPhotosFromAlbum","addPhotosInAlbum","albumId","photosArr","deletePhotoFromAlbum","photoId","deletePhotosFromAlbum","photoIds","getUsersList","query","Number","getUserById","getUsersTree","deep","blackListRequest","dateUnblock","toISOString","unblockUser","sendMailToAllUsers","postFile","isForbidden","getCurrentUser","getAllUsers","getAllMessages","deleteMessage","createNewTopic","getPersonalToken","getPersonalMessage","chatToken","postFilePersonalChat","getAnotherUserData","defaults","baseURL","interceptors","use","this","PrivateRoute","isAllowed","Component","component","rest","to","ButtonGroup","styled","div","StyledList","List","StyledTitle","h2","StyledInput","Input","StyledSelect","Select","StyledForm","AntForm","StyledMainPage","TopicsList","title","items","itemComponent","fetchMessages","hasMore","hasChildren","length","dataLength","next","loader","endMessage","style","textAlign","header","dataSource","renderItem","item","Item","size","defaultProps","PropTypes","shape","number","string","position","section","hideToAnon","bool","topicStarter","firstName","lastName","email","nickName","regDate","role","authority","avatar","original","medium","small","enabled","username","authorities","arrayOf","accountNonExpired","accountNonLocked","credentialsNonExpired","messageCount","startTime","lastMessageTime","subsection","subSectionProps","topics","topicProps","StyledClickableItem","TopicItemInfo","Col","TopicItemMainInfo","TopicItemTitleUser","p","ClickableItemWrapper","children","clickHandler","onClick","withRouter","history","push","SubSectionsList","subsections","topicData","topic","span","type","React","createContext","isLogin","DeletePhotoButton","Button","EditPhotoButton","StyledAlbumCard","AlbomShadow","PhotoCounter","AlbomBackgroundImage","img","AlbumTitle","StyledAlbumWrapper","confirm","Modal","Albums","props","loadAlbums","queries","allAlbums","setState","albums","state","prompt","NewAlbum","console","album","event","showDeleteConfirm","content","okText","okType","cancelText","onOk","doDeleteAlbum","onCancel","photoAlbumId","newAlbums","stopPropagation","editPhotoAlbum","pathname","location","url","openAlbum","isMainPage","context","justify","map","src","thumbImageId","photosCounter","color","contextType","Context","SimpleInput","useField","field","InputGroup","Group","Option","validationSchema","Yup","searchRequest","min","useContext","initialValues","searchBy","onSubmit","handleSubmit","errors","touched","setFieldValue","setFieldTouched","hasFeedback","validateStatus","help","compact","placeholder","onChange","onBlur","htmlType","icon","disabled","MainPage","rootSections","actualTopics","then","sections","CommonRoute","exact","path","FormItem","label","meta","toLowerCase","indexOf","formLayoutSchema","labelCol","xs","sm","wrapperCol","required","password","login","changeLoginState","changeUserState","changeLoadingState","setStatus","append","userData","localStorage","setItem","Login","useState","loading","Password","max","matches","repeatPassword","oneOf","Registration","token","URLSearchParams","useLocation","search","RegistrationAccept","isSuccesfull","AuthRoute","hibernateLazyInitializer","objectOf","any","TopicCommentsList","positionInTopic","author","userProps","commentDateTime","commentUpdateTime","replyDateTime","replyNick","replyText","commentText","messages","changePageHandler","total","replyButtonHandler","openNotification","className","itemLayout","pagination","current","currentPage","pageSize","theme","extra","subTitle","StyledTopicUserInfo","Row","UserInfoLeft","ReplyFloatButton","TopicReplyWarning","h3","GoldIcon","Icon","TopicCommentReplyAlert","Alert","ReplyTag","green","UploadViewOnly","Upload","ListItem","li","DeletedMessageText","Typography","Text","modules","toolbar","list","TopicReplyEditor","clazz","setClazz","replyRef","ref","onFocus","uid","getBase64","file","resolve","reader","FileReader","readAsDataURL","onload","result","onerror","TopicPhotoList","previewVisible","previewImage","handleCancel","handlePreview","preview","beforeUpload","canUpload","fileList","handleChangePicturesState","defaultFileList","uploadBasicProps","listType","onPreview","uploadButton","accept","visible","footer","alt","width","isRequired","TopicReplyForm","handleSubmitComment","handleAddFile","files","uploading","resetForm","handleChange","messgae","TopicEditingForm","info","success","handleSubmitForm","getTopics","forEach","index","comment","catch","edetingText","handleBlur","rows","marginRight","undefined","AdminMenu","user","updateUser","handleBan","dt","serverQueries","now","openConfirm","action","menu","overlay","trigger","TopicUserInfo","align","ROLE_ADMIN","ROLE_MODERATOR","ROLE_USER","ROLE_PROSPECT","formatDistanceToNow","UserAvatar","imgSrc","TopicCommentListItem","withActions","toggleEdeting","convertedImages","commentActions","contentEditingForm","contentCommentText","contentReplyText","commentDateTooltipString","commentDateString","actions","placement","datetime","IconText","onHandleClick","TopicCommentItem","handleClickEditBtn","deleted","updatable","handleQuoteComment","photos","photo","String","description","showReplyLinkOrNot","onKeyPress","tabIndex","showFieldOrNot","TopicContainer","TopicHeaderWrapp","TopicHeaderTitle","TopicHeaderDate","TopicHeaderAuthorWrapp","TopicHeaderAuthorWrappCol","TopicHeaderAuthorNickName","TopicHeaderDefaultMessage","TopicStartMessage","startMessage","withGetUserProfile","WrapperComponent","userProfile","getUserPrpfile","TopicPage","match","commentDto","subscribed","isSubscribed","replyForm","focus","reply","answerId","messageText","notification","open","messageComentsEntity","trim","lastPage","Math","floor","handleDeleteComment","handleCancelReply","toggleLightbox","lightboxIsOpen","toggleSubscriptionStatus","setSubscriptionState","newSubscriptionState","createRef","parseInt","closeText","onClose","strong","element","photoTempUrl","ModalOverlay","hidden","Form","form","Gallery","CloseModalButton","BGImage","AlbumCard","selected","AlbumShadow","ImageCard","ChoosePhotoButton","TopicAddFileModal","promises","images","image","all","toggleFullAlbum","handleUpload","setFileList","handleCloseModal","toggleImageToUpload","imagesToUpload","selectedAlbum","find","uploadProps","multiple","onRemove","newFileList","splice","originalThumbImage","includes","marginBottom","StyledField","StyledError","PrimaryButton","TopicCreate","componentDidMount","subsectionsData","handleSectionChange","handleSubsectionChange","count","isModal","setValues","handleToggleModal","isSubmitting","TextArea","defaultValue","subs","formikTopicCreate","withFormik","mapPropsToValues","setSubmitting","TopicRoute","SearchTopicsPage","topicName","SearchCommentsPage","isLoading","totalMessagesCounter","countMessages","markWord","splitStr","split","markedMessages","curMessage","SearchRoute","Subsection","subsectionId","lazyLoadMore","inProgress","Section","loadSection","sectionId","filter","SubsectionRoute","StyledMenu","Column","Container","StyledDate","InputNumber","StyledUserInfo","StyledTags","StyledMeta","StyledArticle","article","StyledCenteredContainer","h1","StyledHeader","TagsItem","pad","active","activeId","useQuery","fromEntries","el","menuItems","setMenuItems","useHistory","setActiveId","hierarchy","addActiveTag","activeTag","tag","tagsHierarchy","useEffect","showArticles","mode","buildTreeMenu","first","some","parentId","elem","ArticleTitle","ArticleContentView","CommentContentView","Article","articleInfo","isPreview","fontSize","dangerouslySetInnerHTML","__html","articleTags","date","ArticlesByTag","articles","setArticles","isEmpty","setIsEmpty","tagsAtr","reverse","empty","LoadOrNotFound","Articles","htmlFor","cloneElement","wrapperHandler","fn","EditorField","classFromState","setClassFromState","TreeNode","TreeSelect","SelectField","val","options","valueKey","labelKey","useFormikContext","showSearch","allowClear","treeDefaultExpandAll","arr","optionFilterProp","buildTreeTags","useTagsFetching","setLoading","results","setResults","setError","fetchData","tagsId","editorModules","ArticleForm","buttonText","onSubmitSuccess","onSubmitError","onSubmitWrapper","useCallback","submitting","labelAlign","FormItemLabel","notFoundContent","checked","isDraft","isHideToAnon","useArticleFetching","ArticleUpdate","articleId","useParams","draft","CommentForm","startText","ArticleComment","commentWithOpenEditor","onOpenEditorClick","onSubmitCommentForm","onDeleteComment","eventType","nested","actionsArr","userId","hasPermission","roles","nestedComments","defaulProps","buildCommentTreeFromFlat","childKey","parentKey","flatArr","hashTable","create","tree","createTreeBuildFunction","ArticlePage","fetchArticle","articleCommentDto","commentsTree","flatComments","handleCommentFormSubmit","editComment","postComment","idArticle","handleOpenEditorClick","rebuildTree","updatedComment","hasChildrenComments","comments","i","createNewCommentsList","ar","clearComments","iter","findIndex","commentsCount","renderCommentForm","ArticlesRoute","ChatRoute","WrapLogo","Logo","LogoText","Menu","Header","Consumer","logo","marginLeft","changePhoneInput","setValue","target","customValue","formatIncompletePhoneNumber","PhoneInput","moment","regex","phoneNumber","test","exclusive","parseIncompletePhoneNumber","nullable","gender","socialFb","socialTw","socialVk","aboutMe","submitForm","dateString","birthday","newValues","userAuth","EditProfile","loadUserProfile","city","country","StyledWrapper","StyledHeading","StyledText","StyledBtnWrapp","EditAvatar","avatarFile","avatarThumbUrl","margin","resetBtn","display","propsUpload","filePrevie","StyledCard","StyledMainProfile","ProfileData","self","btn","block","lastComment","lastVisit","topicStartCount","changeDataState","withGetData","WrappedComponent","Messages","loadMessages","oldPage","newMessages","handleUpdateMessage","mes","handleDeleteMessage","getPageComment","numberComment","ceil","Themes","loadTopics","newTopics","badApiAdaptationTopicsFixMePlease","totalMessages","hasNewMessages","newMessagesCount","Subscriptions","Title","Invite","level","UploadButton","StyledSpan","UploadPhoto","loadPhotos","DeletePhotoModalButton","ImageWrapper","AlbumNavigation","StyledImage","AlbumWrapper","StyledRow","Album","selectedIndex","deletePhoto","newPhotos","photoID","onSortEnd","oldIndex","newIndex","arrayMove","photoTempUlr","CustomHeader","currentIndex","modalProps","window","matchMedia","views","components","SortableItem","SortableElement","photoNum","SortableList","SortableContainer","axis","distance","EditSection","ChooseNewCoverSectionImage","EditMenu","SaveChanges","EditSectionAlbumTitle","GaleryImages","EditAlbumImageWrapper","Galery","GaleryTitle","EditAlbum","showModal","handleOk","handleDeletePhotos","photosToDelete","updatedPhotos","evt","addPhotoToDeleteArray","Profile","useRouteMatch","endPoint","pop","setPage","MainProfile","Ul","ul","Li","GreetingContainer","ChatContainer","CloseButton","button","Main","UserListTitle","pulse","keyframes","OnlineLED","UserList","User","UserLink","MessageList","Message","toMe","EventMessage","MessageAvatar","MessageAuthor","MessageImage","MessageDate","MessageText","MessageInner","ScrollToTopButton","Arrow","Footer","Chat","handleChangeMessage","handleChangeFile","systemMessage","filePath","uploadFile","document","querySelector","preventDefault","sendMessage","replyTo","handleShowFull","getMessages","scrollingWrapper","scrollTop","wrapLink","href","rel","drawMessage","msg","deleteCurrentMessage","isSender","sender","urlAvatar","senderAvatar","originalImg","thumbnailImg","download","fileName","messageDate","onScroll","hasScrolled","reference","trottledFunction","throttle","addEventListener","removeEventListener","handleDisconnect","usersOnline","Greeting","handleConnect","ChatAuth","componentWillUnmount","disconnect","connect","socket","SockJS","stompClient","Stomp","over","onConnected","send","unsubscribe","isJoin","subscribe","onMessageRecieved","getUsersOnline","payload","parse","body","uniqueId","setTimeout","scrollIntoView","PrivateChat","anotherUser","anotherUserId","anotherUserNick","show","isFull","LinkToUserPage","setUser","UsersList","usersList","setUsersList","pageParams","setPageParams","users","usersCount","columns","dataIndex","render","userStatisticId","roleName","rowKey","InvitedUsersBlock","InvitedUsersTree","treeData","deepTree","userParentId","showIcon","constructTree","UserInfoBlock","Clear","Banned","UserInfo","setTree","go","SendMailBlock","SubmitButtonWrapper","formStyles","MailingLetters","sendingStatus","setSendingStatus","subject","err","prefix","autoSize","minRows","maxRows","ArticleCreate","TagsForm","left","ShowEditorForm","EditIcon","DeleteIcon","ArticlesTagsEdit","editTagsId","setEditTagsId","setEventType","fetchTags","addTag","updateTag","delTag","changeActiveTags","eventT","handleTagsSubmit","checkParentId","tagName","border","padding","TagsLabel","TagsAdd","TagsAddFirst","AdminPanelHeader","AdminPanel","selectedUrl","setUrl","ProfileAnotherUser","App","removeItem","initialState","getItem","Provider","Boolean","hostname","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92bb334f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b3681f12.png\";","export const BASE_URL = process.env.REACT_APP_BASE_URL;\r\nexport const BASE_IMG_URL = `${BASE_URL}img/`;\r\nexport const SECURED_ALBUM_URL = `${BASE_URL}api/securedPhoto/photoFromAlbum/`;\r\n\r\nexport const PUBLIC_IMG_URL = '';\r\nexport const DEFAULT_COMMENT_PICTURE = `${PUBLIC_IMG_URL}/defaultCommentPicture.jpg`;\r\nexport const DEFAULT_AVATAR_PICTURE = `${PUBLIC_IMG_URL}/defaultAvatarPicture.png`;\r\nexport const DEFAULT_ALBUM_PICTURE = `${PUBLIC_IMG_URL}/defaultAlbumPicture.png`;\r\n\r\nexport const userRoles = {\r\n  admin: 'ROLE_ADMIN',\r\n  moderator: 'ROLE_MODERATOR',\r\n};\r\n\r\nexport default userRoles;\r\n","import { formatDistance, parseISO, format } from 'date-fns';\r\nimport ru from 'date-fns/locale/ru';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const dateToDateDistance = (isoDate, addSuffix = false) =>\r\n  isoDate && formatDistance(parseISO(isoDate), new Date(), { locale: ru, addSuffix });\r\n\r\nexport const dataToFormatedDate = isoDate =>\r\n  isoDate &&\r\n  format(parseISO(isoDate), \"dd MMMM yyyy 'в' HH:mm\", {\r\n    locale: ru,\r\n  });\r\n\r\nexport const mapRoleToString = role => {\r\n  const roles = {\r\n    ROLE_ADMIN: 'Администратор',\r\n    ROLE_MODERATOR: 'Модератор',\r\n    ROLE_USER: 'Пользователь',\r\n    ROLE_PROSPECT: 'Prospect',\r\n  };\r\n  return roles[role];\r\n};\r\n\r\nexport const paramsSerializer = params =>\r\n  Object.entries(params)\r\n    .reduce((acc, [key, value]) => {\r\n      const str = Array.isArray(value) ? `&${key}=${value.join(`&${key}=`)}` : `&${key}=${value}`;\r\n      return `${acc}${str}`;\r\n    }, '')\r\n    .slice(1);\r\n\r\nexport const createTreeBuildFunction = (childKey = 'id', parentKey = 'parentId') => flatArr => {\r\n  const hashTable = Object.create(null);\r\n  flatArr.forEach(node => {\r\n    hashTable[node[childKey]] = { ...node, nested: [] };\r\n  });\r\n\r\n  const tree = [];\r\n  flatArr.forEach(node => {\r\n    if (node[parentKey] && node[parentKey] !== -1) {\r\n      hashTable[node[parentKey]].nested.push(hashTable[node[childKey]]);\r\n    } else {\r\n      tree.push(hashTable[node[[childKey]]]);\r\n    }\r\n  });\r\n  return tree;\r\n};\r\n","import axios from 'axios';\r\nimport { message } from 'antd';\r\nimport { BASE_URL } from '../constants';\r\nimport { paramsSerializer } from '../utils';\r\n\r\nclass Queries {\r\n  constructor() {\r\n    axios.defaults.baseURL = BASE_URL;\r\n    axios.defaults.withCredentials = true;\r\n    axios.defaults.paramsSerializer = paramsSerializer;\r\n    axios.interceptors.response.use(this.handleSuccess, this.handleError);\r\n  }\r\n\r\n  handleSuccess = response => {\r\n    return response;\r\n  };\r\n\r\n  handleError = error => {\r\n    if (error.message === 'Network Error' && !error.response) {\r\n      message.error('Сетевая ошибка');\r\n    }\r\n\r\n    if (error.message === 'Request failed with status code 500') {\r\n      message.error('Сервер не отвечает');\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  };\r\n\r\n  logIn = async formData => {\r\n    await axios.post('login', formData);\r\n  };\r\n\r\n  logOut = async () => {\r\n    const res = await axios.get('api/logout');\r\n    return res;\r\n  };\r\n\r\n  updateProfile = async formData => {\r\n    const res = await axios.post('/api/updateProfile', formData);\r\n    return res.data;\r\n  };\r\n\r\n  updateAvatar = async data => {\r\n    const res = await axios.post('/api/avatar/set', data);\r\n    return res.data;\r\n  };\r\n\r\n  createArticle = async (data, params) => {\r\n    const res = await axios.post('/api/article/add', data, { params });\r\n    return res.data;\r\n  };\r\n\r\n  getArticlesByTag = async tags => {\r\n    if (!tags) {\r\n      const res = await axios.get(`/api/article/withoutTag`, {});\r\n      return res.data;\r\n    }\r\n    const tagsString = tags.join('&tag_id=');\r\n    const res = await axios.get(`/api/article/tag?tag_id=${tagsString}&page=0`, {});\r\n    return res.data;\r\n  };\r\n\r\n  getTagsDtoTree = async () => {\r\n    const res = await axios.get('/api/tags/node/tree', {\r\n      withCredentials: true,\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  addNewTagTree = async params => {\r\n    const res = await axios.post('/api/tags/node/add', {}, { params });\r\n    return res.data;\r\n  };\r\n\r\n  updateTagsTree = async params => {\r\n    const res = await axios.put(`/api/tags/node/update`, {}, { params });\r\n    return res.data;\r\n  };\r\n\r\n  deleteTags = async params => {\r\n    const res = await axios.delete(`/api/tags/node/delete`, { params });\r\n    return res.data;\r\n  };\r\n\r\n  updateArticle = async (id, data, params) => {\r\n    const res = await axios.put(`/api/article/update/${id}`, data, { params });\r\n    return res.data;\r\n  };\r\n\r\n  getArticleById = async params => {\r\n    const res = await axios.get(`/api/article/comments`, { params });\r\n    return res.data;\r\n  };\r\n\r\n  createArticleComment = async (data, params) => {\r\n    const res = await axios.post('/api/article/comment/add', data, {\r\n      params,\r\n      headers: {\r\n        'Content-Type': 'text/plain',\r\n      },\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  updateArticleComment = async (data, params) => {\r\n    const res = await axios.put('/api/article/comment/update', data, {\r\n      params,\r\n      headers: {\r\n        'Content-Type': 'text/plain',\r\n      },\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  deleteArticleComment = async id => {\r\n    const res = await axios.delete(`/api/article/comment/delete/${id}`);\r\n    return res.data;\r\n  };\r\n\r\n  getArticleTags = async () => {\r\n    const res = await axios.get('/api/articleTag');\r\n    return res.data;\r\n  };\r\n\r\n  getData = async page => {\r\n    const res = await axios.get(page);\r\n    return res.data;\r\n  };\r\n\r\n  getProfileTopics = async page => {\r\n    const res = await axios.get(`/api/topics/`, { params: { page } });\r\n    return res.data;\r\n  };\r\n\r\n  getProfileComments = async page => {\r\n    const res = await axios.get(`/api/comments/`, { params: { page } });\r\n    return res.data;\r\n  };\r\n\r\n  getTopic = async (id, page, limit) => {\r\n    const res = await axios.get(`/api/topic/${id}`, { params: { page, limit } });\r\n    return res.data;\r\n  };\r\n\r\n  getProfileSubscriptions = async page => {\r\n    const res = await axios.get(`/api/subscriptions`, { params: { page } });\r\n    return res.data;\r\n  };\r\n\r\n  addTopicToSubscriptions = async topicId => {\r\n    const res = await axios.post(`/api/subscriptions`, {}, { params: { topicId } });\r\n    return res.data;\r\n  };\r\n\r\n  deleteTopicFromSubscriptions = async topicId => {\r\n    const res = await axios.delete('/api/subscriptions', { params: { topicId } });\r\n    return res.data;\r\n  };\r\n\r\n  getProfileData = async () => {\r\n    const { data } = await axios.get('/api/currentUser');\r\n    return data;\r\n  };\r\n\r\n  getUserProfileData = async () => {\r\n    const { data } = await axios.get('/api/profile');\r\n    return data;\r\n  };\r\n\r\n  getSubsectionTopics = async (id, page = 0) => {\r\n    // TODO dateTime ???\r\n    const res = await axios.get(`/api/subsection/${id}`, {\r\n      params: { dateTime: '2099-01-01%2000%3A00%3A00', page },\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  getAllSections = async () => {\r\n    const res = await axios.get('/api/allsectionsandsubsections');\r\n    return res.data;\r\n  };\r\n\r\n  getActualTopics = async () => {\r\n    const res = await axios.get('/api/actualtopics');\r\n    return res.data;\r\n  };\r\n\r\n  searchByComments = async (finderTag, page) => {\r\n    const res = await axios.get(`/api/searchComments`, { params: { finderTag, page } });\r\n    return res.data;\r\n  };\r\n\r\n  searchByTopics = async finderTag => {\r\n    // TODO node nodeValue ???\r\n    const res = await axios.get(`/api/searchTopics`, {\r\n      params: { finderTag, node: 0, nodeValue: 0 },\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  addComment = async newComment => {\r\n    // TODO Перенести в компонент\r\n    const formData = new FormData();\r\n    formData.set('idTopic', newComment.idTopic);\r\n    formData.set('idUser', newComment.idUser);\r\n    formData.set('text', newComment.text);\r\n\r\n    if (newComment.answerID) {\r\n      formData.set('answerID', newComment.answerID);\r\n    }\r\n\r\n    if (newComment.image1) {\r\n      formData.set('image1', newComment.image1.originFileObj, newComment.image1.name);\r\n    }\r\n\r\n    if (newComment.image2) {\r\n      formData.set('image2', newComment.image2.originFileObj, newComment.image2.name);\r\n    }\r\n\r\n    const res = await axios.post('/api/comment/add', formData);\r\n    return res.data;\r\n  };\r\n\r\n  updateComment = async editingComment => {\r\n    // TODO Перенести в компонент\r\n    const { commentId } = editingComment;\r\n    const formData = new FormData();\r\n    formData.set('idTopic', editingComment.idTopic);\r\n    formData.set('idUser', editingComment.idUser);\r\n    formData.set('text', editingComment.text);\r\n    formData.set('photoIdList', JSON.stringify(editingComment.photoIdList));\r\n\r\n    if (editingComment.image1) {\r\n      formData.set('image1', editingComment.image1.originFileObj, editingComment.image1.name);\r\n    }\r\n\r\n    if (editingComment.image2) {\r\n      formData.set('image2', editingComment.image2.originFileObj, editingComment.image2.name);\r\n    }\r\n\r\n    const res = await axios.put('/api/comment/update', formData, {\r\n      params: { commentID: commentId },\r\n    });\r\n\r\n    return res.data;\r\n  };\r\n\r\n  deleteComment = async commentId => {\r\n    const res = await axios.delete(`/api/comment/delete/${commentId}`);\r\n    return res.status;\r\n  };\r\n\r\n  getInviteCode = async () => {\r\n    const res = await axios.post('/api/token/invite', {});\r\n    return res.data;\r\n  };\r\n\r\n  sendInviteCode = async ({ mail }) => {\r\n    const res = await axios.post(`/api/token/invite/bymail`, {}, { params: { mail } });\r\n    return res.data;\r\n  };\r\n\r\n  registrationUserAdd = async key => {\r\n    const res = await axios.post(`/api/registration`, {}, { params: { key } });\r\n    return res.data;\r\n  };\r\n\r\n  registrationUser = async values => {\r\n    const res = await axios.post('/api/token/confirm/bymail', values);\r\n    return res.data;\r\n  };\r\n\r\n  // uploadPhoto = async photo => {\r\n  //   // пока бекенд не готов, загружаем фото в первый и единственный альбом\r\n  //   const res = await axios.post('/api/photos/1', photo, {\r\n  //     withCredentials: true,\r\n  //   });\r\n  //   const res = await axios.post('/api/photos/1', photo);\r\n  //   return res.data.small;\r\n  // };\r\n\r\n  getAlbums = async () => {\r\n    const res = await axios.get('/api/albums');\r\n    return res.data;\r\n  };\r\n\r\n  createNewAlbum = async data => {\r\n    const res = await axios.post(`/api/albums?albumTitle=${data}`);\r\n    return res.data;\r\n  };\r\n\r\n  updateAlbum = async (id, params) => {\r\n    const res = await axios.put(`/api/albums/${id}`, null, { params });\r\n    return res.data;\r\n  };\r\n\r\n  deleteAlbum = async id => {\r\n    const res = await axios.delete(`/api/albums/${id}`);\r\n    return res.data;\r\n  };\r\n\r\n  getPhotosFromAlbum = async id => {\r\n    const res = await axios.get(`/api/albums/getPhotos/${id}`);\r\n    return res.data;\r\n  };\r\n\r\n  addPhotosInAlbum = async (albumId, photosArr) => {\r\n    const res = await axios.post(`/api/photos/${albumId}`, photosArr);\r\n    return res.data;\r\n  };\r\n\r\n  deletePhotoFromAlbum = async photoId => {\r\n    const res = await axios.delete(`/api/photos/${photoId}`);\r\n    return res.data;\r\n  };\r\n\r\n  deletePhotosFromAlbum = async photoIds => {\r\n    await axios.delete('api/photos/deleteMultiplePhoto', { data: photoIds });\r\n  };\r\n\r\n  getUsersList = async (page, query) => {\r\n    const res = await axios.get('/api/admin/users', {\r\n      params: { page: Number(page), ...(query ? { query } : {}) },\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  getUserById = async id => {\r\n    const res = await axios.get(`/api/admin/getUser/${id}`);\r\n    return res.data;\r\n  };\r\n\r\n  getUsersTree = async (id, deep) => {\r\n    const res = await axios.get(`/api/usersTree/user/${id}/${deep}`);\r\n    return res.data;\r\n  };\r\n\r\n  blackListRequest = async (id, dateUnblock = new Date()) => {\r\n    const res = await axios.post('/api/admin/blocking', {\r\n      id,\r\n      dateUnblock: new Date(dateUnblock).toISOString(),\r\n      // Не работает, потому что на беке ещё не смержили ветку с dev\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  unblockUser = async id => {\r\n    const res = await axios.post('/api/admin/unblocking', { id });\r\n    return res.data;\r\n  };\r\n\r\n  sendMailToAllUsers = async params => {\r\n    const res = await axios.post('/api/admin/sendMail', params);\r\n    return res.data;\r\n  };\r\n\r\n  postFile = async formData => {\r\n    const res = await axios.post('/api/chat/image', formData);\r\n    return res.data;\r\n  };\r\n\r\n  isForbidden = async () => {\r\n    const res = await axios.get('/api/chat/isForbidden');\r\n    return res.data;\r\n  };\r\n\r\n  getCurrentUser = async () => {\r\n    const res = await axios.get('/api/chat/user');\r\n    return res.data;\r\n  };\r\n\r\n  getAllUsers = async () => {\r\n    const res = await axios.get('/api/chat/users');\r\n    return res.data;\r\n  };\r\n\r\n  getAllMessages = async page => {\r\n    const res = await axios.get(`/api/chat/messages?page=${page}`);\r\n    return res;\r\n  };\r\n\r\n  deleteMessage = async id => {\r\n    const res = await axios.delete(`/api/chat/messages/${id}`);\r\n    return res.status;\r\n  };\r\n\r\n  createNewTopic = async formData => {\r\n    const res = await axios.post('/api/topic/new', formData);\r\n    return res;\r\n  };\r\n\r\n  getPersonalToken = async (id, params) => {\r\n    const res = await axios.get(`/api/private/${id}`, { params });\r\n    return res.data;\r\n  };\r\n\r\n  getPersonalMessage = async (chatToken, page) => {\r\n    const res = await axios.get(`/api/private/messages/${chatToken}?page=${page}`);\r\n    return res;\r\n  };\r\n\r\n  postFilePersonalChat = async (formData, chatToken) => {\r\n    const res = await axios.post(`/api/private/image/${chatToken}`, formData);\r\n    return res.data;\r\n  };\r\n\r\n  getAnotherUserData = async id => {\r\n    const res = await axios.get(`/api/${id}`);\r\n    return res.data;\r\n  };\r\n}\r\n\r\nexport default new Queries();\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ isAllowed, component: Component, ...rest }) => (\r\n  <Route {...rest}>{isAllowed ? <Component /> : <Redirect to=\"/\" />}</Route>\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  isAllowed: PropTypes.bool.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n  component: PropTypes.elementType.isRequired,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import styled from 'styled-components';\r\n\r\nimport { Select, Form as AntForm, Input, List } from 'antd';\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const StyledList = styled(List)`\r\n  margin-top: 20px;\r\n  .ant-list-item {\r\n    padding: 0;\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport const StyledTitle = styled.h2`\r\n  text-align: center;\r\n`;\r\n\r\nexport const StyledInput = styled(Input)`\r\n  &&& {\r\n    width: 20%;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nexport const StyledSelect = styled(Select)`\r\n  &&& {\r\n    width: 15%;\r\n  }\r\n`;\r\n\r\nexport const StyledForm = styled(AntForm)`\r\n  text-align: right;\r\n  .ant-form-item-children-icon {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const StyledMainPage = styled.div`\r\n  padding-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, Spin } from 'antd';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { StyledList, StyledTitle } from '../Main/styled';\r\n\r\nconst TopicsList = ({ title, items, itemComponent, fetchMessages, hasMore, hasChildren }) => {\r\n  return title.length > 0 ? (\r\n    <InfiniteScroll\r\n      dataLength={items.length}\r\n      next={fetchMessages}\r\n      hasMore={hasMore}\r\n      loader={<Spin />}\r\n      hasChildren={hasChildren}\r\n      endMessage={\r\n        fetchMessages !== null ? (\r\n          <p style={{ textAlign: 'center' }}>\r\n            <b>Вы все просмотрели!</b>\r\n          </p>\r\n        ) : null\r\n      }\r\n    >\r\n      <StyledList\r\n        header={title.length > 0 && <StyledTitle>{title}</StyledTitle>}\r\n        dataSource={items}\r\n        renderItem={item => <List.Item>{itemComponent(item)}</List.Item>}\r\n        size=\"large\"\r\n      />\r\n    </InfiniteScroll>\r\n  ) : (\r\n    <Spin />\r\n  );\r\n};\r\n\r\nTopicsList.propTypes = {\r\n  title: PropTypes.string,\r\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  itemComponent: PropTypes.func.isRequired,\r\n  fetchMessages: PropTypes.func,\r\n  hasMore: PropTypes.bool,\r\n  hasChildren: PropTypes.bool,\r\n};\r\n\r\nTopicsList.defaultProps = {\r\n  title: <h1>No Title</h1>,\r\n  hasMore: false,\r\n  fetchMessages: null,\r\n  hasChildren: true,\r\n};\r\n\r\nexport default TopicsList;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.shape({\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  position: PropTypes.number,\r\n  section: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    position: PropTypes.number,\r\n    hideToAnon: PropTypes.bool,\r\n  }),\r\n  hideToAnon: PropTypes.bool,\r\n});\r\n","import PropTypes from 'prop-types';\r\nimport subSectionProps from './subSectionProps';\r\n\r\nexport default PropTypes.shape({\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  topicStarter: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    email: PropTypes.string,\r\n    nickName: PropTypes.string,\r\n    regDate: PropTypes.string,\r\n    role: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      role: PropTypes.string,\r\n      authority: PropTypes.string,\r\n    }),\r\n    avatar: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      original: PropTypes.string,\r\n      medium: PropTypes.string,\r\n      small: PropTypes.string,\r\n    }),\r\n    enabled: PropTypes.bool,\r\n    username: PropTypes.string,\r\n    authorities: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        authority: PropTypes.string,\r\n      })\r\n    ),\r\n    accountNonExpired: PropTypes.bool,\r\n    accountNonLocked: PropTypes.bool,\r\n    credentialsNonExpired: PropTypes.bool,\r\n  }),\r\n  messageCount: PropTypes.number,\r\n  startTime: PropTypes.string,\r\n  lastMessageTime: PropTypes.string,\r\n  subsection: subSectionProps,\r\n  hideToAnon: PropTypes.bool,\r\n  section: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    position: PropTypes.number,\r\n    hideToAnon: PropTypes.bool,\r\n  }),\r\n});\r\n","import PropTypes from 'prop-types';\r\nimport topicProps from './topicProps';\r\n\r\nexport default PropTypes.shape({\r\n  section: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    position: PropTypes.number,\r\n    hideToAnon: PropTypes.bool,\r\n  }),\r\n  topics: PropTypes.arrayOf(topicProps),\r\n});\r\n","import styled from 'styled-components';\r\nimport { Col } from 'antd';\r\n\r\nexport const StyledClickableItem = styled.div`\r\n  width: 100%;\r\n  padding: 16px;\r\n  &:hover {\r\n    background-color: #f0f5ff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const TopicItemInfo = styled(Col)`\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const TopicItemMainInfo = styled(Col)`\r\n  line-height: 6px;\r\n`;\r\n\r\nexport const TopicItemTitleUser = styled.p`\r\n  font-size: 12px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledClickableItem } from './styled';\r\n\r\nconst ClickableItemWrapper = ({ children, clickHandler }) => {\r\n  return <StyledClickableItem onClick={clickHandler}>{children}</StyledClickableItem>;\r\n};\r\n\r\nClickableItemWrapper.propTypes = {\r\n  children: PropTypes.element,\r\n  clickHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nClickableItemWrapper.defaultProps = {\r\n  children: <div>No item data</div>,\r\n};\r\n\r\nexport default ClickableItemWrapper;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { subSectionProps } from './propTypes';\r\nimport ClickableItemWrapper from '../Subsection/ClickableItemWrapper';\r\n\r\nconst SubSectionItem = ({ item, history }) => {\r\n  const clickSubsectionHandler = () => {\r\n    history.push(`/subsection/${item.id}`);\r\n  };\r\n\r\n  return (\r\n    <ClickableItemWrapper clickHandler={clickSubsectionHandler}>\r\n      <strong>{item.name}</strong>\r\n    </ClickableItemWrapper>\r\n  );\r\n};\r\n\r\nSubSectionItem.propTypes = {\r\n  item: subSectionProps.isRequired,\r\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default withRouter(SubSectionItem);\r\n","import React from 'react';\r\nimport TopicsList from '../Subsection/TopicsList';\r\nimport SubSectionItem from './SubSectionItem';\r\nimport sectionProps from './propTypes/sectionProps';\r\n\r\nconst SubSectionsList = ({ section }) => {\r\n  return (\r\n    <TopicsList\r\n      title={section.section.name}\r\n      items={section.subsections}\r\n      itemComponent={item => <SubSectionItem item={item} />}\r\n    />\r\n  );\r\n};\r\n\r\nSubSectionsList.propTypes = {\r\n  section: sectionProps.isRequired,\r\n};\r\n\r\nexport default SubSectionsList;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Col, Icon, Row } from 'antd';\r\nimport topicProps from '../Main/propTypes/topicProps';\r\nimport ClickableItemWrapper from './ClickableItemWrapper';\r\nimport { TopicItemInfo, TopicItemTitleUser, TopicItemMainInfo } from './styled';\r\nimport { dateToDateDistance } from '../../utils';\r\n\r\nconst TopicsListItem = ({ topicData, history }) => {\r\n  const topicClickHandler = () => {\r\n    history.push(`/topic/${topicData.topic.id}`);\r\n  };\r\n  return (\r\n    <ClickableItemWrapper clickHandler={topicClickHandler}>\r\n      <Row>\r\n        <TopicItemMainInfo span={16}>\r\n          <p>\r\n            <strong>{topicData.topic.name}</strong>\r\n          </p>\r\n          <TopicItemTitleUser>\r\n            от <b>{topicData.topic.topicStarter.nickName}</b>\r\n          </TopicItemTitleUser>\r\n        </TopicItemMainInfo>\r\n        <Col span={6}>\r\n          <Icon type=\"rollback\" /> {dateToDateDistance(topicData.topic.lastMessageTime)} назад\r\n        </Col>\r\n        <TopicItemInfo span={2}>\r\n          <p>\r\n            <Icon type=\"message\" /> {topicData.topic.messageCount}\r\n          </p>\r\n        </TopicItemInfo>\r\n      </Row>\r\n    </ClickableItemWrapper>\r\n  );\r\n};\r\n\r\nTopicsListItem.propTypes = {\r\n  topicData: PropTypes.shape({\r\n    topic: topicProps.isRequired,\r\n    totalMessages: PropTypes.number,\r\n    isSubscribed: PropTypes.bool,\r\n    hasNewMessages: PropTypes.bool,\r\n    newMessagesCount: PropTypes.number,\r\n  }).isRequired,\r\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default withRouter(TopicsListItem);\r\n","import React from 'react';\r\n\r\nexport default React.createContext({\r\n  isLogin: false,\r\n});\r\n","import React from 'react';\r\nimport { Row, Button, Icon, message, Modal } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport queries from '../../../serverQueries';\r\nimport Context from '../../Context';\r\nimport { BASE_URL } from '../../../constants';\r\n\r\nconst DeletePhotoButton = styled(Button)`\r\n  display: none;\r\n  position: absolute;\r\n  padding: 2px 5px;\r\n  top: 0;\r\n  right: 0;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst EditPhotoButton = styled(DeletePhotoButton)`\r\n  right: 30px;\r\n`;\r\n\r\nconst StyledAlbumCard = styled.div`\r\n  position: relative;\r\n  height: 150px;\r\n  width: 239px;\r\n  margin: 3px;\r\n  background-size: cover;\r\n  &:hover ${DeletePhotoButton} {\r\n    display: block;\r\n  }\r\n  @media (max-width: 479px) {\r\n    ${DeletePhotoButton} {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\nconst AlbomShadow = styled.div`\r\n  color: #fff;\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  padding: 35px 12px 9px;\r\n  background: url(/shadow.png);\r\n`;\r\n\r\nconst PhotoCounter = styled.span`\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  padding: 10px;\r\n  color: #fff;\r\n`;\r\nconst AlbomBackgroundImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst AlbumTitle = styled.span`\r\n  word-break: break-all;\r\n  position: absolute;\r\n  bottom: 0;\r\n  padding: 10px;\r\n  left: 0;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledAlbumWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: columns;\r\n  flex-wrap: wrap;\r\n  align-content: space-between;\r\n  margin: 30px 0;\r\n  @media (max-width: 1000px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\nconst { confirm } = Modal;\r\n\r\nclass Albums extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      albums: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { isLogin } = this.context;\r\n    if (isLogin) {\r\n      this.loadAlbums();\r\n    }\r\n  }\r\n\r\n  loadAlbums = async () => {\r\n    const allAlbums = await queries.getAlbums();\r\n    this.setState({ albums: allAlbums });\r\n  };\r\n\r\n  createNewAlbum = async () => {\r\n    const { albums } = this.state;\r\n    // eslint-disable-next-line no-alert\r\n    const title = prompt('Название альбома');\r\n    if (!title) {\r\n      /* eslint-disable-next-line no-alert */\r\n      message.error('Необходимо указать название для альбома');\r\n      return;\r\n    }\r\n    try {\r\n      const NewAlbum = await queries.createNewAlbum(title);\r\n      this.setState({ albums: [...albums, NewAlbum] });\r\n    } catch (error) {\r\n      /* eslint-disable-next-line no-console */\r\n      console.error(error.response);\r\n      message.error('что-то пошло не так');\r\n    }\r\n  };\r\n\r\n  deleteAlbum = album => async event => {\r\n    const doDeleteAlbum = async () => {\r\n      const { albums } = this.state;\r\n      try {\r\n        await queries.deleteAlbum(album.photoAlbumId);\r\n        const newAlbums = albums.reduce((acc, item) => {\r\n          if (item.photoAlbumId !== album.photoAlbumId) {\r\n            acc.push(item);\r\n          }\r\n          return [...acc];\r\n        }, []);\r\n        this.setState({ albums: newAlbums });\r\n      } catch (error) {\r\n        /* eslint-disable-next-line no-console */\r\n        console.error(error.response);\r\n        message.error('что-то пошло не так');\r\n      }\r\n    };\r\n    event.stopPropagation();\r\n    function showDeleteConfirm() {\r\n      confirm({\r\n        title: 'Подтвердите удаление альбома',\r\n        content: 'Вы уверены, что хотите удалить альбом?',\r\n        okText: 'Да',\r\n        okType: 'danger',\r\n        cancelText: 'Нет',\r\n        onOk() {\r\n          doDeleteAlbum();\r\n        },\r\n        onCancel() {},\r\n      });\r\n    }\r\n    showDeleteConfirm();\r\n  };\r\n\r\n  editPhotoAlbum = album => async event => {\r\n    event.stopPropagation();\r\n    const {\r\n      history,\r\n      location: { pathname },\r\n    } = this.props;\r\n    const url = `${pathname}/editAlbum/${album.photoAlbumId}`;\r\n    history.push({\r\n      pathname: url,\r\n      state: album,\r\n    });\r\n  };\r\n\r\n  openAlbum = album => () => {\r\n    const {\r\n      history,\r\n      location: { pathname },\r\n      isMainPage,\r\n    } = this.props;\r\n    if (isMainPage) {\r\n      history.push({\r\n        pathname: `/profile/albums/${album.photoAlbumId}`,\r\n        state: album,\r\n      });\r\n      return;\r\n    }\r\n    const url = `${pathname}/${album.photoAlbumId}`;\r\n    history.push({\r\n      pathname: url,\r\n      state: album,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { albums } = this.state;\r\n    const { isMainPage } = this.props;\r\n    return (\r\n      <>\r\n        {isMainPage ? (\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <h2>Альбомы</h2>\r\n          </Row>\r\n        ) : null}\r\n        {albums.length > 0 ? (\r\n          <StyledAlbumWrapper>\r\n            {albums.map(album => (\r\n              <StyledAlbumCard onClick={this.openAlbum(album)} key={album.photoAlbumId}>\r\n                <AlbomBackgroundImage\r\n                  src={\r\n                    album.thumbImageId\r\n                      ? `${BASE_URL}api/securedPhoto/photoFromAlbum/${album.thumbImageId}`\r\n                      : `/defaultAlbumPicture.jpg`\r\n                  }\r\n                />\r\n                <AlbomShadow>\r\n                  <AlbumTitle>{album.title}</AlbumTitle>\r\n                  <PhotoCounter>{album.photosCounter}</PhotoCounter>\r\n                </AlbomShadow>\r\n\r\n                <DeletePhotoButton\r\n                  type=\"default\"\r\n                  title=\"Удалить альбом\"\r\n                  onClick={this.deleteAlbum(album)}\r\n                >\r\n                  <Icon type=\"delete\" style={{ color: 'red' }} />\r\n                </DeletePhotoButton>\r\n                <EditPhotoButton\r\n                  type=\"default\"\r\n                  title=\"Редактировать албом\"\r\n                  onClick={this.editPhotoAlbum(album)}\r\n                >\r\n                  <Icon type=\"edit\" />\r\n                </EditPhotoButton>\r\n              </StyledAlbumCard>\r\n            ))}\r\n          </StyledAlbumWrapper>\r\n        ) : (\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <h4>Пока альбомов нет</h4>\r\n          </Row>\r\n        )}\r\n        {isMainPage ? null : (\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Button type=\"primary\" onClick={this.createNewAlbum}>\r\n              Создать новый альбом\r\n            </Button>\r\n          </Row>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAlbums.contextType = Context;\r\n\r\nAlbums.propTypes = {\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  isMainPage: PropTypes.bool.isRequired,\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(Albums);\r\n","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport { StyledInput } from '../Main/styled';\r\n\r\nconst SimpleInput = ({ ...props }) => {\r\n  const [field] = useField(props);\r\n  return <StyledInput {...field} {...props} />;\r\n};\r\n\r\nexport default SimpleInput;\r\n","import React, { useContext } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Formik, Field as FormikField } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form as AntForm, Input, Select } from 'antd';\r\nimport Context from '../Context';\r\nimport SimpleInput from '../formItems/SimpleInput';\r\nimport { StyledForm, StyledSelect, ButtonGroup } from './styled';\r\n\r\nconst InputGroup = Input.Group;\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object({\r\n  searchRequest: Yup.string().min(3, 'Введите не меннее 3-х символов'),\r\n});\r\n\r\nconst SearchForm = ({ history }) => {\r\n  const { isLogin } = useContext(Context);\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        searchRequest: '',\r\n        searchBy: 'searchTopics',\r\n      }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={({ searchBy, searchRequest }) => history.push(`/${searchBy}/${searchRequest}`)}\r\n    >\r\n      {({ handleSubmit, errors, touched, values, setFieldValue, setFieldTouched }) => {\r\n        return (\r\n          <StyledForm onSubmit={handleSubmit}>\r\n            <AntForm.Item\r\n              hasFeedback={!!touched.searchRequest && !!errors.searchRequest}\r\n              validateStatus={touched.searchRequest && errors.searchRequest ? 'error' : 'success'}\r\n              help={touched.searchRequest ? errors.searchRequest : ''}\r\n            >\r\n              <ButtonGroup>\r\n                {isLogin && (\r\n                  <Button>\r\n                    <Link to=\"/topic/add\">Создать тему</Link>\r\n                  </Button>\r\n                )}\r\n                <InputGroup compact>\r\n                  <SimpleInput placeholder=\"Поиск по Форуму\" name=\"searchRequest\" type=\"text\" />\r\n                  <FormikField name=\"searchBy\">\r\n                    {({ field }) => (\r\n                      <StyledSelect\r\n                        {...field}\r\n                        onChange={value => setFieldValue('searchBy', value)}\r\n                        onBlur={() => setFieldTouched('searchBy', true)}\r\n                        value={values.searchBy}\r\n                      >\r\n                        <Option key={1} value=\"searchTopics\">\r\n                          По темам\r\n                        </Option>\r\n                        <Option key={2} value=\"searchComments\">\r\n                          По сообщениям\r\n                        </Option>\r\n                      </StyledSelect>\r\n                    )}\r\n                  </FormikField>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    icon=\"search\"\r\n                    disabled={!!touched.searchRequest && !!errors.searchRequest}\r\n                  >\r\n                    Искать\r\n                  </Button>\r\n                </InputGroup>\r\n              </ButtonGroup>\r\n            </AntForm.Item>\r\n          </StyledForm>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nSearchForm.propTypes = {\r\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default withRouter(SearchForm);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport SubSectionsList from './SubSectionsList';\r\nimport queries from '../../serverQueries';\r\nimport { StyledMainPage } from './styled';\r\nimport TopicsList from '../Subsection/TopicsList';\r\nimport TopicsListItem from '../Subsection/TopicsListItem';\r\nimport Albums from '../Profile/Albums/Albums';\r\nimport SearchForm from './SearchForm';\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rootSections: [],\r\n      actualTopics: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    queries.getActualTopics().then(actualTopics => {\r\n      this.setState({ actualTopics });\r\n    });\r\n    queries.getAllSections().then(sections => {\r\n      this.setState({ rootSections: sections });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { rootSections, actualTopics } = this.state;\r\n    return (\r\n      <StyledMainPage>\r\n        <SearchForm />\r\n        {actualTopics.length > 0 ? (\r\n          <TopicsList\r\n            itemComponent={item => <TopicsListItem topicData={item} />}\r\n            items={actualTopics}\r\n            title=\"Актуальные темы\"\r\n          />\r\n        ) : (\r\n          <Spin />\r\n        )}\r\n        {rootSections.length > 0 ? (\r\n          rootSections.map(section => (\r\n            <SubSectionsList section={section} key={section.section.id} />\r\n          ))\r\n        ) : (\r\n          <Spin />\r\n        )}\r\n        <Albums isMainPage />\r\n      </StyledMainPage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MainPage from '../components/Main/MainPage';\r\n\r\nconst CommonRoute = () => <Route exact path=\"/\" component={MainPage} />;\r\n\r\nexport default CommonRoute;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form as AntForm } from 'antd';\r\nimport { useField } from 'formik';\r\n\r\nconst FormItem = ({ label, children, ...props }) => {\r\n  const [, meta] = useField(props);\r\n  return (\r\n    <AntForm.Item\r\n      label={label}\r\n      hasFeedback={label.toLowerCase().indexOf('password') === -1 && !!meta.touched && !!meta.error}\r\n      validateStatus={meta.touched && meta.error ? 'error' : 'success'}\r\n      help={meta.touched ? meta.error : ''}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </AntForm.Item>\r\n  );\r\n};\r\n\r\nFormItem.propTypes = {\r\n  label: PropTypes.string,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nFormItem.defaultProps = {\r\n  label: '',\r\n};\r\n\r\nexport default FormItem;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Button, Row } from 'antd';\r\nimport { Form, Input } from 'formik-antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport queries from '../serverQueries';\r\nimport Context from './Context';\r\nimport FormItem from './formItems/FormItem';\r\n\r\nconst formLayoutSchema = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 12 },\r\n  },\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string().required('Это поле обязательно'),\r\n  password: Yup.string().required('Это поле обязательно'),\r\n});\r\n\r\nconst login = ({ changeLoginState, changeUserState, changeLoadingState }) => async (\r\n  values,\r\n  { setStatus }\r\n) => {\r\n  changeLoadingState(true);\r\n  const formData = new FormData();\r\n  formData.append('username', values.username);\r\n  formData.append('password', values.password);\r\n\r\n  try {\r\n    await queries.logIn(formData);\r\n    const userData = await queries.getProfileData();\r\n\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n\r\n    setStatus('');\r\n    changeLoginState();\r\n    changeUserState(userData);\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 401) {\r\n      setStatus('Проверьте правильность ввода логина и пароля');\r\n    }\r\n    changeLoadingState(false);\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  const [loading, changeLoadingState] = useState(false);\r\n  const { changeLoginState, changeUserState } = useContext(Context);\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={login({ changeLoginState, changeUserState, changeLoadingState })}\r\n    >\r\n      {({ status }) => (\r\n        <>\r\n          {status && (\r\n            <Row type=\"flex\" justify=\"center\">\r\n              <h3>{status}</h3>\r\n            </Row>\r\n          )}\r\n          <Form {...formLayoutSchema}>\r\n            <FormItem label=\"Логин\" name=\"username\">\r\n              <Input name=\"username\" />\r\n            </FormItem>\r\n            <FormItem label=\"Пароль\" name=\"password\">\r\n              <Input.Password name=\"password\" />\r\n            </FormItem>\r\n\r\n            <Row type=\"flex\" justify=\"center\">\r\n              <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                Войти\r\n              </Button>\r\n            </Row>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Button, Row, Divider } from 'antd';\r\nimport { Form, Input } from 'formik-antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport queries from '../serverQueries';\r\n\r\nimport FormItem from './formItems/FormItem';\r\n\r\nconst formLayoutSchema = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 12 },\r\n  },\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  nickName: Yup.string().required('Это поле обязательно'),\r\n  firstName: Yup.string().required('Это поле обязательно'),\r\n  lastName: Yup.string().required('Это поле обязательно'),\r\n  password: Yup.string()\r\n    .required('Это поле обязательно')\r\n    .min(8, 'Минимальная длина пароля - 8 символов')\r\n    .max(40, 'Максимальная длина пароля - 40 символов')\r\n    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)./, 'Пароль должен содержать символы A-Z, a-z, 0-9'),\r\n  repeatPassword: Yup.string()\r\n    .required('Это поле обязательно')\r\n    .oneOf([Yup.ref('password'), null], 'Пароли должны совпадать'),\r\n  email: Yup.string()\r\n    .email('Некорректный email адрес')\r\n    .required('Это поле обязательно'),\r\n});\r\n\r\nconst Registration = () => {\r\n  const [loading, changeLoadingState] = useState(false);\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const key = query.get('key');\r\n\r\n  const register = token => async (values, { setStatus }) => {\r\n    changeLoadingState(true);\r\n    setStatus('');\r\n    const res = await queries.registrationUser({ key: token, ...values });\r\n    if (res === 1) {\r\n      setStatus('Письмо с подтверждением отправлено на ваш email');\r\n    } else {\r\n      setStatus('Некорректный token регистрации');\r\n    }\r\n    changeLoadingState(false);\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        nickName: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        email: '',\r\n      }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={register(key)}\r\n    >\r\n      {({ status }) => (\r\n        <>\r\n          {status && (\r\n            <Row type=\"flex\" justify=\"center\">\r\n              <h3>{status}</h3>\r\n            </Row>\r\n          )}\r\n          <Form {...formLayoutSchema}>\r\n            <FormItem label=\"Логин\" name=\"nickName\">\r\n              <Input name=\"nickName\" />\r\n            </FormItem>\r\n            <FormItem label=\"Имя\" name=\"firstName\">\r\n              <Input name=\"firstName\" />\r\n            </FormItem>\r\n            <FormItem label=\"Фамилия\" name=\"lastName\">\r\n              <Input name=\"lastName\" />\r\n            </FormItem>\r\n            <Divider />\r\n            <FormItem label=\"Пароль\" name=\"password\">\r\n              <Input.Password name=\"password\" />\r\n            </FormItem>\r\n            <FormItem label=\"Повторите пароль\" name=\"repeatPassword\">\r\n              <Input.Password name=\"repeatPassword\" />\r\n            </FormItem>\r\n            <Divider />\r\n            <FormItem label=\"Почта\" name=\"email\">\r\n              <Input name=\"email\" />\r\n            </FormItem>\r\n\r\n            <Row type=\"flex\" justify=\"center\">\r\n              <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                Зарегистрироваться\r\n              </Button>\r\n            </Row>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button, Row } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport queries from '../serverQueries';\r\n\r\nclass RegistrationAccept extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSuccesfull: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    const query = new URLSearchParams(location.search);\r\n    const res = await queries.registrationUserAdd(query.get('key'));\r\n    this.setState({ isSuccesfull: res === 'Ok' });\r\n  }\r\n\r\n  render() {\r\n    const { isSuccesfull } = this.state;\r\n    return (\r\n      <>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          {isSuccesfull ? <h1>Поздравляем с успешной регистрацией!</h1> : null}\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <NavLink to=\"/login\">\r\n            <Button>Войти</Button>\r\n          </NavLink>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRegistrationAccept.propTypes = {\r\n  location: PropTypes.shape({\r\n    search: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default RegistrationAccept;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport Login from '../components/Login';\r\nimport Registration from '../components/Registration';\r\nimport RegistrationAccept from '../components/RegistrationAccept';\r\n\r\nconst AuthRoute = ({ isLogin }) => {\r\n  return (\r\n    <>\r\n      <Route path=\"/invite\">{isLogin ? <Redirect to=\"/\" /> : <Registration />}</Route>\r\n      <Route path=\"/registration-accept\" component={RegistrationAccept} />\r\n      <Route path=\"/login\">{isLogin ? <Redirect to=\"/\" /> : <Login />}</Route>\r\n    </>\r\n  );\r\n};\r\n\r\nAuthRoute.propTypes = {\r\n  isLogin: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default AuthRoute;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.shape({\r\n  id: PropTypes.number,\r\n  firstName: PropTypes.string,\r\n  lastName: PropTypes.string,\r\n  email: PropTypes.string,\r\n  nickName: PropTypes.string,\r\n  regDate: PropTypes.string,\r\n  role: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    role: PropTypes.string,\r\n    authority: PropTypes.string,\r\n  }),\r\n  avatar: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    original: PropTypes.string,\r\n    medium: PropTypes.string,\r\n    small: PropTypes.string,\r\n  }),\r\n  enabled: PropTypes.bool,\r\n  username: PropTypes.string,\r\n  authorities: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      role: PropTypes.string,\r\n      authority: PropTypes.string,\r\n    })\r\n  ),\r\n  accountNonLocked: PropTypes.bool,\r\n  hibernateLazyInitializer: PropTypes.objectOf(PropTypes.any),\r\n  accountNonExpired: PropTypes.bool,\r\n  credentialsNonExpired: PropTypes.bool,\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Result, Icon, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport commentProps from './propTypes/commentProps';\r\nimport { StyledList, StyledTitle } from '../Main/styled';\r\nimport Context from '../Context';\r\n\r\nconst TopicCommentsList = ({\r\n  messages,\r\n  itemComponent,\r\n  changePageHandler,\r\n  total,\r\n  page,\r\n  replyButtonHandler,\r\n  openNotification,\r\n  title,\r\n}) => {\r\n  const { isLogin } = useContext(Context);\r\n  if (!messages) {\r\n    return (\r\n      <Result status=\"500\" title=\"500\" subTitle=\"Извините на сервере возникла неожиданная ошибка\" />\r\n    );\r\n  }\r\n  if (messages.length > 0) {\r\n    return (\r\n      <StyledList\r\n        className=\"comment-list\"\r\n        header={<StyledTitle>{title || `Комментарии (${total})`}</StyledTitle>}\r\n        itemLayout=\"horizontal\"\r\n        dataSource={messages}\r\n        renderItem={itemComponent}\r\n        pagination={{\r\n          current: page,\r\n          onChange: currentPage => {\r\n            changePageHandler(currentPage);\r\n          },\r\n          pageSize: 10,\r\n          total,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Result\r\n      icon={<Icon type=\"smile\" theme=\"twoTone\" />}\r\n      title=\"Комментариев нет!\"\r\n      extra={\r\n        <Button onClick={isLogin ? replyButtonHandler : openNotification} type=\"primary\">\r\n          Добавить комментарий\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nTopicCommentsList.propTypes = {\r\n  messages: PropTypes.arrayOf(commentProps).isRequired,\r\n  itemComponent: PropTypes.func.isRequired,\r\n  changePageHandler: PropTypes.func,\r\n  total: PropTypes.number,\r\n  page: PropTypes.number,\r\n  replyButtonHandler: PropTypes.func.isRequired,\r\n  openNotification: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nTopicCommentsList.defaultProps = {\r\n  total: 1,\r\n  page: 1,\r\n  changePageHandler: () => {},\r\n  title: null,\r\n};\r\n\r\nexport default TopicCommentsList;\r\n","import PropTypes from 'prop-types';\r\nimport userProps from './userProps';\r\n\r\nexport default PropTypes.shape({\r\n  positionInTopic: PropTypes.number,\r\n  topicId: PropTypes.number,\r\n  author: userProps,\r\n  commentDateTime: PropTypes.string,\r\n  commentUpdateTime: PropTypes.string,\r\n  messageCount: PropTypes.number,\r\n  replyDateTime: PropTypes.string,\r\n  replyNick: PropTypes.string,\r\n  replyText: PropTypes.string,\r\n  commentText: PropTypes.string,\r\n});\r\n","import styled from 'styled-components';\r\nimport { Button, Col, Row, Icon, Alert, Upload, Typography } from 'antd';\r\n\r\nexport const StyledTopicUserInfo = styled(Row)`\r\n  min-height: 120px;\r\n  min-width: 300px;\r\n`;\r\n\r\nexport const UserInfoLeft = styled(Col)`\r\n  text-align: center;\r\n`;\r\n\r\nexport const ReplyFloatButton = styled(Button)`\r\n  position: fixed;\r\n  bottom: 50px;\r\n  right: 50px;\r\n`;\r\n\r\nexport const TopicReplyWarning = styled.h3`\r\n  margin: 24px 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport const GoldIcon = styled(Icon)`\r\n  color: #ffc53d;\r\n`;\r\n\r\nexport const TopicCommentReplyAlert = styled(Alert)`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const ReplyTag = styled.span`\r\n  display: inline-block;\r\n  margin: 0 5px;\r\n  color: ${props => (props.green ? '#87D068' : '#87D068')};\r\n  font-weight: 500;\r\n  text-decoration: underline;\r\n`;\r\n\r\nexport const UploadViewOnly = styled(Upload)`\r\n  i.anticon.anticon-delete {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid #e8e8e8;\r\n`;\r\n\r\nexport const DeletedMessageText = styled(Typography.Text)`\r\n  font-size: 12px;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './styled/quill.css';\r\n\r\nconst modules = {\r\n  toolbar: [\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [{ list: 'ordered' }, { list: 'bullet' }],\r\n  ],\r\n};\r\n\r\nconst TopicReplyEditor = props => {\r\n  const [clazz, setClazz] = useState('');\r\n  const { value, onChange, replyRef, ...rest } = props;\r\n  return (\r\n    <ReactQuill\r\n      className={clazz}\r\n      ref={replyRef}\r\n      value={value}\r\n      onChange={onChange}\r\n      theme=\"snow\"\r\n      onFocus={() => {\r\n        setClazz('my-quill');\r\n      }}\r\n      onBlur={() => {\r\n        setClazz('');\r\n      }}\r\n      modules={modules}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nTopicReplyEditor.defaultProps = {\r\n  value: '',\r\n  replyRef: null,\r\n};\r\n\r\nTopicReplyEditor.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  replyRef: PropTypes.func,\r\n};\r\n\r\nexport default TopicReplyEditor;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.shape({\r\n  uid: PropTypes.string,\r\n  name: PropTypes.string,\r\n  status: PropTypes.oneOf(['done', 'uploading', 'error', 'removed']),\r\n  url: PropTypes.string,\r\n});\r\n","import React from 'react';\r\nimport { Upload, Icon, Modal } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { UploadViewOnly } from './styled';\r\nimport fileProps from './propTypes/fileProps';\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nclass TopicPhotoList extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  beforeUpload = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage } = this.state;\r\n    const { canUpload, fileList, handleChangePicturesState, defaultFileList } = this.props;\r\n    const uploadBasicProps = {\r\n      listType: 'picture-card',\r\n      fileList,\r\n      onPreview: this.handlePreview,\r\n      defaultFileList,\r\n    };\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Добавить фото</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        {canUpload ? (\r\n          <Upload\r\n            {...uploadBasicProps}\r\n            accept=\".jpg,.png\"\r\n            onChange={handleChangePicturesState}\r\n            beforeUpload={this.beforeUpload}\r\n          >\r\n            {fileList.length >= 2 ? null : uploadButton}\r\n          </Upload>\r\n        ) : (\r\n          <UploadViewOnly {...uploadBasicProps} />\r\n        )}\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopicPhotoList.propTypes = {\r\n  canUpload: PropTypes.bool,\r\n  fileList: PropTypes.arrayOf(fileProps).isRequired,\r\n  handleChangePicturesState: PropTypes.func,\r\n  defaultFileList: PropTypes.arrayOf(fileProps),\r\n};\r\n\r\nTopicPhotoList.defaultProps = {\r\n  canUpload: false,\r\n  handleChangePicturesState: () => {},\r\n  defaultFileList: null,\r\n};\r\n\r\nexport default TopicPhotoList;\r\n","import React from 'react';\r\nimport { Button, Form as AntForm } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TopicReplyEditor from './TopicReplyEditor';\r\nimport TopicPhotoList from './TopicPhotoList';\r\nimport fileProps from './propTypes/fileProps';\r\n\r\nconst validationSchema = Yup.object({\r\n  message: Yup.string()\r\n    .min(1, 'Сообщение не может быть пустым')\r\n    .max(500000, 'Слишком длинное сообщение').isRequired,\r\n});\r\n\r\nconst TopicReplyForm = ({ replyRef, handleSubmitComment, handleAddFile, files, uploading }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        message: '',\r\n      }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { resetForm }) => {\r\n        handleSubmitComment(values.message, resetForm);\r\n      }}\r\n    >\r\n      {({ handleSubmit, handleChange, errors, touched, values }) => {\r\n        return (\r\n          <Form onSubmit={handleSubmit}>\r\n            <AntForm.Item\r\n              hasFeedback={!!touched.message && !!errors.message}\r\n              validateStatus={touched.message && errors.message ? 'error' : 'success'}\r\n              help={touched.message ? errors.message : ''}\r\n            >\r\n              <TopicReplyEditor\r\n                value={values.message}\r\n                onChange={handleChange('message')}\r\n                placeholder=\"Напишите свое сообщение\"\r\n                replyRef={replyRef}\r\n              />\r\n            </AntForm.Item>\r\n            <AntForm.Item>\r\n              <TopicPhotoList\r\n                handleChangePicturesState={handleAddFile}\r\n                fileList={files}\r\n                canUpload\r\n              />\r\n            </AntForm.Item>\r\n            <AntForm.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                disabled={!!touched.messgae && !!errors.message}\r\n                loading={uploading}\r\n              >\r\n                {uploading ? 'Отправка' : 'Отправить'}\r\n              </Button>\r\n            </AntForm.Item>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nTopicReplyForm.propTypes = {\r\n  replyRef: PropTypes.func.isRequired,\r\n  handleSubmitComment: PropTypes.func.isRequired,\r\n  handleAddFile: PropTypes.func.isRequired,\r\n  files: PropTypes.arrayOf(fileProps).isRequired,\r\n  uploading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TopicReplyForm;\r\n","import React from 'react';\r\nimport { Button, Form as AntForm, message } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Formik } from 'formik';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport TopicReplyEditor from './TopicReplyEditor';\r\nimport queries from '../../serverQueries';\r\nimport TopicPhotoList from './TopicPhotoList';\r\nimport fileProps from './propTypes/fileProps';\r\n\r\nconst validationSchema = Yup.object({\r\n  message: Yup.string()\r\n    .min(1, 'Сообщение не может быть пустым')\r\n    .max(500000, 'Слишком длинное сообщение'),\r\n});\r\n\r\nclass TopicEditingForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: props.fileList,\r\n    };\r\n  }\r\n\r\n  handleAddFile = info => {\r\n    this.setState({ files: info.fileList });\r\n    if (info.file.status !== 'removed') {\r\n      message.success(`Файл ${info.file.name} успешно добавлен`);\r\n    }\r\n  };\r\n\r\n  handleSubmitForm = text => {\r\n    const {\r\n      idTopic,\r\n      idUser,\r\n      commentId,\r\n      getTopics,\r\n      page,\r\n      history,\r\n      handleCancel,\r\n      updateComment,\r\n    } = this.props;\r\n\r\n    if (!commentId) {\r\n      message.error('Вы не выбрали какой комментарий редактировать!');\r\n      return;\r\n    }\r\n\r\n    const { files } = this.state;\r\n    const editingComment = {\r\n      idTopic,\r\n      idUser,\r\n      commentId,\r\n      text,\r\n      photoIdList: [],\r\n    };\r\n\r\n    files.forEach((file, index) => {\r\n      if (file.originFileObj) {\r\n        editingComment[`image${index + 1}`] = file;\r\n      } else {\r\n        editingComment.photoIdList.push(file.uid * -1);\r\n      }\r\n    });\r\n    queries\r\n      .updateComment(editingComment)\r\n      .then(comment => {\r\n        history.push(`${history.location.pathname}?page=${page}`);\r\n        if (getTopics) {\r\n          getTopics(page);\r\n        }\r\n        if (updateComment) {\r\n          updateComment(comment);\r\n        }\r\n        message.success('Сообщение сохранено');\r\n        handleCancel();\r\n      })\r\n      .catch(() => {\r\n        message.error('Что-то пошло не так,  сообщение не сохраненно');\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { edetingText, handleCancel, fileList } = this.props;\r\n    const { files } = this.state;\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          message: edetingText,\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => {\r\n          this.handleSubmitForm(values.message);\r\n        }}\r\n      >\r\n        {({ handleSubmit, handleChange, errors, touched, values, handleBlur }) => {\r\n          return (\r\n            <Form onSubmit={handleSubmit}>\r\n              <AntForm.Item\r\n                hasFeedback={!!touched.message && !!errors.message}\r\n                validateStatus={touched.message && errors.message ? 'error' : 'success'}\r\n                help={touched.message ? errors.message : ''}\r\n              >\r\n                <TopicReplyEditor\r\n                  value={values.message}\r\n                  onChange={handleChange('message')}\r\n                  onBlur={handleBlur}\r\n                  name=\"message\"\r\n                  rows={4}\r\n                />\r\n              </AntForm.Item>\r\n              <AntForm.Item>\r\n                <TopicPhotoList\r\n                  fileList={files}\r\n                  handleChangePicturesState={this.handleAddFile}\r\n                  canUpload\r\n                  defaultFileList={fileList}\r\n                />\r\n              </AntForm.Item>\r\n              <AntForm.Item>\r\n                <Button\r\n                  onClick={handleCancel}\r\n                  type=\"dashed\"\r\n                  htmlType=\"button\"\r\n                  style={{ marginRight: '10px' }}\r\n                >\r\n                  Отмена\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  disabled={!!touched.messgae && !!errors.message}\r\n                >\r\n                  Сохранить\r\n                </Button>\r\n              </AntForm.Item>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TopicEditingForm);\r\n\r\nTopicEditingForm.defaultProps = {\r\n  commentId: null,\r\n  updateComment: undefined,\r\n  getTopics: undefined,\r\n  page: undefined,\r\n};\r\n\r\nTopicEditingForm.propTypes = {\r\n  edetingText: PropTypes.string.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  fileList: PropTypes.arrayOf(fileProps).isRequired,\r\n  idTopic: PropTypes.number.isRequired,\r\n  idUser: PropTypes.number.isRequired,\r\n  commentId: PropTypes.number,\r\n  getTopics: PropTypes.func,\r\n  page: PropTypes.number,\r\n  updateComment: PropTypes.func,\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n    location: PropTypes.shape({\r\n      pathname: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, Dropdown, Icon, Modal, Button, message } from 'antd';\r\nimport context from '../Context';\r\nimport serverQueries from '../../serverQueries';\r\n\r\nconst AdminMenu = ({ user, updateUser }) => {\r\n  const {\r\n    isLogin,\r\n    user: { role },\r\n  } = useContext(context);\r\n\r\n  if (!isLogin || role !== 'ROLE_ADMIN') {\r\n    return null;\r\n  }\r\n\r\n  const handleBan = dt => () =>\r\n    serverQueries\r\n      .blackListRequest(user.id, Date.now() + dt)\r\n      .then(({ dateUnblock }) => {\r\n        const accountNonLocked = dateUnblock === null;\r\n        updateUser({ ...user, accountNonLocked });\r\n      })\r\n      .catch(() => message.error('Похоже, что-то не так. Заблокировать не удалось.'));\r\n\r\n  const handleUnban = () => {\r\n    serverQueries\r\n      .unblockUser(user.id)\r\n      .then(({ dateUnblock }) => {\r\n        const accountNonLocked = dateUnblock === null;\r\n        updateUser({ ...user, accountNonLocked });\r\n      })\r\n      .catch(() => message.error('Похоже, что-то не так. Разблокировать не удалось.'));\r\n  };\r\n\r\n  const openConfirm = (action, content) => () => {\r\n    Modal.confirm({\r\n      title: 'Confirmation',\r\n      content: (\r\n        <div>\r\n          Вы хотите подтвердить действие: <b>{content}</b> для пользователя: <b>{user.nickName}</b>\r\n        </div>\r\n      ),\r\n      onOk: action,\r\n    });\r\n  };\r\n\r\n  const oneHour = 60 * 60 * 1000;\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item onClick={openConfirm(handleBan(24 * oneHour), 'бан на 24 часа')}>\r\n        бан на 24 часа\r\n      </Menu.Item>\r\n      <Menu.Item onClick={openConfirm(handleBan(7 * 24 * oneHour), 'бан на 7 дней')}>\r\n        бан на 7 дней\r\n      </Menu.Item>\r\n      <Menu.Item onClick={openConfirm(handleBan(9999 * 24 * oneHour), 'перманентный бан')}>\r\n        перманентный бан\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return user.accountNonLocked ? (\r\n    <Dropdown overlay={menu} trigger={['click']}>\r\n      <Button className=\"ant-dropdown-link\">\r\n        Доп. действия\r\n        <Icon type=\"down\" />\r\n      </Button>\r\n    </Dropdown>\r\n  ) : (\r\n    <Button onClick={openConfirm(handleUnban, 'unban')}>Разблокировать</Button>\r\n  );\r\n};\r\n\r\nAdminMenu.propTypes = {\r\n  user: PropTypes.instanceOf(Object).isRequired,\r\n  updateUser: PropTypes.func,\r\n};\r\n\r\nAdminMenu.defaultProps = {\r\n  updateUser: () => {},\r\n};\r\n\r\nexport default AdminMenu;\r\n","import React from 'react';\r\nimport { Col, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatDistanceToNow, parseISO } from 'date-fns';\r\nimport ru from 'date-fns/locale/ru';\r\nimport { StyledTopicUserInfo, UserInfoLeft } from './styled';\r\nimport userProps from './propTypes/userProps';\r\nimport AdminMenu from '../AdminMenu';\r\nimport { mapRoleToString } from '../../utils';\r\n\r\nconst TopicUserInfo = ({ user }) => {\r\n  return (\r\n    <StyledTopicUserInfo type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n      <UserInfoLeft>\r\n        <h3>\r\n          <Link to={`/profile/${user.nickName}`}>{user.nickName}</Link>\r\n        </h3>\r\n        <p>{`${user.firstName} ${user.lastName}`}</p>\r\n      </UserInfoLeft>\r\n      <Col>\r\n        <p>\r\n          <Icon type=\"user\" /> {mapRoleToString(user.role.role)}\r\n        </p>\r\n        {user.messageCount && (\r\n          <p>\r\n            <Icon type=\"message\" /> {user.messageCount}\r\n          </p>\r\n        )}\r\n        <p>\r\n          <Icon type=\"clock-circle\" />{' '}\r\n          {user.regDate\r\n            ? `С нами ${formatDistanceToNow(parseISO(user.regDate), { locale: ru })}`\r\n            : 'Неизвестно'}\r\n        </p>\r\n        <p>\r\n          <AdminMenu user={user} />\r\n        </p>\r\n      </Col>\r\n    </StyledTopicUserInfo>\r\n  );\r\n};\r\n\r\nTopicUserInfo.propTypes = {\r\n  user: userProps.isRequired,\r\n};\r\n\r\nexport default TopicUserInfo;\r\n","import React, { useContext } from 'react';\r\nimport { Avatar } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { BASE_IMG_URL, DEFAULT_AVATAR_PICTURE } from '../../constants';\r\nimport Context from '../Context';\r\n\r\nconst UserAvatar = ({ src, ...rest }) => {\r\n  const { isLogin } = useContext(Context);\r\n  const imgSrc = isLogin && src ? `${BASE_IMG_URL}${src}` : `${DEFAULT_AVATAR_PICTURE}`;\r\n  return <Avatar src={imgSrc} {...rest} />;\r\n};\r\n\r\nUserAvatar.defaultProps = {\r\n  src: null,\r\n};\r\n\r\nUserAvatar.propTypes = {\r\n  src: PropTypes.string,\r\n};\r\n\r\nexport default UserAvatar;\r\n","import React from 'react';\r\nimport { Comment, Popover, Tooltip } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { dataToFormatedDate, dateToDateDistance } from '../../utils';\r\nimport { ListItem } from './styled';\r\nimport TopicUserInfo from './TopicUserInfo';\r\nimport TopicPhotoList from './TopicPhotoList';\r\nimport fileProps from './propTypes/fileProps';\r\nimport commentProps from './propTypes/commentProps';\r\nimport UserAvatar from '../commons/UserAvatar';\r\n\r\nconst TopicCommentListItem = ({\r\n  comment,\r\n  withActions,\r\n  toggleEdeting,\r\n  convertedImages,\r\n  commentActions,\r\n  contentEditingForm,\r\n  contentCommentText,\r\n  contentReplyText,\r\n}) => {\r\n  const commentDateTooltipString = comment.commentUpdateTime\r\n    ? `Создан ${dataToFormatedDate(comment.commentDateTime)}, отредактирован ${dataToFormatedDate(\r\n        comment.commentUpdateTime\r\n      )}`\r\n    : `Создан ${dataToFormatedDate(comment.commentDateTime)}`;\r\n  const commentDateString = comment.commentUpdateTime\r\n    ? `Создан ${dateToDateDistance(\r\n        comment.commentDateTime,\r\n        true\r\n      )}, отредактирован ${dateToDateDistance(comment.commentUpdateTime, true)}`\r\n    : `Создан ${dateToDateDistance(comment.commentDateTime, true)}`;\r\n\r\n  return (\r\n    <ListItem id={comment.positionInTopic}>\r\n      <Comment\r\n        actions={withActions ? commentActions : null}\r\n        author={\r\n          !contentReplyText ? (\r\n            comment.author.nickName\r\n          ) : (\r\n            <span>\r\n              {comment.author.nickName} {contentReplyText}\r\n            </span>\r\n          )\r\n        }\r\n        avatar={\r\n          <Popover\r\n            content={\r\n              <TopicUserInfo user={{ ...comment.author, messageCount: comment.messageCount }} />\r\n            }\r\n            placement=\"right\"\r\n          >\r\n            <UserAvatar src={comment.author.avatar.small} />\r\n          </Popover>\r\n        }\r\n        content={toggleEdeting ? contentEditingForm : contentCommentText}\r\n        datetime={\r\n          <Tooltip title={commentDateTooltipString}>\r\n            <span>{commentDateString}</span>\r\n          </Tooltip>\r\n        }\r\n      />\r\n      {convertedImages && !toggleEdeting && <TopicPhotoList fileList={convertedImages} />}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default TopicCommentListItem;\r\n\r\nTopicCommentListItem.defaultProps = {\r\n  withActions: false,\r\n  convertedImages: null,\r\n  contentReplyText: null,\r\n};\r\n\r\nTopicCommentListItem.propTypes = {\r\n  withActions: PropTypes.bool,\r\n  toggleEdeting: PropTypes.bool.isRequired,\r\n  commentActions: PropTypes.node.isRequired,\r\n  contentEditingForm: PropTypes.node.isRequired,\r\n  contentCommentText: PropTypes.node.isRequired,\r\n  convertedImages: PropTypes.arrayOf(fileProps),\r\n  comment: commentProps.isRequired,\r\n  contentReplyText: PropTypes.node,\r\n};\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport React from 'react';\r\nimport { Popover, Tooltip, Icon } from 'antd';\r\nimport { parseISO, formatDistanceToNow } from 'date-fns';\r\nimport ru from 'date-fns/locale/ru';\r\nimport PropTypes from 'prop-types';\r\nimport { Markup } from 'interweave';\r\nimport { ReplyTag, DeletedMessageText } from './styled';\r\nimport TopicEditingForm from './TopicEditingForm';\r\nimport commentProps from './propTypes/commentProps';\r\nimport TopicCommentListItem from './TopicCommentListItem';\r\nimport Context from '../Context';\r\nimport { userRoles, SECURED_ALBUM_URL, DEFAULT_COMMENT_PICTURE } from '../../constants';\r\n\r\nconst IconText = ({ type, onHandleClick, title }) => (\r\n  <Tooltip placement=\"topRight\" title={title}>\r\n    <span onClick={onHandleClick}>\r\n      <Icon type={type} theme=\"twoTone\" />\r\n    </span>\r\n  </Tooltip>\r\n);\r\n\r\nclass TopicCommentItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggleEdeting: false,\r\n      withActions: true,\r\n    };\r\n  }\r\n\r\n  handleClickEditBtn = () => {\r\n    this.setState({ toggleEdeting: true, withActions: false });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ toggleEdeting: false, withActions: true });\r\n  };\r\n\r\n  showFieldOrNot() {\r\n    const { user } = this.context;\r\n    const { comment } = this.props;\r\n    if (comment.deleted) {\r\n      return false;\r\n    }\r\n    return (\r\n      (user.id === comment.author.id && comment.updatable === true) ||\r\n      user.role === userRoles.admin ||\r\n      user.role === userRoles.moderator\r\n    );\r\n  }\r\n\r\n  showReplyLinkOrNot() {\r\n    const { comment } = this.props;\r\n    return !comment.deleted;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      comment,\r\n      handleQuoteComment,\r\n      deleteComment,\r\n      getTopics,\r\n      page,\r\n      updateComment,\r\n    } = this.props;\r\n    const { withActions, toggleEdeting } = this.state;\r\n    const { isLogin } = this.context;\r\n    const convertedImages = comment.photos.map(photo => {\r\n      const url = isLogin\r\n        ? `${SECURED_ALBUM_URL}${photo.id}?type=small`\r\n        : `${DEFAULT_COMMENT_PICTURE}`;\r\n      return {\r\n        uid: `-${String(photo.id)}`,\r\n        url,\r\n        name: `Photo_name_${photo.description}`,\r\n        status: 'done',\r\n      };\r\n    });\r\n\r\n    const commentActions = [\r\n      <span key=\"comment-basic-position\">#{comment.positionInTopic}</span>,\r\n      this.showReplyLinkOrNot() ? (\r\n        <span\r\n          key=\"comment-basic-reply-to\"\r\n          onClick={handleQuoteComment(comment)}\r\n          onKeyPress={handleQuoteComment(comment)}\r\n          role=\"button\"\r\n          tabIndex=\"0\"\r\n        >\r\n          Ответить на сообщение {comment.author.nickName}\r\n        </span>\r\n      ) : null,\r\n      this.showFieldOrNot() ? (\r\n        <IconText type=\"edit\" onHandleClick={this.handleClickEditBtn} title=\"Редактировать\" />\r\n      ) : null,\r\n      this.showFieldOrNot() ? (\r\n        <IconText\r\n          type=\"delete\"\r\n          onHandleClick={() => {\r\n            deleteComment(comment.commentId);\r\n          }}\r\n          title=\"Удалить\"\r\n        />\r\n      ) : null,\r\n    ];\r\n\r\n    const contentCommentText = comment.deleted ? (\r\n      <DeletedMessageText type=\"secondary\">\r\n        <Markup content={comment.commentText} />\r\n      </DeletedMessageText>\r\n    ) : (\r\n      <Markup content={comment.commentText} />\r\n    );\r\n\r\n    const contentReplyText = comment.replyNick ? (\r\n      <Popover\r\n        content={<Markup content={comment.replyText} />}\r\n        title={`${comment.replyNick}, ${formatDistanceToNow(parseISO(comment.replyDateTime), {\r\n          locale: ru,\r\n          addSuffix: true,\r\n        })}`}\r\n        placement=\"topLeft\"\r\n      >\r\n        <ReplyTag green>\r\n          ответил на комментарий <strong>{comment.replyNick}</strong>\r\n        </ReplyTag>\r\n      </Popover>\r\n    ) : null;\r\n\r\n    const contentEditingForm = (\r\n      <TopicEditingForm\r\n        edetingText={comment.commentText}\r\n        fileList={convertedImages}\r\n        handleCancel={this.handleCancel}\r\n        idTopic={comment.topicId}\r\n        idUser={comment.author.id}\r\n        commentId={comment.commentId}\r\n        getTopics={getTopics}\r\n        updateComment={updateComment}\r\n        page={page}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <TopicCommentListItem\r\n        comment={comment}\r\n        withActions={withActions}\r\n        toggleEdeting={toggleEdeting}\r\n        convertedImages={convertedImages}\r\n        commentActions={commentActions}\r\n        contentCommentText={contentCommentText}\r\n        contentEditingForm={contentEditingForm}\r\n        contentReplyText={contentReplyText}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nTopicCommentItem.contextType = Context;\r\n\r\nIconText.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  onHandleClick: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nTopicCommentItem.propTypes = {\r\n  comment: commentProps.isRequired,\r\n  handleQuoteComment: PropTypes.func,\r\n  deleteComment: PropTypes.func,\r\n  getTopics: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  updateComment: PropTypes.func,\r\n};\r\n\r\nTopicCommentItem.defaultProps = {\r\n  handleQuoteComment: () => {},\r\n  deleteComment: () => {},\r\n  updateComment: undefined,\r\n};\r\n\r\nexport default TopicCommentItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const TopicContainer = styled.div`\r\n  margin: 20px 0 40px 0;\r\n`;\r\n\r\nexport const TopicHeaderWrapp = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const TopicHeaderHeading = styled.p`\r\n  color: #868c98;\r\n  font-size: 25px;\r\n  margin: 0;\r\n  font-weight: 500;\r\n`;\r\nexport const TopicHeaderTitle = styled.h2`\r\n  color: #000;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  flex-grow: 1;\r\n  margin-right: 1em;\r\n`;\r\n\r\nexport const TopicHeaderDate = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const TopicHeaderSpan = styled.span`\r\n  color: #a0abbd;\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const TopicHeaderAuthorWrapp = styled.div`\r\n  padding: 15px 0;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const TopicHeaderAuthorWrappCol = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const TopicHeaderAuthorNickName = styled.span`\r\n  display: block;\r\n  color: #333;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const TopicHeaderAuthorAuthor = styled.span`\r\n  display: block;\r\n  font-size: 20px;\r\n  color: #a0abbd;\r\n`;\r\n\r\nexport const TopicHeaderDefaultMessage = styled.p`\r\n  color: #000;\r\n  margin-top: 20px;\r\n  font-size: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { parseISO, format } from 'date-fns';\r\nimport ru from 'date-fns/locale/ru';\r\nimport PropTypes from 'prop-types';\r\nimport PropTypesUser from './propTypes/userProps';\r\nimport UserAvatar from '../commons/UserAvatar';\r\nimport {\r\n  TopicContainer,\r\n  TopicHeaderWrapp,\r\n  TopicHeaderTitle,\r\n  TopicHeaderDate,\r\n  TopicHeaderAuthorWrapp,\r\n  TopicHeaderAuthorWrappCol,\r\n  TopicHeaderAuthorNickName,\r\n  TopicHeaderDefaultMessage,\r\n} from './TopicHeaderStyled';\r\n\r\nconst TopicStartMessage = ({ topic }) => {\r\n  return (\r\n    <TopicContainer>\r\n      <TopicHeaderWrapp>\r\n        <TopicHeaderTitle>{topic.name}</TopicHeaderTitle>\r\n        <TopicHeaderAuthorWrapp>\r\n          <TopicHeaderAuthorWrappCol>\r\n            <UserAvatar\r\n              shape=\"square\"\r\n              size={48}\r\n              icon=\"user\"\r\n              src={topic.topicStarter.avatar.small}\r\n            />\r\n          </TopicHeaderAuthorWrappCol>\r\n          <TopicHeaderAuthorWrappCol>\r\n            <TopicHeaderAuthorNickName>{topic.topicStarter.nickName}</TopicHeaderAuthorNickName>\r\n            <TopicHeaderDate>\r\n              {format(parseISO(topic.startTime), \"dd MMMM yyyy 'в' HH:mm\", {\r\n                locale: ru,\r\n              })}\r\n            </TopicHeaderDate>\r\n          </TopicHeaderAuthorWrappCol>\r\n        </TopicHeaderAuthorWrapp>\r\n      </TopicHeaderWrapp>\r\n      <TopicHeaderDefaultMessage>{topic.startMessage}</TopicHeaderDefaultMessage>\r\n    </TopicContainer>\r\n  );\r\n};\r\n\r\nTopicStartMessage.propTypes = {\r\n  topic: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    messageCount: PropTypes.number,\r\n    startTime: PropTypes.string,\r\n    lastMessageTime: PropTypes.string,\r\n    startMessage: PropTypes.string,\r\n    topicStarter: PropTypesUser.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default TopicStartMessage;\r\n","import React from 'react';\r\nimport queries from '../../serverQueries';\r\n\r\nconst withGetUserProfile = WrapperComponent => {\r\n  return class extends React.Component {\r\n    state = {\r\n      userProfile: {},\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.getUserPrpfile();\r\n    }\r\n\r\n    getUserPrpfile = async () => {\r\n      try {\r\n        const userProfile = await queries.getUserProfileData();\r\n        this.setState({ userProfile });\r\n      } catch {\r\n        this.setState({ userProfile: {} });\r\n      }\r\n    };\r\n\r\n    render() {\r\n      const { userProfile } = this.state;\r\n      return <WrapperComponent {...this.props} userProfile={userProfile} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default withGetUserProfile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb, message, notification, Spin, Typography, Button, Result } from 'antd';\r\n// import styled from 'styled-components';\r\nimport Comment from 'antd/es/comment';\r\nimport { Markup } from 'interweave';\r\nimport TopicCommentsList from './TopicCommentsList';\r\nimport queries from '../../serverQueries';\r\nimport { GoldIcon, ReplyFloatButton, TopicCommentReplyAlert, TopicReplyWarning } from './styled';\r\nimport TopicReplyForm from './TopicReplyForm';\r\nimport TopicCommentItem from './TopicCommentItem';\r\nimport TopicStartMessage from './TopicStartMessage';\r\nimport Context from '../Context';\r\nimport withGetUserProfile from '../hoc/withGetUserProfile';\r\nimport UserAvatar from '../commons/UserAvatar';\r\n\r\nconst { Text } = Typography;\r\n\r\n// const CloseModalButton = styled(Button)`\r\n// position:absolute;\r\n// top:20px;\r\n// padding:5px\r\n// right:20px;\r\n// width:44px;\r\n// opacity: 0.7;\r\n// z-index: 1;\r\n// `;\r\n\r\nclass TopicPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { location } = this.props;\r\n    const query = new URLSearchParams(location.search);\r\n    this.state = {\r\n      topic: null,\r\n      messages: [],\r\n      page: query.get('page') || 1,\r\n      reply: null,\r\n      answerId: null,\r\n      files: [],\r\n      uploading: false,\r\n      lightboxIsOpen: false,\r\n      error: false,\r\n    };\r\n    this.replyForm = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { page } = this.state;\r\n    this.getTopics(parseInt(page, 10));\r\n  }\r\n\r\n  getTopics = page => {\r\n    // Get a topic and a list of comments for this topic by topic id\r\n    const { match } = this.props;\r\n    if (page === 1) {\r\n      queries\r\n        .getTopic(match.params.topicId, 0, 10)\r\n        .then(({ topic, commentDto, subscribed }) => {\r\n          this.setState({\r\n            topic: { ...topic, isSubscribed: subscribed },\r\n            page,\r\n            messages: commentDto ? commentDto.content : null,\r\n            error: false,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({ error: true });\r\n        });\r\n    } else {\r\n      queries\r\n        .getTopic(match.params.topicId, page - 1, 10)\r\n        .then(({ topic, commentDto, subscribed }) => {\r\n          this.setState({\r\n            topic: { ...topic, isSubscribed: subscribed },\r\n            page,\r\n            messages: commentDto ? commentDto.content : null,\r\n            error: false,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({ error: true });\r\n        });\r\n    }\r\n  };\r\n\r\n  changePageHandler = page => {\r\n    const { history } = this.props;\r\n    history.push(`${history.location.pathname}?page=${page}`);\r\n    this.getTopics(page);\r\n  };\r\n\r\n  replyButtonHandler = () => {\r\n    this.replyForm.focus();\r\n  };\r\n\r\n  handleQuoteComment = comment => () => {\r\n    const { isLogin } = this.context;\r\n    if (isLogin) {\r\n      this.replyForm.focus();\r\n      this.setState({\r\n        reply: {\r\n          replyDateTime: comment.commentDateTime,\r\n          replyNick: comment.author.nickName,\r\n          replyText: comment.commentText,\r\n        },\r\n        answerId: comment.commentId,\r\n      });\r\n    } else {\r\n      this.openNotification();\r\n    }\r\n  };\r\n\r\n  handleSubmitComment = async (messageText, resetForm) => {\r\n    if (messageText === '') {\r\n      notification.open({\r\n        message: 'Сообщение не может быть пустым',\r\n        description: 'Максимальное количество символов 500000',\r\n        icon: <GoldIcon type=\"warning\" />,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ uploading: true });\r\n    const { topic, answerId, files } = this.state;\r\n    const { user } = this.context;\r\n    const { history } = this.props;\r\n    const messageComentsEntity = {\r\n      idTopic: topic.id,\r\n      idUser: user.id,\r\n      text: messageText.trim(),\r\n    };\r\n\r\n    if (answerId) {\r\n      messageComentsEntity.answerID = answerId;\r\n    }\r\n\r\n    [messageComentsEntity.image1, messageComentsEntity.image2] = files;\r\n    try {\r\n      await queries.addComment(messageComentsEntity);\r\n      const lastPage = Math.floor(topic.messageCount / 10 + 1);\r\n      history.push(`${history.location.pathname}?page=${lastPage}`);\r\n      this.getTopics(lastPage);\r\n      message.success('Ваше сообщение успешно добавлено');\r\n      this.setState({ reply: null, answerId: null, files: [], uploading: false });\r\n      resetForm();\r\n    } catch {\r\n      message.error('Похоже, что-то не так. Сообщение добавить не удалось.');\r\n      this.setState({ uploading: false });\r\n    }\r\n  };\r\n\r\n  handleDeleteComment = commentId => {\r\n    const { page, messages } = this.state;\r\n    const { history } = this.props;\r\n\r\n    if (messages.length === 1 && page === 1) {\r\n      history.push(`${history.location.pathname}?page=${page}`);\r\n      queries\r\n        .deleteComment(commentId)\r\n        .then(() => {\r\n          history.push(`${history.location.pathname}?page=${page}`);\r\n          this.getTopics(page);\r\n          message.success('Сообщение удалено');\r\n        })\r\n        .catch(() => {\r\n          message.error('Похоже, что-то не так. Сообщение удалить не удалось.');\r\n        });\r\n      return;\r\n    }\r\n\r\n    if (messages.length === 1 && page > 1) {\r\n      queries\r\n        .deleteComment(commentId)\r\n        .then(() => {\r\n          history.push(`${history.location.pathname}?page=${page - 1}`);\r\n          this.getTopics(page - 1);\r\n          message.success('Сообщение удалено');\r\n        })\r\n        .catch(() => {\r\n          message.error('Похоже, что-то не так. Сообщение удалить не удалось.');\r\n        });\r\n      return;\r\n    }\r\n\r\n    queries\r\n      .deleteComment(commentId)\r\n      .then(() => {\r\n        history.push(`${history.location.pathname}?page=${page}`);\r\n        this.getTopics(page);\r\n        message.success('Сообщение удалено');\r\n      })\r\n      .catch(() => {\r\n        message.error('Похоже, что-то не так. Сообщение удалить не удалось.');\r\n      });\r\n  };\r\n\r\n  openNotification = () => {\r\n    notification.open({\r\n      message: 'Требуется авторизация',\r\n      description: 'Только зарегистрированные пользователи могут оставлять комментарии.',\r\n      icon: <GoldIcon type=\"warning\" />,\r\n    });\r\n  };\r\n\r\n  handleCancelReply = () => {\r\n    this.setState({ reply: null, answerId: null });\r\n  };\r\n\r\n  handleAddFile = info => {\r\n    this.setState({ files: info.fileList });\r\n    if (info.file.status !== 'removed') {\r\n      message.success(`Файл ${info.file.name} успешно добавлен`);\r\n    }\r\n  };\r\n\r\n  toggleLightbox = () => {\r\n    this.setState(state => ({\r\n      lightboxIsOpen: !state.lightboxIsOpen,\r\n    }));\r\n  };\r\n\r\n  toggleSubscriptionStatus = () => {\r\n    const {\r\n      topic: { id: topicId, isSubscribed },\r\n    } = this.state;\r\n    const setSubscriptionState = newSubscriptionState => {\r\n      this.setState(({ topic }) => ({\r\n        topic: {\r\n          ...topic,\r\n          isSubscribed: newSubscriptionState,\r\n        },\r\n      }));\r\n    };\r\n    const addSubscription = () => {\r\n      queries.addTopicToSubscriptions(topicId).catch(() => {\r\n        setSubscriptionState(false);\r\n        message.error('Что-то пошло не так, топик не добавлен');\r\n      });\r\n    };\r\n    const deleteSubscription = () => {\r\n      queries.deleteTopicFromSubscriptions(topicId).catch(() => {\r\n        setSubscriptionState(true);\r\n        message.error('Что-то пошло не так, топик не удален');\r\n      });\r\n    };\r\n    setSubscriptionState(!isSubscribed);\r\n    if (!isSubscribed) {\r\n      addSubscription();\r\n    } else {\r\n      deleteSubscription();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { messages, topic, page, reply, files, uploading, error } = this.state;\r\n    const { userProfile } = this.props;\r\n    const { isLogin } = this.context;\r\n    const avatar = userProfile.avatar ? (\r\n      <UserAvatar src={userProfile.avatar} alt=\"User Avatar\" />\r\n    ) : null;\r\n    return error ? (\r\n      <Result\r\n        status=\"403\"\r\n        title=\"403\"\r\n        subTitle=\"Извините, вы не авторизованы для доступа к этой странице.\"\r\n        extra={\r\n          <Button type=\"primary\">\r\n            <Link to=\"/login\">Авторизироваться</Link>\r\n          </Button>\r\n        }\r\n      />\r\n    ) : (\r\n      <div>\r\n        {topic ? (\r\n          <div>\r\n            <Breadcrumb>\r\n              <Breadcrumb.Item>\r\n                <Link to=\"/\">Главная</Link>\r\n              </Breadcrumb.Item>\r\n              <Breadcrumb.Item>\r\n                <Link to={`/section/${topic.section.id}`}>{topic.section.name}</Link>\r\n              </Breadcrumb.Item>\r\n              <Breadcrumb.Item>\r\n                <Link to={`/subsection/${topic.subsection.id}`}>{topic.subsection.name}</Link>\r\n              </Breadcrumb.Item>\r\n              <Breadcrumb.Item>\r\n                <Link to={`/topic/${topic.id}`}>{topic.name}</Link>\r\n              </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <TopicStartMessage topic={topic} toggleLightbox={this.toggleLightbox} />\r\n            <Button onClick={this.toggleSubscriptionStatus}>\r\n              {topic.isSubscribed ? 'Unsubscribe' : 'Subscribe'}\r\n            </Button>\r\n            <TopicCommentsList\r\n              changePageHandler={this.changePageHandler}\r\n              messages={messages}\r\n              itemComponent={item => (\r\n                <TopicCommentItem\r\n                  comment={item}\r\n                  handleQuoteComment={this.handleQuoteComment}\r\n                  deleteComment={this.handleDeleteComment}\r\n                  getTopics={this.getTopics}\r\n                  page={page}\r\n                />\r\n              )}\r\n              total={topic.messageCount}\r\n              page={page}\r\n              replyButtonHandler={this.replyButtonHandler}\r\n              openNotification={this.openNotification}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Spin />\r\n        )}\r\n        {reply && (\r\n          <TopicCommentReplyAlert\r\n            type=\"success\"\r\n            closeText=\"Отменить комментирование\"\r\n            onClose={this.handleCancelReply}\r\n            message={\r\n              <>\r\n                <span>\r\n                  Ответ на сообщение пользователя <Text strong>{reply.replyNick}</Text>\r\n                </span>\r\n                <Markup content={reply.replyText} />\r\n              </>\r\n            }\r\n          />\r\n        )}\r\n        {isLogin ? (\r\n          <Comment\r\n            avatar={avatar}\r\n            content={\r\n              <TopicReplyForm\r\n                replyRef={element => {\r\n                  this.replyForm = element;\r\n                }}\r\n                handleSubmitComment={this.handleSubmitComment}\r\n                handleAddFile={this.handleAddFile}\r\n                files={files}\r\n                uploading={uploading}\r\n              />\r\n            }\r\n          />\r\n        ) : (\r\n          <TopicReplyWarning>\r\n            Для возможности добавлять комментарии необходимо{' '}\r\n            <Link to=\"/login\">авторизироваться</Link>.\r\n          </TopicReplyWarning>\r\n        )}\r\n        <ReplyFloatButton\r\n          type=\"primary\"\r\n          icon=\"message\"\r\n          onClick={isLogin ? this.replyButtonHandler : this.openNotification}\r\n        >\r\n          Ответить\r\n        </ReplyFloatButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopicPage.defaultProps = {\r\n  userProfile: {},\r\n};\r\n\r\nTopicPage.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.objectOf(PropTypes.string),\r\n  }).isRequired,\r\n  location: PropTypes.shape({\r\n    search: PropTypes.string,\r\n  }).isRequired,\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n    location: PropTypes.shape({\r\n      pathname: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n  userProfile: PropTypes.shape({\r\n    userId: PropTypes.number,\r\n    nickName: PropTypes.string,\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    email: PropTypes.string,\r\n    city: PropTypes.string,\r\n    country: PropTypes.string,\r\n    birthday: PropTypes.string,\r\n    gender: PropTypes.string,\r\n    phoneNumber: PropTypes.string,\r\n    socialFb: PropTypes.string,\r\n    socialTw: PropTypes.string,\r\n    socialVk: PropTypes.string,\r\n    aboutMe: PropTypes.string,\r\n    regDate: PropTypes.string,\r\n    messageCount: PropTypes.number,\r\n    topicStartCount: PropTypes.number,\r\n    lastComment: PropTypes.string,\r\n    lastVisit: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    owner: PropTypes.bool,\r\n    user: PropTypes.bool,\r\n  }),\r\n};\r\n\r\nTopicPage.contextType = Context;\r\n\r\nexport default withGetUserProfile(withRouter(TopicPage));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport propTypes from 'prop-types';\r\nimport { Upload, Button, Icon, Row } from 'antd';\r\nimport queries from '../../serverQueries';\r\nimport { BASE_URL } from '../../constants';\r\n\r\nconst url = `${BASE_URL}api/`;\r\nconst photoTempUrl = `${url}securedPhoto/photoFromAlbum/`;\r\n\r\nconst ModalOverlay = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n  background: white;\r\n  opacity: 0.9;\r\n  padding: 130px 100px;\r\n  display: ${props => (props.hidden ? 'hidden' : 'block')};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  position: relative;\r\n  padding: 10px;\r\n  padding-top: 42px;\r\n  margin: 0 auto;\r\n  width: 500px;\r\n  border: 1px solid black;\r\n  background: white;\r\n  opacity: 1;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Gallery = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 10px auto;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst CloseModalButton = styled(Button)`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n`;\r\n\r\nconst BGImage = styled.img`\r\n  object-fit: cover;\r\n  object-position: top center;\r\n  width: 148px;\r\n  height: 100px;\r\n`;\r\n\r\nconst AlbumCard = styled.div`\r\n  position: relative;\r\n  width: 152px;\r\n  border: ${props => (props.selected ? '2px solid #1890ff' : '2px solid black')};\r\n  background-size: cover;\r\n  margin: 2px;\r\n`;\r\n\r\nconst AlbumShadow = styled.div`\r\n    color: #fff;\r\n    box-sizing: border-box;\r\n    position: absolute; \r\n    bottom: 0;\r\n    width: 100%;\r\n    padding: 35px 12px 9px;\r\n    background: url(/shadow.png);\r\n}`;\r\n\r\nconst AlbumTitle = styled.span`\r\n  word-break: break-all;\r\n  position: absolute;\r\n  bottom: 0;\r\n  padding: 10px;\r\n  left: 0;\r\n  color: #fff;\r\n`;\r\n\r\nconst PhotoCounter = styled.span`\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  padding: 10px;\r\n  color: #fff;\r\n`;\r\n\r\nconst ImageCard = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 152px;\r\n  border: 2px solid black;\r\n  background-size: cover;\r\n  margin: 2px;\r\n`;\r\n\r\nconst ChoosePhotoButton = styled(Button)`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n`;\r\n\r\nclass TopicAddFileModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      albums: [],\r\n      fileList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadAlbums();\r\n  }\r\n\r\n  loadAlbums = async () => {\r\n    const allAlbums = await queries.getAlbums();\r\n    const promises = allAlbums.map(album => {\r\n      return queries.getPhotosFromAlbum(album.id).then(data => {\r\n        const images = data.map(image => ({\r\n          src: `${photoTempUrl}${image.id}?type=original`,\r\n          id: image.id,\r\n        }));\r\n        return { ...album, selected: false, images };\r\n      });\r\n    });\r\n    Promise.all(promises).then(albums => {\r\n      this.setState({ albums });\r\n    });\r\n  };\r\n\r\n  toggleFullAlbum = id => async () => {\r\n    const { albums } = this.state;\r\n    const newAlbums = albums.map(item => {\r\n      if (item.id === id) {\r\n        return { ...item, selected: !item.selected };\r\n      }\r\n      return { ...item, selected: false };\r\n    });\r\n    this.setState({ albums: newAlbums });\r\n  };\r\n\r\n  handleUpload = async () => {\r\n    const { fileList } = this.state;\r\n    const { setFileList } = this.props;\r\n    const formData = new FormData();\r\n\r\n    fileList.forEach(file => {\r\n      formData.append('photos', file);\r\n    });\r\n    // Необходимо добавить функционал загрузки изображений\r\n    // в топик по id на бэкенде\r\n    // http://localhost:8888/api/securedPhoto/photoFromAlbum/id'\r\n\r\n    setFileList(formData);\r\n  };\r\n\r\n  render() {\r\n    const { fileList, albums } = this.state;\r\n    const { handleCloseModal, toggleImageToUpload, imagesToUpload } = this.props;\r\n\r\n    const selectedAlbum = albums.find(album => album.selected);\r\n    const uploadProps = {\r\n      accept: '.jpg, .jpeg, .png',\r\n      multiple: true,\r\n      onRemove: file => {\r\n        const index = fileList.indexOf(file);\r\n        const newFileList = fileList.slice();\r\n        newFileList.splice(index, 1);\r\n        this.setState({\r\n          fileList: newFileList,\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [...state.fileList, file],\r\n        }));\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n    return (\r\n      <>\r\n        <Form>\r\n          <CloseModalButton onClick={handleCloseModal(false)}>\r\n            <Icon type=\"close\" />\r\n          </CloseModalButton>\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Upload {...uploadProps}>\r\n              <Button>\r\n                <Icon type=\"upload\" />\r\n                <span>Перетащите сюда или выберите фотографии</span>\r\n              </Button>\r\n            </Upload>\r\n          </Row>\r\n          <Gallery>\r\n            {albums.map(album => (\r\n              <AlbumCard\r\n                key={album.id}\r\n                onClick={this.toggleFullAlbum(album.id)}\r\n                selected={selectedAlbum && album.id === selectedAlbum.id}\r\n              >\r\n                <BGImage\r\n                  src={\r\n                    album.originalThumbImage === 'thumb_image_placeholder'\r\n                      ? '/defaultAlbumPicture.jpg'\r\n                      : `${url}img/chat/${album.originalThumbImage}`\r\n                  }\r\n                />\r\n                <AlbumShadow>\r\n                  <AlbumTitle>{album.title}</AlbumTitle>\r\n                  <PhotoCounter>{album.photosCounter}</PhotoCounter>\r\n                </AlbumShadow>\r\n              </AlbumCard>\r\n            ))}\r\n          </Gallery>\r\n          {selectedAlbum ? (\r\n            <>\r\n              <Row type=\"flex\" justify=\"center\">\r\n                {selectedAlbum.images.length > 0 ? (\r\n                  <h4>Фотографии альбома:</h4>\r\n                ) : (\r\n                  <h4>Альбом пуст</h4>\r\n                )}\r\n              </Row>\r\n              <Gallery>\r\n                {selectedAlbum.images.map(image => (\r\n                  <ImageCard key={image.src}>\r\n                    <BGImage src={image.src} alt=\"user-image\" />\r\n                    <ChoosePhotoButton\r\n                      shape=\"circle\"\r\n                      icon={imagesToUpload.includes(image.id) ? 'check' : undefined}\r\n                      onClick={toggleImageToUpload(image.id)}\r\n                    />\r\n                  </ImageCard>\r\n                ))}\r\n              </Gallery>\r\n            </>\r\n          ) : null}\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.handleUpload}\r\n              disabled={fileList.length === 0 && imagesToUpload.length === 0}\r\n              style={{ marginBottom: 10 }}\r\n            >\r\n              Выбрать фотографии\r\n            </Button>\r\n          </Row>\r\n        </Form>\r\n        <ModalOverlay onClick={handleCloseModal(false)} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nTopicAddFileModal.propTypes = {\r\n  setFileList: propTypes.func.isRequired,\r\n  handleCloseModal: propTypes.func.isRequired,\r\n  toggleImageToUpload: propTypes.func.isRequired,\r\n  imagesToUpload: propTypes.arrayOf(propTypes.number).isRequired,\r\n};\r\n\r\nexport default TopicAddFileModal;\r\n","/* eslint react/prop-types: 0 */\r\n/* eslint no-restricted-syntax: 0 */\r\n/* eslint no-unused-vars: 0 */\r\nimport React from 'react';\r\nimport * as Yup from 'yup';\r\nimport styled from 'styled-components';\r\nimport { Button, Input, Select, Spin, Row } from 'antd';\r\nimport { withFormik, Field, Form } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport queries from '../../serverQueries';\r\nimport TopicAddFileModal from './TopicAddFileModal';\r\n\r\nconst StyledForm = styled(Form)`\r\n  margin: 0 auto;\r\n  width: 500px;\r\n  border: 1px solid #555;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst StyledField = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst StyledError = styled.span`\r\n  color: red;\r\n`;\r\n\r\nconst PrimaryButton = styled(Button)`\r\n  margin: 10px 10px 0 0;\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(3, 'Минимальная длина 3 символа')\r\n    .required('Заголовок обязателен для заполнения'),\r\n  startMessage: Yup.string()\r\n    .min(4, 'Минимальная длина 4 символа')\r\n    .required('Краткое описание обязательно для заполнения'),\r\n});\r\n\r\nclass TopicCreate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      children: [],\r\n      subsection: '',\r\n      isModal: false,\r\n      imagesToUpload: [],\r\n      fileList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const response = await queries.getAllSections();\r\n    const sections = response.map(item => item.section.name);\r\n    const data = {};\r\n    response.forEach(item => {\r\n      data[item.section.name] = item.subsections;\r\n    });\r\n\r\n    const subsectionsData = {};\r\n    Object.values(data).forEach(item => {\r\n      item.forEach(subsection => {\r\n        subsectionsData[subsection.name] = subsection;\r\n      });\r\n    });\r\n    this.sections = sections;\r\n    this.data = data;\r\n    this.subsectionsData = subsectionsData;\r\n    this.setState({\r\n      children: data[sections[0]],\r\n      subsection: data[sections[0]][0].name,\r\n    });\r\n  };\r\n\r\n  handleSectionChange = value => {\r\n    this.setState({\r\n      children: this.data[value],\r\n      subsection: this.data[value][0].name,\r\n    });\r\n  };\r\n\r\n  handleSubsectionChange = value => {\r\n    this.setState({\r\n      subsection: value,\r\n    });\r\n  };\r\n\r\n  toggleImageToUpload = id => () => {\r\n    const { imagesToUpload } = this.state;\r\n    if (imagesToUpload.indexOf(id) !== -1) {\r\n      imagesToUpload.splice(imagesToUpload.indexOf(id), 1);\r\n      this.setState({\r\n        imagesToUpload: [...imagesToUpload],\r\n      });\r\n    } else {\r\n      this.setState(state => ({\r\n        imagesToUpload: [...state.imagesToUpload, id],\r\n      }));\r\n    }\r\n  };\r\n\r\n  setFileList = formData => {\r\n    let count = 0;\r\n    for (const field of formData) {\r\n      count += 1;\r\n    }\r\n    this.setState({ fileList: formData, count, isModal: false });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { values, setValues } = this.props;\r\n    const { subsection, fileList } = this.state;\r\n    setValues({\r\n      ...values,\r\n      subsection,\r\n      subsectionsData: this.subsectionsData,\r\n      fileList,\r\n    });\r\n  };\r\n\r\n  handleToggleModal = bool => () => {\r\n    this.setState(state => ({\r\n      isModal: !state.isModal,\r\n      imagesToUpload: bool ? state.imagesToUpload : [],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { children, subsection, isModal, count, imagesToUpload } = this.state;\r\n    const { errors, touched, isSubmitting } = this.props;\r\n    return (\r\n      <>\r\n        {isModal ? (\r\n          <TopicAddFileModal\r\n            handleCloseModal={this.handleToggleModal}\r\n            setFileList={this.setFileList}\r\n            imagesToUpload={imagesToUpload}\r\n            toggleImageToUpload={this.toggleImageToUpload}\r\n          />\r\n        ) : null}\r\n\r\n        <StyledForm>\r\n          {children.length !== 0 ? (\r\n            <>\r\n              <StyledField>\r\n                <Field name=\"name\">\r\n                  {({ field }) => <Input {...field} placeholder=\"Заголовок\" type=\"text\" />}\r\n                </Field>\r\n                {touched.name && errors.name && (\r\n                  <StyledError className=\"error\">{errors.name}</StyledError>\r\n                )}\r\n              </StyledField>\r\n              <StyledField>\r\n                <Field name=\"startMessage\">\r\n                  {({ field }) => (\r\n                    <Input.TextArea {...field} rows=\"2\" placeholder=\"Сообщение\" type=\"text\" />\r\n                  )}\r\n                </Field>\r\n                {touched.startMessage && errors.startMessage && (\r\n                  <StyledError className=\"error\">{errors.startMessage}</StyledError>\r\n                )}\r\n              </StyledField>\r\n              <StyledField>\r\n                {this.data && (\r\n                  <>\r\n                    <Select defaultValue={this.sections[0]} onChange={this.handleSectionChange}>\r\n                      {this.sections.map(item => (\r\n                        <Select.Option key={item}>{item}</Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                    <Select value={subsection} onChange={this.handleSubsectionChange}>\r\n                      {children.map(subs => (\r\n                        <Select.Option key={subs.name}>{subs.name}</Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </>\r\n                )}\r\n              </StyledField>\r\n              <Row type=\"flex\" justify=\"center\">\r\n                <Button\r\n                  type={count > 0 ? 'dashed' : 'default'}\r\n                  onClick={this.handleToggleModal(true)}\r\n                >\r\n                  {count > 0 ? `Выбрано ${count} фото` : 'Добавить фото'}\r\n                </Button>\r\n              </Row>\r\n              <Row type=\"flex\" justify=\"center\">\r\n                <PrimaryButton\r\n                  htmlType=\"submit\"\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  Создать\r\n                </PrimaryButton>\r\n                <PrimaryButton className=\"home-button\">\r\n                  <Link to=\"/\">На главную</Link>\r\n                </PrimaryButton>\r\n              </Row>\r\n            </>\r\n          ) : (\r\n            <Spin />\r\n          )}\r\n        </StyledForm>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst formikTopicCreate = withFormik({\r\n  mapPropsToValues({ name, startMessage }) {\r\n    return {\r\n      name: name || '',\r\n      startMessage: startMessage || '',\r\n    };\r\n  },\r\n  validationSchema,\r\n  handleSubmit: async (values, { setSubmitting, resetForm, props }) => {\r\n    const { history } = props;\r\n    const { name, startMessage, subsection, subsectionsData, fileList } = values;\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('startMessage', startMessage);\r\n    formData.append('subsection', subsectionsData[subsection].id);\r\n    fileList.forEach(file => {\r\n      formData.append('photos', file);\r\n    });\r\n    const response = await queries.createNewTopic(formData);\r\n    if (response.status === 200) {\r\n      setSubmitting(false);\r\n      history.push(`/topic/${response.data.id}`);\r\n      resetForm();\r\n    }\r\n  },\r\n})(TopicCreate);\r\n\r\nexport default formikTopicCreate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport TopicPage from '../components/Topic/TopicPage';\r\nimport TopicCreate from '../components/Topic/TopicCreate';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst TopicRoute = ({ isLogin }) => (\r\n  <Switch>\r\n    <PrivateRoute isAllowed={isLogin} path=\"/topic/add\" component={TopicCreate} />\r\n    <Route exact path=\"/topic/:topicId\">\r\n      <TopicPage />\r\n    </Route>\r\n  </Switch>\r\n);\r\n\r\nTopicRoute.propTypes = {\r\n  isLogin: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TopicRoute;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport queries from '../../serverQueries';\r\nimport TopicsList from '../Subsection/TopicsList';\r\nimport TopicsListItem from '../Subsection/TopicsListItem';\r\nimport { StyledTitle } from '../Main/styled';\r\n\r\nclass SearchTopicsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topics: [],\r\n      // hasMore: true,\r\n      // page: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTopics(0).then(data => {\r\n      if (data) this.setState({ topics: data.topics });\r\n    });\r\n  }\r\n\r\n  getTopics = async page => {\r\n    const { match } = this.props;\r\n    return queries.searchByTopics(match.params.searchRequest, page);\r\n  };\r\n\r\n  render() {\r\n    const { topics } = this.state;\r\n    const {\r\n      match: {\r\n        params: { searchRequest },\r\n      },\r\n    } = this.props;\r\n    return topics.length > 0 ? (\r\n      <TopicsList\r\n        itemComponent={item => <TopicsListItem topicData={{ topic: item }} />}\r\n        items={topics}\r\n        title={`Результы поиска в темах по запросу ${searchRequest}`}\r\n      />\r\n    ) : (\r\n      <StyledTitle>\r\n        Нет результатов по запросу <i>{searchRequest}</i>\r\n      </StyledTitle>\r\n    );\r\n  }\r\n}\r\n\r\nSearchTopicsPage.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.objectOf(PropTypes.string),\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(SearchTopicsPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport TopicCommentItem from '../Topic/TopicCommentItem';\r\nimport commentProps from '../Topic/propTypes/commentProps';\r\nimport ClickableItemWrapper from '../Subsection/ClickableItemWrapper';\r\n\r\nconst SearchCommentsItem = ({ item, history }) => {\r\n  const commentClickHandler = () => {\r\n    history.push(`/topic/${item.topicId}#comment${item.positionInTopic}`);\r\n  };\r\n\r\n  return (\r\n    <ClickableItemWrapper clickHandler={commentClickHandler}>\r\n      <>\r\n        <h3>{item.topicName}</h3>\r\n        <TopicCommentItem comment={item} />\r\n      </>\r\n    </ClickableItemWrapper>\r\n  );\r\n};\r\n\r\nSearchCommentsItem.propTypes = {\r\n  item: commentProps.isRequired,\r\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default withRouter(SearchCommentsItem);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { message, Spin } from 'antd';\r\nimport queries from '../../serverQueries';\r\nimport TopicCommentsList from '../Topic/TopicCommentsList';\r\nimport SearchCommentsItem from './SearchCommentsItem';\r\nimport { StyledTitle } from '../Main/styled';\r\n\r\nclass SearchCommentsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      currentPage: 1,\r\n      totalMessagesCounter: null,\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTopics(1);\r\n  }\r\n\r\n  getTopics = async page => {\r\n    const { match } = this.props;\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      const res = await queries.searchByComments(match.params.searchRequest, page);\r\n      this.setState({\r\n        messages: res.commentDto,\r\n        totalMessagesCounter: res.countMessages,\r\n        currentPage: page,\r\n        isLoading: false,\r\n      });\r\n    } catch {\r\n      message.error('Похоже, что-то не так. Сообщения загрузить не удалось');\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  changePageHandler = page => {\r\n    this.getTopics(page);\r\n  };\r\n\r\n  markWord = (str, key) => {\r\n    const splitStr = str.split(key);\r\n    return `${splitStr[0]} <Text mark>${key}</Text>${splitStr[1]}`;\r\n  };\r\n\r\n  render() {\r\n    const { messages, currentPage, totalMessagesCounter, isLoading } = this.state;\r\n    const {\r\n      match: {\r\n        params: { searchRequest },\r\n      },\r\n    } = this.props;\r\n    const markedMessages = messages.map(curMessage => {\r\n      const markedComment = this.markWord(curMessage.commentText, searchRequest);\r\n      return { ...curMessage, commentText: markedComment };\r\n    });\r\n    if (isLoading) {\r\n      return <Spin />;\r\n    }\r\n    return messages.length > 0 ? (\r\n      <div>\r\n        <TopicCommentsList\r\n          changePageHandler={this.changePageHandler}\r\n          total={totalMessagesCounter}\r\n          page={currentPage}\r\n          messages={markedMessages}\r\n          itemComponent={item => <SearchCommentsItem item={item} />}\r\n          title={`Результы поиска в сообщениях по запросу: ${searchRequest}`}\r\n        />\r\n      </div>\r\n    ) : (\r\n      <StyledTitle>\r\n        Нет результатов по запросу <i>{searchRequest}</i>\r\n      </StyledTitle>\r\n    );\r\n  }\r\n}\r\n\r\nSearchCommentsPage.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.objectOf(PropTypes.string),\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(SearchCommentsPage);\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport SearchTopicsPage from '../components/Search/SearchTopicsPage';\r\nimport SearchCommentsPage from '../components/Search/SearchCommentsPage';\r\n\r\nconst SearchRoute = () => (\r\n  <>\r\n    <Route exact path=\"/searchTopics/:searchRequest\">\r\n      <SearchTopicsPage />\r\n    </Route>\r\n    <Route exact path=\"/searchComments/:searchRequest\">\r\n      <SearchCommentsPage />\r\n    </Route>\r\n  </>\r\n);\r\n\r\nexport default SearchRoute;\r\n","import React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport queries from '../../serverQueries';\r\nimport TopicsList from './TopicsList';\r\nimport TopicsListItem from './TopicsListItem';\r\nimport SearchForm from '../Main/SearchForm';\r\n\r\nclass Subsection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topics: [],\r\n      name: '',\r\n      hasMore: true,\r\n      page: 1,\r\n      hasChildren: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTopic(0).then(topics => {\r\n      const hasChildren = !(topics.length === 0);\r\n      const topicName = topics[0] === undefined ? 'No Title' : topics[0].topic.subsection.name;\r\n      this.setState({\r\n        topics,\r\n        name: topicName,\r\n        hasChildren,\r\n      });\r\n    });\r\n  }\r\n\r\n  getTopic = page => {\r\n    const { match } = this.props;\r\n    return queries.getSubsectionTopics(match.params.subsectionId, page);\r\n  };\r\n\r\n  lazyLoadMore = () => {\r\n    const { topics, page } = this.state;\r\n    this.getTopic(page).then(data => {\r\n      if (data.length === 0) {\r\n        this.setState({ hasMore: false });\r\n      } else {\r\n        this.setState({ topics: [...topics, ...data], page: page + 1 });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { topics, name, hasMore, hasChildren, inProgress } = this.state;\r\n    return (\r\n      <>\r\n        <SearchForm />\r\n        {topics.length > 0 && (\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>\r\n              <Link to=\"/\">Главная</Link>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>\r\n              <Link to={`/section/${topics[0].topic.section.id}`}>\r\n                {topics[0].topic.section.name}\r\n              </Link>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>\r\n              <Link to={`/subsection/${topics[0].topic.subsection.id}`}>\r\n                {topics[0].topic.subsection.name}\r\n              </Link>\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n        <TopicsList\r\n          fetchMessages={this.lazyLoadMore}\r\n          hasMore={hasMore}\r\n          inProgress={inProgress}\r\n          hasChildren={hasChildren}\r\n          items={topics}\r\n          title={name}\r\n          itemComponent={item => <TopicsListItem topicData={item} />}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nSubsection.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.objectOf(PropTypes.string),\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(Subsection);\r\n","import React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Spin, Breadcrumb } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport SubSectionsList from '../Main/SubSectionsList';\r\nimport queries from '../../serverQueries';\r\nimport SearchForm from '../Main/SearchForm';\r\n\r\nclass Section extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      section: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadSection();\r\n  }\r\n\r\n  loadSection = async () => {\r\n    const { match } = this.props;\r\n    const { sectionId } = match.params;\r\n    const sections = await queries.getAllSections();\r\n    const section = sections.filter(item => item.section.id === Number(sectionId))[0];\r\n    this.setState({ section });\r\n  };\r\n\r\n  render() {\r\n    const { section } = this.state;\r\n    return section ? (\r\n      <>\r\n        <SearchForm />\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item>\r\n            <Link to=\"/\">Главная</Link>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <Link to={`/section/${section.section.id}`}>{section.section.name}</Link>\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <SubSectionsList section={section} />\r\n      </>\r\n    ) : (\r\n      <Spin />\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.objectOf(PropTypes.string),\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(Section);\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Subsection from '../components/Subsection/Subsection';\r\nimport Section from '../components/Subsection/Section';\r\n\r\nconst SubsectionRoute = () => (\r\n  <>\r\n    <Route exact path=\"/subsection/:subsectionId\">\r\n      <Subsection />\r\n    </Route>\r\n    <Route exact path=\"/section/:sectionId\">\r\n      <Section />\r\n    </Route>\r\n  </>\r\n);\r\n\r\nexport default SubsectionRoute;\r\n","import styled from 'styled-components';\r\nimport { InputNumber } from 'formik-antd';\r\n\r\nexport const StyledMenu = styled.div`\r\n  height: fit-content;\r\n  width: 300px;\r\n  box-shadow: 0px 0px 16px -2px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const Column = styled.div`\r\n  display: flex;\r\n  margin-left: 20px;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  .ant-form-item-children {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const StyledInput = styled(InputNumber)`\r\n  width: 200px;\r\n  margin: 0 5px 5px 0;\r\n`;\r\n\r\nexport const StyledDate = styled.span`\r\n  display: block;\r\n`;\r\n\r\nexport const StyledUserInfo = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nexport const StyledTags = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const StyledMeta = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledArticle = styled.article`\r\n  padding: 32px 24px 24px 24px;\r\n  border-radius: 2px;\r\n  margin-bottom: 24px;\r\n  box-shadow: 0px 0px 16px -2px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n  padding: 2px 0;\r\n  font-size: 25px;\r\n  width: 100%;\r\n  border-bottom: 1px solid #1890ff;\r\n  text-align: center;\r\n  margin: 0;\r\n`;\r\n\r\nexport const StyledCenteredContainer = styled.div`\r\n  display: flex;\r\n  min-height: 500px;\r\n  font-size: 18px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledHeader = styled.h1`\r\n  text-align: center;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n`;\r\nexport const TagsItem = styled.p`\r\n  cursor: pointer;\r\n  margin: 0;\r\n  display: flex;\r\n  height: 40px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  transition: color 0.3s cubic-bezier(0.645, 0.045, 0.355, 1),\r\n    border-color 0.3s cubic-bezier(0.645, 0.045, 0.355, 1),\r\n    background 0.3s cubic-bezier(0.645, 0.045, 0.355, 1),\r\n    padding 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n  padding-left: ${props => `${props.pad * 20}px`};\r\n  color: ${props => (props.active === props.activeId ? '#1890ff' : 'black')};\r\n  background-color: ${props => (props.active === props.activeId ? '#e6f7ff' : 'white')};\r\n  border-right: 3px solid ${props => (props.active === props.activeId ? '#1890ff' : 'white')};\r\n`;\r\n","import { useLocation } from 'react-router-dom';\r\n\r\nconst useQuery = () => {\r\n  const location = useLocation();\r\n  const result = Object.fromEntries(\r\n    location.search\r\n      .slice(1)\r\n      .split('&')\r\n      .map(el => el.split('='))\r\n  );\r\n  return result;\r\n};\r\n\r\nexport default useQuery;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, Spin } from 'antd';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport { StyledMenu, TagsItem } from '../styled';\r\nimport queries from '../../../serverQueries/index';\r\nimport useQuery from '../../../hooks/useQuery';\r\n\r\nconst TagsMenu = ({ location }) => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const history = useHistory();\r\n  const [activeId, setActiveId] = useState(null);\r\n  const hierarchy = useQuery().tags;\r\n\r\n  const addActiveTag = tags => {\r\n    const activeTag = tags.find(tag => hierarchy === tag.tagsHierarchy.join('_')) || {};\r\n    setActiveId(activeTag.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    queries.getTagsDtoTree().then(el => {\r\n      setMenuItems(el);\r\n      addActiveTag(el);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    addActiveTag(menuItems);\r\n  }, [location]);\r\n\r\n  const showArticles = tags => () => {\r\n    history.push(`articles?tags=${tags.join('_')}`);\r\n  };\r\n\r\n  const buildTreeMenu = (tags, result = []) => {\r\n    if (tags.length === 0) {\r\n      return result;\r\n    }\r\n    const [first, ...rest] = tags;\r\n    if (menuItems.some(el => el.parentId === first.id)) {\r\n      return buildTreeMenu(rest, [\r\n        ...result,\r\n        <li key={`item-${first.id}`}>\r\n          <TagsItem\r\n            onClick={showArticles(first.tagsHierarchy, first.id)}\r\n            active={first.id}\r\n            activeId={activeId}\r\n            pad={first.tagsHierarchy.length}\r\n          >\r\n            {first.tag}\r\n          </TagsItem>\r\n          <ul>{buildTreeMenu(menuItems.filter(elem => elem.parentId === first.id))}</ul>\r\n        </li>,\r\n      ]);\r\n    }\r\n    return buildTreeMenu(rest, [\r\n      ...result,\r\n      <li key={`item-${first.id}`}>\r\n        <TagsItem\r\n          active={first.id}\r\n          activeId={activeId}\r\n          onClick={showArticles(first.tagsHierarchy, first.id)}\r\n          pad={first.tagsHierarchy.length}\r\n        >\r\n          {first.tag}\r\n        </TagsItem>\r\n      </li>,\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <StyledMenu>\r\n      {menuItems.length > 0 ? (\r\n        <Menu mode=\"inline\">{buildTreeMenu(menuItems.filter(el => el.parentId === null))}</Menu>\r\n      ) : (\r\n        <Spin />\r\n      )}\r\n    </StyledMenu>\r\n  );\r\n};\r\n\r\nTagsMenu.propTypes = {\r\n  location: PropTypes.shape({ search: PropTypes.string.isRequired }).isRequired,\r\n};\r\n\r\nexport default withRouter(TagsMenu);\r\n","import styled from 'styled-components';\r\n\r\nexport const ArticleTitle = styled.h1`\r\n  font-size: 32px;\r\n  line-height: 40px;\r\n  color: #24292e;\r\n`;\r\n\r\nexport const ArticleContentView = styled.div`\r\n  font-size: 16px;\r\n  line-height: 1.56;\r\n  color: #24292e;\r\n\r\n  & h1,\r\n  & h2,\r\n  & h3 {\r\n    font-weight: 600;\r\n    margin: 0;\r\n    padding: 0;\r\n    color: #24292e;\r\n  }\r\n\r\n  & h2 {\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    margin-bottom: 32px;\r\n  }\r\n\r\n  & h3 {\r\n    padding-left: 12px;\r\n    font-size: 20px;\r\n    line-height: 28px;\r\n    margin-bottom: 28px;\r\n    position: relative;\r\n    &:before {\r\n      content: '';\r\n      height: 28px;\r\n      width: 4px;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      background: #24292e;\r\n    }\r\n  }\r\n\r\n  & p {\r\n    &:not(:last-child) {\r\n      margin-bottom: 24px;\r\n    }\r\n  }\r\n\r\n  & ul,\r\n  ol {\r\n    margin: 0 0 0 34px;\r\n    padding: 0;\r\n    & li {\r\n      padding: 9px 0;\r\n      line-height: 1.6;\r\n    }\r\n    & li:first-child {\r\n      padding-top: 0;\r\n    }\r\n  }\r\n\r\n  & ul {\r\n    list-style-type: disc;\r\n  }\r\n`;\r\n\r\nexport const CommentContentView = styled.div`\r\n  & p {\r\n    margin-bottom: 1em;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tag, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArticleContentView, ArticleTitle } from '../commons/HTMLContentViews';\r\nimport { StyledArticle, StyledMeta, StyledTags, StyledUserInfo, StyledDate } from './styled/index';\r\nimport { dateToDateDistance } from '../../utils/index';\r\nimport context from '../Context';\r\n\r\nconst Article = props => {\r\n  const { articleInfo, isPreview } = props;\r\n  const {\r\n    user: { role },\r\n  } = useContext(context);\r\n  return (\r\n    <StyledArticle>\r\n      <ArticleTitle>\r\n        {isPreview ? (\r\n          <Link style={{ color: 'black' }} to={`/article/${articleInfo.id}`}>\r\n            {articleInfo.title}\r\n          </Link>\r\n        ) : (\r\n          articleInfo.title\r\n        )}\r\n        {role === 'ROLE_ADMIN' ? (\r\n          <Link\r\n            style={{\r\n              fontSize: '16px',\r\n              'margin-left': '6px',\r\n              color: '#24292e',\r\n              'line-height': '40px',\r\n            }}\r\n            to={`/article/${articleInfo.id}/update`}\r\n          >\r\n            <Icon type=\"edit\" theme=\"outlined\" />\r\n          </Link>\r\n        ) : null}\r\n      </ArticleTitle>\r\n      <ArticleContentView dangerouslySetInnerHTML={{ __html: articleInfo.text }} />\r\n      <StyledMeta>\r\n        <StyledTags>\r\n          {articleInfo.articleTags.map(tag => {\r\n            return (\r\n              <Tag key={tag.id} color=\"geekblue\">\r\n                {tag.name}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </StyledTags>\r\n        <div>\r\n          <StyledUserInfo>{articleInfo.user ? articleInfo.user.username : null}</StyledUserInfo>\r\n          <StyledDate>Создано {dateToDateDistance(articleInfo.date)} назад</StyledDate>\r\n        </div>\r\n      </StyledMeta>\r\n    </StyledArticle>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n\r\nArticle.defaultProps = {\r\n  isPreview: false,\r\n};\r\n\r\nArticle.propTypes = {\r\n  isPreview: PropTypes.bool,\r\n  articleInfo: PropTypes.shape({\r\n    text: PropTypes.string,\r\n    date: PropTypes.string,\r\n    articleTags: PropTypes.array,\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    user: PropTypes.shape({\r\n      username: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport queries from '../../serverQueries';\r\nimport { Column } from './styled';\r\nimport Article from './Article';\r\nimport useQuery from '../../hooks/useQuery';\r\n\r\nconst ArticlesByTag = () => {\r\n  const [articles, setArticles] = useState([]);\r\n  const [isEmpty, setIsEmpty] = useState(false);\r\n  const tagsAtr = useQuery().tags;\r\n\r\n  useEffect(() => {\r\n    if (!tagsAtr) {\r\n      queries.getArticlesByTag().then(el => {\r\n        setArticles(el.content);\r\n        setIsEmpty(el.empty);\r\n      });\r\n    } else {\r\n      queries\r\n        .getArticlesByTag(tagsAtr.split('_'))\r\n        .then(el => {\r\n          setArticles(el.content.reverse());\r\n          setIsEmpty(el.empty);\r\n        })\r\n        .catch(() => setIsEmpty(true));\r\n    }\r\n  }, [tagsAtr]);\r\n\r\n  const LoadOrNotFound = isEmpty ? <h1>Статей по этому тегу не найдено</h1> : <Spin />;\r\n  return (\r\n    <Column>\r\n      {articles.length === 0 ? LoadOrNotFound : null}\r\n      {articles.map(el => {\r\n        return <Article key={el.id} articleInfo={el} isPreview />;\r\n      })}\r\n    </Column>\r\n  );\r\n};\r\n\r\nArticlesByTag.propTypes = {\r\n  location: PropTypes.shape({\r\n    search: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ArticlesByTag;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport TagsMenu from './TagsMenu/TagsMenu';\r\nimport { Container } from './styled/index';\r\nimport ArticlesByTag from './ArticlesByTag';\r\n\r\nconst Articles = () => {\r\n  return (\r\n    <Container>\r\n      <TagsMenu />\r\n      <Route exact path=\"/articles\" component={ArticlesByTag} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form } from 'antd';\r\nimport { useField } from 'formik';\r\n\r\nconst FormItem = ({ name, label, children, ...rest }) => {\r\n  const [, { error, touched }] = useField(name);\r\n  return (\r\n    <Form.Item\r\n      htmlFor={name}\r\n      label={label}\r\n      validateStatus={touched && error ? 'error' : 'success'}\r\n      help={touched ? error : ''}\r\n      {...rest}\r\n    >\r\n      {React.cloneElement(children, { name })}\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nFormItem.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nFormItem.defaultProps = {\r\n  label: '',\r\n};\r\n\r\nexport default FormItem;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactQuill from 'react-quill';\r\nimport './quill.snow.css';\r\nimport './EditorField.scss';\r\nimport { useField } from 'formik';\r\n\r\nconst wrapperHandler = (fn, value) => () => fn(value);\r\n\r\nconst EditorField = ({ name, replyRef, modules, className, children, ...rest }) => {\r\n  const [{ onChange }, { value }] = useField(name);\r\n  const [classFromState, setClassFromState] = useState('');\r\n\r\n  return (\r\n    <ReactQuill\r\n      className={`${classFromState} ${className}`}\r\n      ref={replyRef}\r\n      value={value}\r\n      onChange={onChange(name)}\r\n      theme=\"snow\"\r\n      onFocus={wrapperHandler(setClassFromState, 'quill--focus')}\r\n      onBlur={wrapperHandler(setClassFromState, '')}\r\n      modules={modules}\r\n      {...rest}\r\n    >\r\n      {/* {children} */}\r\n    </ReactQuill>\r\n  );\r\n};\r\n\r\nEditorField.defaultProps = {\r\n  children: null,\r\n  replyRef: null,\r\n  modules: {\r\n    toolbar: [\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n      [{ list: 'ordered' }, { list: 'bullet' }],\r\n    ],\r\n  },\r\n  name: '',\r\n  className: '',\r\n};\r\n\r\nEditorField.propTypes = {\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  replyRef: PropTypes.func,\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  modules: PropTypes.object,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default EditorField;\r\n","import { TreeSelect } from 'antd';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst { TreeNode } = TreeSelect;\r\n\r\nconst SelectField = ({ name, disabled, mode, options, valueKey, labelKey, ...rest }) => {\r\n  const [, { value }] = useField(name);\r\n  const { setFieldValue } = useFormikContext();\r\n\r\n  const setValue = (val, tags) => {\r\n    return tags.reduce(\r\n      (acc, tag) => (val.includes(tag.position) || val.includes(tag.tag) ? [...acc, tag.tag] : acc),\r\n      []\r\n    );\r\n  };\r\n\r\n  const buildTreeTags = (tags, result = []) => {\r\n    if (tags.length === 0) {\r\n      return result;\r\n    }\r\n    // eslint-disable-next-line no-shadow\r\n    const [first, ...rest] = tags;\r\n    if (options.some(el => el.parentId === first.id)) {\r\n      return buildTreeTags(rest, [\r\n        ...result,\r\n        <TreeNode value={first.tag} title={first.tag}>\r\n          {buildTreeTags(options.filter(elem => elem.parentId === first.id))}\r\n        </TreeNode>,\r\n      ]);\r\n    }\r\n    return buildTreeTags(rest, [\r\n      ...result,\r\n      <TreeNode value={first.tag} title={first.tag}>\r\n        {buildTreeTags(options.filter(elem => elem.parentId === first.id))}\r\n      </TreeNode>,\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <TreeSelect\r\n      showSearch\r\n      allowClear\r\n      multiple\r\n      treeDefaultExpandAll\r\n      name={name}\r\n      value={setValue(value, options)}\r\n      component={TreeSelect}\r\n      disabled={disabled}\r\n      onChange={arr => setFieldValue(name, arr)}\r\n      optionFilterProp=\"title\"\r\n      {...rest}\r\n    >\r\n      {buildTreeTags(options.filter(el => el.parentId === null))}\r\n    </TreeSelect>\r\n  );\r\n};\r\n\r\nSelectField.defaultProps = {\r\n  valueKey: 'id',\r\n  labelKey: 'name',\r\n  disabled: false,\r\n  mode: 'multiple',\r\n  name: '',\r\n  options: [],\r\n};\r\n\r\nSelectField.propTypes = {\r\n  name: PropTypes.string,\r\n  valueKey: PropTypes.string,\r\n  labelKey: PropTypes.string,\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n  disabled: PropTypes.bool,\r\n  mode: PropTypes.string,\r\n};\r\n\r\nexport default SelectField;\r\n","import { useState, useEffect } from 'react';\r\nimport queries from '../serverQueries';\r\n\r\nfunction useTagsFetching() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [results, setResults] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const data = await queries.getTagsDtoTree();\r\n        setResults(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return {\r\n    error,\r\n    loading,\r\n    results,\r\n  };\r\n}\r\n\r\nexport default useTagsFetching;\r\n","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { Button, Checkbox, Form, Input } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport { EditorField, SelectField, FormItemLabel } from './fields';\r\nimport useTagsFetching from '../../hooks/useTagsFetching';\r\n// import { ArticleContentView } from '../elements/HTMLContentView';\r\n\r\nconst validationSchema = Yup.object({\r\n  title: Yup.string()\r\n    .required('Это поле обязательно')\r\n    .min(5, 'Заголовок не может быть меньше 5 символов'),\r\n  text: Yup.string()\r\n    .required('Это поле обязательно')\r\n    .max(500000, 'Слишком длинное сообщение'),\r\n  tagsId: Yup.array(Yup.number().required('Это поле обязательно')).min(1, 'Добавьте минимум 1 тэг'),\r\n});\r\n\r\nconst editorModules = {\r\n  toolbar: [\r\n    [{ header: [2, 3, false] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [{ align: '' }, { align: 'center' }, { align: 'right' }, { align: 'justify' }],\r\n    [{ list: 'ordered' }, { list: 'bullet' }],\r\n  ],\r\n};\r\n\r\nconst ArticleForm = ({ initialValues, buttonText, onSubmit, onSubmitSuccess, onSubmitError }) => {\r\n  const onSubmitWrapper = useCallback(\r\n    () => async (data, { resetForm, setSubmitting }) => {\r\n      try {\r\n        const res = await onSubmit(data);\r\n        setSubmitting(false);\r\n        resetForm();\r\n        if (onSubmitSuccess) {\r\n          onSubmitSuccess(res);\r\n        }\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n        if (onSubmitError) {\r\n          onSubmitError(error);\r\n        }\r\n      }\r\n    },\r\n    [onSubmit, onSubmitSuccess, onSubmitError]\r\n  );\r\n\r\n  const { loading, results: tags, error } = useTagsFetching();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmitWrapper()}\r\n    >\r\n      {({ values, handleChange, touched, errors, handleSubmit, submitting }) => {\r\n        return (\r\n          <Form onSubmit={handleSubmit} labelAlign=\"left\">\r\n            <FormItemLabel name=\"title\" label=\"Заголовок\">\r\n              <Input name=\"title\" value={values.title} onChange={handleChange('title')} />\r\n            </FormItemLabel>\r\n            <FormItemLabel name=\"tagsId\" label=\"Разделы\">\r\n              <SelectField\r\n                loading={loading || error}\r\n                name=\"tagsId\"\r\n                options={tags}\r\n                labelKey=\"name\"\r\n                valueKey=\"id\"\r\n                notFoundContent=\"Разделов не найдено\"\r\n              />\r\n            </FormItemLabel>\r\n\r\n            <FormItemLabel wrapperCol={{ span: 24 }} name=\"text\">\r\n              <EditorField name=\"text\" className=\"article-editor\" modules={editorModules}>\r\n                {/* <ArticleContentView /> */}\r\n              </EditorField>\r\n            </FormItemLabel>\r\n            <Form.Item wrapperCol={{ span: 24 }}>\r\n              <Checkbox name=\"isDraft\" checked={values.isDraft} onChange={handleChange('isDraft')}>\r\n                Черновик\r\n              </Checkbox>\r\n              {/* <Checkbox */}\r\n              {/*  name=\"isHideToAnon\" */}\r\n              {/*  checked={values.isHideToAnon} */}\r\n              {/*  onChange={handleChange('isHideToAnon')} */}\r\n              {/* > */}\r\n              {/*  Только для пользователей */}\r\n              {/* </Checkbox> */}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                disabled={!!touched.message && !!errors.message}\r\n                loading={submitting}\r\n              >\r\n                {buttonText}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nArticleForm.defaultProps = {\r\n  buttonText: 'Отправить',\r\n  initialValues: {\r\n    title: '',\r\n    text: '',\r\n    tagsId: [],\r\n    isHideToAnon: true,\r\n    isDraft: true,\r\n  },\r\n  onSubmitSuccess: null,\r\n  onSubmitError: null,\r\n};\r\n\r\nArticleForm.propTypes = {\r\n  buttonText: PropTypes.string,\r\n  initialValues: PropTypes.shape([PropTypes.array]),\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onSubmitSuccess: PropTypes.func,\r\n  onSubmitError: PropTypes.func,\r\n};\r\n\r\nexport default ArticleForm;\r\n","import { useState, useEffect } from 'react';\r\nimport queries from '../serverQueries';\r\n\r\nfunction useArticleFetching(id, page = 0) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [results, setResults] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const data = await queries.getArticleById({ id, page });\r\n        setResults(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [id, page]);\r\n\r\n  return {\r\n    error,\r\n    loading,\r\n    results,\r\n  };\r\n}\r\n\r\nexport default useArticleFetching;\r\n","import React from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Spin } from 'antd';\r\nimport queries from '../../serverQueries';\r\nimport ArticleForm from '../forms/ArticleForm';\r\nimport useArticleFetching from '../../hooks/useArticleFetching';\r\nimport { StyledCenteredContainer, StyledHeader } from './styled';\r\n\r\nconst updateArticle = id => async values => {\r\n  const { title, text, ...params } = values;\r\n  const data = await queries.updateArticle(id, { title, text }, params);\r\n  return data;\r\n};\r\n\r\nconst ArticleUpdate = () => {\r\n  const history = useHistory();\r\n  const { articleId } = useParams();\r\n\r\n  const { error, loading, results } = useArticleFetching(articleId);\r\n\r\n  if (loading || error) {\r\n    return (\r\n      <StyledCenteredContainer>\r\n        {loading ? <Spin /> : 'Не удалось загрузить статью'}\r\n      </StyledCenteredContainer>\r\n    );\r\n  }\r\n\r\n  const {\r\n    article: { title, text, articleTags, isHideToAnon = true, draft: isDraft },\r\n  } = results;\r\n  const tagsId = articleTags.map(tag => tag.id);\r\n\r\n  return (\r\n    <>\r\n      <StyledHeader>Редактирование статьи</StyledHeader>\r\n      <ArticleForm\r\n        initialValues={{ title, text, tagsId, isDraft, isHideToAnon }}\r\n        onSubmit={updateArticle(articleId)}\r\n        onSubmitSuccess={({ id }) => history.push(`/article/${id}`)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticleUpdate;\r\n","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport { EditorField, FormItemLabel } from './fields';\r\n\r\nconst validationSchema = Yup.object({\r\n  text: Yup.string()\r\n    .required('Это поле обязательно')\r\n    .max(500000, 'Слишком длинное сообщение'),\r\n});\r\n\r\nconst editorModules = {\r\n  toolbar: [\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [{ list: 'ordered' }, { list: 'bullet' }],\r\n  ],\r\n};\r\n\r\nconst CommentForm = ({\r\n  initialValues,\r\n  buttonText,\r\n  onSubmit,\r\n  onSubmitSuccess,\r\n  onSubmitError,\r\n  startText = '',\r\n}) => {\r\n  const onSubmitWrapper = useCallback(\r\n    () => async (data, { resetForm, setSubmitting }) => {\r\n      try {\r\n        const res = await onSubmit(data);\r\n        setSubmitting(false);\r\n        resetForm();\r\n        if (onSubmitSuccess) {\r\n          onSubmitSuccess(res);\r\n        }\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n        if (onSubmitError) {\r\n          onSubmitError(error);\r\n        }\r\n      }\r\n    },\r\n    [onSubmit, onSubmitSuccess, onSubmitError]\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ ...initialValues, text: startText }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmitWrapper()}\r\n    >\r\n      {({ touched, errors, handleSubmit, submitting }) => {\r\n        return (\r\n          <Form onSubmit={handleSubmit} labelAlign=\"left\">\r\n            <FormItemLabel wrapperCol={{ span: 24 }} name=\"text\">\r\n              <EditorField name=\"text\" className=\"comment-editor\" modules={editorModules} />\r\n            </FormItemLabel>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                disabled={!!touched.message && !!errors.message}\r\n                loading={submitting}\r\n              >\r\n                {buttonText}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nCommentForm.defaultProps = {\r\n  buttonText: 'Отправить',\r\n  initialValues: {\r\n    text: '',\r\n  },\r\n  onSubmitSuccess: null,\r\n  onSubmitError: null,\r\n  startText: '',\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  buttonText: PropTypes.string,\r\n  initialValues: PropTypes.shape([PropTypes.array]),\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onSubmitSuccess: PropTypes.func,\r\n  onSubmitError: PropTypes.func,\r\n  startText: PropTypes.string,\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ru from 'date-fns/locale/ru';\r\nimport { parseISO, format, formatDistanceToNow } from 'date-fns';\r\nimport { Comment, Tooltip, Popover } from 'antd';\r\nimport Context from '../Context';\r\nimport roles from '../../constants';\r\nimport { CommentContentView } from '../commons/HTMLContentViews';\r\nimport TopicUserInfo from '../Topic/TopicUserInfo';\r\nimport UserAvatar from '../commons/UserAvatar';\r\nimport CommentForm from '../forms/CommentForm';\r\n\r\nconst ArticleComment = props => {\r\n  const {\r\n    comment,\r\n    commentWithOpenEditor,\r\n    onOpenEditorClick,\r\n    onSubmitCommentForm,\r\n    onDeleteComment,\r\n    eventType,\r\n  } = props;\r\n\r\n  const {\r\n    id: commentId,\r\n    parentId,\r\n    commentText: text,\r\n    commentDateTime: date,\r\n    author,\r\n    nested,\r\n    deleted,\r\n  } = comment;\r\n  const { user } = useContext(Context);\r\n\r\n  const actionsArr = [];\r\n  actionsArr.push(\r\n    <span\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      key=\"reply\"\r\n      onKeyPress={onOpenEditorClick(commentId, 'reply')}\r\n      onClick={onOpenEditorClick(commentId, 'reply')}\r\n    >\r\n      Ответить\r\n    </span>\r\n  );\r\n\r\n  const { role, id: userId } = user;\r\n  const hasPermission = role === roles.admin || role === roles.moderator;\r\n\r\n  if (author.id === userId || hasPermission) {\r\n    actionsArr.push(\r\n      <span\r\n        key=\"edit\"\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n        onKeyPress={onOpenEditorClick(commentId, 'edit')}\r\n        onClick={onOpenEditorClick(commentId, 'edit')}\r\n      >\r\n        Редактировать\r\n      </span>\r\n    );\r\n    actionsArr.push(\r\n      <span\r\n        key=\"delete\"\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n        onKeyPress={onDeleteComment(commentId, parentId)}\r\n        onClick={onDeleteComment(commentId, parentId)}\r\n      >\r\n        Удалить\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const nestedComments = nested.map(item => (\r\n    <ArticleComment\r\n      key={item.id}\r\n      comment={item}\r\n      commentWithOpenEditor={commentWithOpenEditor}\r\n      onOpenEditorClick={onOpenEditorClick}\r\n      onSubmitCommentForm={onSubmitCommentForm}\r\n      onDeleteComment={onDeleteComment}\r\n      eventType={eventType}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Comment\r\n      actions={deleted ? null : actionsArr}\r\n      author={author.nickName}\r\n      datetime={\r\n        <Tooltip\r\n          title={format(parseISO(date), \"dd MMMM yyyy 'в' HH:mm\", {\r\n            locale: ru,\r\n          })}\r\n        >\r\n          <span>\r\n            {formatDistanceToNow(parseISO(date), {\r\n              locale: ru,\r\n              addSuffix: true,\r\n            })}\r\n          </span>\r\n        </Tooltip>\r\n      }\r\n      avatar={\r\n        <Popover content={<TopicUserInfo user={author} />} placement=\"right\">\r\n          <UserAvatar src={author.avatar.small} />\r\n        </Popover>\r\n      }\r\n      content={<CommentContentView dangerouslySetInnerHTML={{ __html: text }} />}\r\n    >\r\n      {commentId === commentWithOpenEditor && eventType === 'edit' && (\r\n        <CommentForm startText={text} onSubmit={onSubmitCommentForm(commentId, parentId)} />\r\n      )}\r\n      {commentId === commentWithOpenEditor && eventType === 'reply' && (\r\n        <CommentForm startText=\"\" onSubmit={onSubmitCommentForm(commentId, parentId)} />\r\n      )}\r\n      {nestedComments}\r\n    </Comment>\r\n  );\r\n};\r\n\r\nArticleComment.defaulProps = {\r\n  commentWithOpenEditor: null,\r\n};\r\n\r\nArticleComment.propTypes = {\r\n  comment: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    nested: PropTypes.array.isRequired,\r\n    author: PropTypes.object.isRequired,\r\n    commentDateTime: PropTypes.string,\r\n    commentText: PropTypes.string,\r\n    deleted: PropTypes.bool,\r\n    parentId: PropTypes.number,\r\n  }).isRequired,\r\n  // eslint-disable-next-line react/require-default-props\r\n  commentWithOpenEditor: PropTypes.number,\r\n  onOpenEditorClick: PropTypes.func.isRequired,\r\n  onSubmitCommentForm: PropTypes.func.isRequired,\r\n  onDeleteComment: PropTypes.func.isRequired,\r\n  eventType: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ArticleComment;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Spin } from 'antd';\r\nimport Context from '../Context';\r\nimport Article from './Article';\r\nimport { StyledCenteredContainer } from './styled';\r\nimport ArticleComment from './ArticleComment';\r\nimport CommentForm from '../forms/CommentForm';\r\nimport queries from '../../serverQueries';\r\nimport { createTreeBuildFunction } from '../../utils';\r\n\r\nconst buildCommentTreeFromFlat = createTreeBuildFunction('id', 'parentId');\r\n\r\nclass ArticlePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      error: null,\r\n      article: null,\r\n      commentsTree: [],\r\n      flatComments: [],\r\n      commentWithOpenEditor: null,\r\n      eventType: 'reply',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchArticle();\r\n  }\r\n\r\n  fetchArticle = async () => {\r\n    // eslint-disable-next-line react/destructuring-assignment,react/prop-types\r\n    const { articleId } = this.props.match.params;\r\n    try {\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      const { article, articleCommentDto = [] } = await queries.getArticleById({ id: articleId });\r\n      this.setState({\r\n        loading: false,\r\n        error: null,\r\n        article,\r\n        commentsTree: buildCommentTreeFromFlat(articleCommentDto),\r\n        flatComments: articleCommentDto,\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false,\r\n        error: err,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCommentFormSubmit = (commentId, parentId) => async ({ text }) => {\r\n    const { eventType } = this.state;\r\n    try {\r\n      const fn = eventType === 'edit' ? this.editComment : this.postComment;\r\n      await fn(commentId, text, parentId);\r\n      //  TODO\r\n      // eslint-disable-next-line no-empty\r\n    } catch (error) {}\r\n  };\r\n\r\n  postComment = async (answerId, text) => {\r\n    const {\r\n      article: { id },\r\n    } = this.state;\r\n\r\n    const {\r\n      user: { id: idUser },\r\n    } = this.context;\r\n\r\n    const params = { idArticle: id, idUser };\r\n    // на бэкенде валится запрос если поле null\r\n    if (answerId) {\r\n      params.answerId = answerId;\r\n    }\r\n    const comment = await queries.createArticleComment(text, params);\r\n    this.setState(\r\n      ({ flatComments }) => ({\r\n        flatComments: [...flatComments, comment],\r\n      }),\r\n      () => {\r\n        this.handleOpenEditorClick(null)(); // убираем окно редактирования коментария\r\n        this.rebuildTree(); // перестраиваем дерево коментов\r\n      }\r\n    );\r\n  };\r\n\r\n  editComment = async (commentId, text, parentId) => {\r\n    const {\r\n      article: { id: idArticle },\r\n    } = this.state;\r\n\r\n    const {\r\n      user: { id: idUser },\r\n    } = this.context;\r\n\r\n    const data = { idArticle, idUser, commentID: commentId };\r\n    if (parentId !== -1) {\r\n      data.answerId = parentId;\r\n    }\r\n\r\n    const updatedComment = await queries.updateArticleComment(text, data);\r\n    this.setState(\r\n      ({ flatComments }) => {\r\n        const comments = flatComments.reduce(\r\n          (acc, comment) =>\r\n            comment.id === commentId ? [...acc, updatedComment] : [...acc, comment],\r\n          []\r\n        );\r\n        return {\r\n          flatComments: comments,\r\n        };\r\n      },\r\n      () => {\r\n        this.handleOpenEditorClick(null)(); // убираем окно редактирования коментария\r\n        this.rebuildTree(); // перестраиваем дерево коментов\r\n      }\r\n    );\r\n  };\r\n\r\n  // TODO был другой способ, но там вылез баг, не было времени сделать нормально\r\n  rebuildTree = () => {\r\n    this.setState(({ flatComments }) => ({\r\n      commentsTree: buildCommentTreeFromFlat(flatComments),\r\n    }));\r\n  };\r\n\r\n  handleOpenEditorClick = (id, eventType) => () => {\r\n    this.setState({ commentWithOpenEditor: id, eventType });\r\n  };\r\n\r\n  handleDeleteComment = (commentId, parentId) => async () => {\r\n    await queries.deleteArticleComment(commentId);\r\n\r\n    /* после отправки запроса на удаление комента в ответе не приходят обновленные коменты \r\n    поэтому для обновления ui проходимся по массиву коментов\r\n    смотрим если на комент ссылаются другие мы меняем ему статус на deleted:true, и содержание на Комментарий был удален \r\n    дублирую работу на сервере без отправления запроса\r\n    */\r\n    // вспомошательная функция проверки наличия  подкоментов\r\n    const hasChildrenComments = (comments, id) => {\r\n      for (let i = 0; i < comments.length; i++) {\r\n        if (comments[i].parentId === id) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const createNewCommentsList = ar => {\r\n      return ar.reduce((acc, comment) => {\r\n        if (comment.id !== commentId) {\r\n          return [...acc, comment];\r\n        }\r\n        if (comment.id === commentId && hasChildrenComments(ar, commentId)) {\r\n          return [...acc, { ...comment, deleted: true, commentText: 'Комментарий был удален' }];\r\n        }\r\n        return acc;\r\n      }, []);\r\n    };\r\n\r\n    const clearComments = comments => {\r\n      if (parentId === -1) {\r\n        return comments;\r\n      }\r\n      /*\r\n      функция для проверки вложенных коментов если: \r\n      комент удален \r\n        комент удален \r\n          КОМЕНТ -------------> нажимаем удалить то вся ветка больше не показывается \r\n      */\r\n      const iter = (ar, id) => {\r\n        const index = ar.findIndex(el => el.id === id);\r\n        // если у комента нет подкоментов и этот комент со статусом deleted\r\n        if (!hasChildrenComments(ar, id) && ar[index].deleted) {\r\n          // если у комента не родителей то возвращаем обновленный лист коментов\r\n          if (ar[index].parentId === -1) {\r\n            return [...ar.slice(0, index), ...ar.slice(index + 1)];\r\n          }\r\n          return iter([...ar.slice(0, index), ...ar.slice(index + 1)], ar[index].parentId); // если родители есть рекурсивно проверяем на пустые коменты\r\n        }\r\n        return ar;\r\n      };\r\n      return iter(comments, parentId);\r\n    };\r\n\r\n    this.setState(\r\n      ({ flatComments }) => ({ flatComments: clearComments(createNewCommentsList(flatComments)) }),\r\n      () => {\r\n        this.handleOpenEditorClick(null)(); // убираем окно редактирования коментария\r\n        this.rebuildTree(); // перестраиваем дерево коментов\r\n      }\r\n    );\r\n  };\r\n\r\n  renderCommentForm() {\r\n    const { isLogin } = this.context;\r\n    return isLogin ? (\r\n      <CommentForm onSubmit={this.handleCommentFormSubmit()} />\r\n    ) : (\r\n      <div>Только авторизированные пользователи могут оставлять комментарии</div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      error,\r\n      loading,\r\n      article,\r\n      commentsTree,\r\n      flatComments,\r\n      commentWithOpenEditor,\r\n    } = this.state;\r\n\r\n    if (error || loading) {\r\n      return (\r\n        <StyledCenteredContainer>\r\n          {loading ? <Spin /> : 'Не удалось загрузить статью'}\r\n        </StyledCenteredContainer>\r\n      );\r\n    }\r\n\r\n    const commentsCount = flatComments ? flatComments.length : 0;\r\n    const { eventType } = this.state;\r\n    return (\r\n      <>\r\n        <Article articleInfo={article} />\r\n        <div>Комментарии ({commentsCount})</div>\r\n        {commentsTree.map(comment => (\r\n          <ArticleComment\r\n            commentWithOpenEditor={commentWithOpenEditor}\r\n            key={comment.key}\r\n            comment={comment}\r\n            onOpenEditorClick={this.handleOpenEditorClick}\r\n            onSubmitCommentForm={this.handleCommentFormSubmit}\r\n            onDeleteComment={this.handleDeleteComment}\r\n            eventType={eventType}\r\n          />\r\n        ))}\r\n        {this.renderCommentForm()}\r\n      </>\r\n    );\r\n  }\r\n}\r\nArticlePage.contextType = Context;\r\n\r\nArticlePage.propTypes = {};\r\n\r\nArticlePage.defaultProps = {};\r\n\r\nexport default withRouter(ArticlePage);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { userRoles } from '../constants';\r\nimport Articles from '../components/Articles/Articles';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport ArticleUpdate from '../components/Articles/ArticleUpdate';\r\nimport ArticlePage from '../components/Articles/ArticlePage';\r\n\r\nconst ArticlesRoute = ({ isLogin, role }) => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <PrivateRoute isAllowed={isLogin} exact path=\"/articles\" component={Articles} />\r\n        <PrivateRoute\r\n          isAllowed={isLogin}\r\n          exact\r\n          path=\"/article/:articleId\"\r\n          component={ArticlePage}\r\n        />\r\n        <PrivateRoute\r\n          isAllowed={isLogin && role === userRoles.admin}\r\n          exact\r\n          path=\"/article/:articleId/update\"\r\n          component={ArticleUpdate}\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nArticlesRoute.propTypes = {\r\n  isLogin: PropTypes.bool.isRequired,\r\n  role: PropTypes.string,\r\n};\r\n\r\nArticlesRoute.defaultProps = {\r\n  role: null,\r\n};\r\n\r\nexport default ArticlesRoute;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ChatRoute = ({ isLogin, user, path, component: Component }) => (\r\n  <Route path={path}>{isLogin ? <Component user={user} /> : <Redirect to=\"/login\" />}</Route>\r\n);\r\n\r\nexport default ChatRoute;\r\n\r\nChatRoute.propTypes = {\r\n  user: PropTypes.shape({\r\n    nickName: PropTypes.string,\r\n  }),\r\n  isLogin: PropTypes.bool.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n  component: PropTypes.elementType.isRequired,\r\n};\r\n\r\nChatRoute.defaultProps = {\r\n  user: {},\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport logo from '../../media/img/logo.png';\r\n\r\nimport Context from '../Context';\r\n\r\nconst StyledHeader = styled.div`\r\n  padding-top: 10px;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst WrapLogo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 110px;\r\n  height: 95px;\r\n`;\r\n\r\nconst LogoText = styled.h1`\r\n  font-family: 'MusorC';\r\n  font-weight: normal;\r\n  font-size: 28px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Context.Consumer>\r\n      {({ isLogin, logOut, user }) => (\r\n        <StyledHeader>\r\n          <WrapLogo>\r\n            <Logo src={logo} alt='Клуб \"Старый следопыт\"' />\r\n            <LogoText>Клуб &quot;Старый следопыт&quot;</LogoText>\r\n          </WrapLogo>\r\n          <Menu>\r\n            <Button type=\"primary\">\r\n              <Link to=\"/\">Главная</Link>\r\n            </Button>\r\n            <Button type=\"primary\">\r\n              <Link to=\"/chat\">Чат</Link>\r\n            </Button>\r\n            {isLogin && (\r\n              <Button>\r\n                <Link to=\"/articles\">Статьи</Link>\r\n              </Button>\r\n            )}\r\n            {isLogin && user.role === 'ROLE_ADMIN' && (\r\n              <Button style={{ marginLeft: '0' }}>\r\n                <Link to=\"/admin-panel\">Панель администратора</Link>\r\n              </Button>\r\n            )}\r\n            {isLogin ? (\r\n              <>\r\n                <Button>\r\n                  <Link to=\"/profile\">Профиль</Link>\r\n                </Button>\r\n                <Button type=\"danger\" onClick={logOut}>\r\n                  Выйти\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button type=\"link\">\r\n                <Link to=\"/login\">Войти</Link>\r\n              </Button>\r\n            )}\r\n          </Menu>\r\n        </StyledHeader>\r\n      )}\r\n    </Context.Consumer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input } from 'antd';\r\nimport { useField } from 'formik';\r\nimport { formatIncompletePhoneNumber } from 'libphonenumber-js';\r\n\r\nconst changePhoneInput = setValue => ({ target: { value } }) => {\r\n  let customValue = value;\r\n\r\n  if (value === '8') {\r\n    customValue = '+7';\r\n  }\r\n\r\n  setValue('phoneNumber', formatIncompletePhoneNumber(customValue));\r\n};\r\n\r\nconst PhoneInput = ({ setValue, ...props }) => {\r\n  const [field] = useField(props);\r\n  return <Input {...field} {...props} onChange={changePhoneInput(setValue)} />;\r\n};\r\n\r\nPhoneInput.propTypes = {\r\n  setValue: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PhoneInput;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Row, Spin, message } from 'antd';\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Select, DatePicker } from 'formik-antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { parseIncompletePhoneNumber } from 'libphonenumber-js';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport queries from '../../serverQueries';\r\n\r\nimport Context from '../Context';\r\nimport FormItem from '../formItems/FormItem';\r\nimport PhoneInput from '../formItems/PhoneInput';\r\n\r\nmoment.locale('ru');\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst formLayoutSchema = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 7 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 10 },\r\n  },\r\n};\r\n\r\nconst regex = {\r\n  fb: /(?:(?:http|https):\\/\\/)?(?:www.)?facebook.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w]*\\/)?(?:profile.php\\?id=(?=\\d.*))?([\\w]*)?/,\r\n  tw: /^@(\\w){1,15}$/,\r\n  vk: /^(http:\\/\\/|https:\\/\\/)?(www.)?(vk\\.com|vkontakte\\.ru)\\/(id\\d|[a-zA-Z0-9_.])+$/,\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  nickName: Yup.string().required('Это поле обязательно'),\r\n  firstName: Yup.string().required('Это поле обязательно'),\r\n  lastName: Yup.string().required('Это поле обязательно'),\r\n  phoneNumber: Yup.string()\r\n    .test({\r\n      name: 'phoneNumber',\r\n      params: {},\r\n      exclusive: true,\r\n      message: 'Минимальная длина номера телефона - 11 символов',\r\n      test: value =>\r\n        value === null || value === undefined || parseIncompletePhoneNumber(value).length >= 11,\r\n    })\r\n    .nullable(),\r\n  gender: Yup.array().required('Выберите пол').oneOf[('FEMALE', 'MALE')],\r\n  socialFb: Yup.string()\r\n    .matches(regex.fb, 'Проверьте правильность ввода')\r\n    .nullable(),\r\n  socialTw: Yup.string()\r\n    .matches(regex.tw, 'Проверьте правильность ввода')\r\n    .nullable(),\r\n  socialVk: Yup.string()\r\n    .matches(regex.vk, 'Проверьте правильность ввода')\r\n    .nullable(),\r\n  aboutMe: Yup.string()\r\n    .min(5, 'Сообщение о себе не менее 5 символов')\r\n    .nullable(),\r\n});\r\n\r\nconst submitForm = (history, { changeLoadingState, changeUserState }) => async values => {\r\n  changeLoadingState(true);\r\n  const dateString = values.birthday ? [...values.birthday].slice(0, 10).join('') : null;\r\n  const newValues = { ...values, birthday: dateString };\r\n  try {\r\n    await queries.updateProfile({ ...newValues });\r\n    const userAuth = await queries.getProfileData();\r\n\r\n    localStorage.setItem('user', JSON.stringify(userAuth));\r\n\r\n    message.success('Профиль успешно отредактирован');\r\n    changeUserState(userAuth);\r\n    changeLoadingState(false);\r\n    history.push('/profile');\r\n  } catch {\r\n    message.error('Что-то пошло не так, профиль не был отредактирован');\r\n    changeLoadingState(false);\r\n  }\r\n};\r\n\r\nclass EditProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      userProfile: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadUserProfile();\r\n  }\r\n\r\n  loadUserProfile = async () => {\r\n    const userProfile = await queries.getUserProfileData();\r\n    this.setState({ userProfile });\r\n  };\r\n\r\n  changeLoadingState = bool => {\r\n    this.setState({ loading: bool });\r\n  };\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n    const { loading, userProfile } = this.state;\r\n    const { changeLoadingState } = this;\r\n    const { changeUserState } = this.context;\r\n    return (\r\n      <>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <h2>Редактирование профиля</h2>\r\n        </Row>\r\n        {userProfile ? (\r\n          <Formik\r\n            initialValues={{\r\n              firstName: userProfile.firstName,\r\n              lastName: userProfile.lastName,\r\n              nickName: userProfile.nickName,\r\n              city: userProfile.city,\r\n              country: userProfile.country,\r\n              birthday: userProfile.birthday,\r\n              gender: userProfile.gender,\r\n              phoneNumber: userProfile.phoneNumber,\r\n              socialFb: userProfile.socialFb,\r\n              socialTw: userProfile.socialTw,\r\n              socialVk: userProfile.socialVk,\r\n              aboutMe: userProfile.aboutMe,\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={submitForm(history, { changeLoadingState, changeUserState })}\r\n          >\r\n            {({ setFieldValue }) => (\r\n              <>\r\n                <Form {...formLayoutSchema}>\r\n                  <FormItem label=\"Ник\" name=\"nickName\">\r\n                    <Input name=\"nickName\" />\r\n                  </FormItem>\r\n                  <FormItem label=\"Имя\" name=\"firstName\">\r\n                    <Input name=\"firstName\" />\r\n                  </FormItem>\r\n                  <FormItem label=\"Фамилия\" name=\"lastName\">\r\n                    <Input name=\"lastName\" />\r\n                  </FormItem>\r\n\r\n                  <FormItem label=\"Город\" name=\"city\">\r\n                    <Input name=\"city\" />\r\n                  </FormItem>\r\n                  <FormItem label=\"Страна\" name=\"country\">\r\n                    <Input name=\"country\" />\r\n                  </FormItem>\r\n\r\n                  <FormItem label=\"ДР\" name=\"birthday\">\r\n                    <DatePicker name=\"birthday\" locale={locale} />\r\n                  </FormItem>\r\n                  <FormItem label=\"Пол\" name=\"gender\">\r\n                    <Select defaultValue=\"lucy\" name=\"gender\">\r\n                      <Option value=\"MALE\">Муж.</Option>\r\n                      <Option value=\"FEMALE\">Жен.</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n\r\n                  <FormItem label=\"Тел. номер\" name=\"phoneNumber\">\r\n                    <PhoneInput name=\"phoneNumber\" setValue={setFieldValue} />\r\n                  </FormItem>\r\n                  <FormItem label=\"VK\" name=\"socialVk\">\r\n                    <Input name=\"socialVk\" />\r\n                  </FormItem>\r\n                  <FormItem label=\"Facebook\" name=\"socialFb\">\r\n                    <Input name=\"socialFb\" />\r\n                  </FormItem>\r\n                  <FormItem label=\"Twitter\" name=\"socialTw\">\r\n                    <Input name=\"socialTw\" />\r\n                  </FormItem>\r\n                  <FormItem label=\"Обо мне\" name=\"aboutMe\">\r\n                    <TextArea name=\"aboutMe\" rows={4} />\r\n                  </FormItem>\r\n\r\n                  <Row type=\"flex\" justify=\"center\">\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                      Редактировать\r\n                    </Button>\r\n                  </Row>\r\n                </Form>\r\n              </>\r\n            )}\r\n          </Formik>\r\n        ) : (\r\n          <Spin />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nEditProfile.contextType = Context;\r\n\r\nEditProfile.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n    location: PropTypes.shape({\r\n      pathname: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(EditProfile);\r\n","import React from 'react';\r\nimport { Button, Upload, Icon, message } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport queries from '../../serverQueries';\r\nimport Context from '../Context';\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledHeading = styled.h2`\r\n  color: #333;\r\n`;\r\n\r\nconst StyledText = styled.p`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst StyledBtnWrapp = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nclass EditAvatar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fileList: [],\r\n      avatarThumbUrl: null,\r\n      avatarFile: null,\r\n      uploading: false,\r\n    };\r\n  }\r\n\r\n  handleUpload = async () => {\r\n    this.setState({ uploading: true });\r\n    const { changeUserState } = this.context;\r\n    const { avatarFile } = this.state;\r\n    const { history } = this.props;\r\n    const formData = new FormData();\r\n    formData.set('file', avatarFile, avatarFile.name);\r\n    try {\r\n      await queries.updateAvatar(formData);\r\n      const userAuth = await queries.getProfileData();\r\n      localStorage.setItem('user', JSON.stringify(userAuth));\r\n      changeUserState(userAuth);\r\n      this.setState({\r\n        fileList: [],\r\n        avatarThumbUrl: null,\r\n        avatarFile: null,\r\n        uploading: false,\r\n      });\r\n      message.success('Фотография успешно загружена.');\r\n      history.push('/profile');\r\n    } catch {\r\n      this.setState({\r\n        uploading: false,\r\n      });\r\n      message.error('Что-то не так, фотография не загружена.');\r\n    }\r\n  };\r\n\r\n  delete = () => {\r\n    this.setState({ avatarThumbUrl: null, avatarFile: null });\r\n  };\r\n\r\n  render() {\r\n    const { avatarThumbUrl, uploading, avatarFile, fileList } = this.state;\r\n    const img = avatarThumbUrl ? (\r\n      <img src={avatarThumbUrl} alt=\"avatar\" style={{ width: '50%', margin: '20px auto' }} />\r\n    ) : null;\r\n    const resetBtn = (\r\n      <Button\r\n        onClick={this.delete}\r\n        disabled={avatarThumbUrl === null}\r\n        style={{ display: 'inline-block', margin: '20px 5px' }}\r\n      >\r\n        Отменить\r\n      </Button>\r\n    );\r\n    const propsUpload = {\r\n      accept: '.jpg,.png',\r\n      beforeUpload: file => {\r\n        getBase64(file).then(filePrevie => {\r\n          this.setState({ avatarThumbUrl: filePrevie, avatarFile: file });\r\n        });\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <StyledWrapper>\r\n          <StyledHeading>Загрузка новой фотографии</StyledHeading>\r\n          <StyledText>Вы можете загрузить изображение в формате JPG или PNG.</StyledText>\r\n          {img}\r\n          <Upload {...propsUpload}>\r\n            <Button style={{ display: 'inline-block' }}>\r\n              <Icon type=\"upload\" /> Выберите файл\r\n            </Button>\r\n          </Upload>\r\n        </StyledWrapper>\r\n        <StyledBtnWrapp>\r\n          <Button\r\n            disabled={avatarFile === null}\r\n            type=\"primary\"\r\n            onClick={this.handleUpload}\r\n            loading={uploading}\r\n            style={{ margin: '20px 5px', display: 'inline-block' }}\r\n          >\r\n            {uploading ? 'Загрузка...' : 'Загрузить аватар'}\r\n          </Button>\r\n          {resetBtn}\r\n        </StyledBtnWrapp>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nEditAvatar.contextType = Context;\r\n\r\nEditAvatar.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n    location: PropTypes.shape({\r\n      pathname: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(EditAvatar);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { formatDistanceToNow, format } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport { BASE_IMG_URL } from '../../constants';\r\n\r\nconst StyledCard = styled.div`\r\n  position: relative;\r\n  padding: 20px 0 10px 20px;\r\n  margin-top: 8px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid #555;\r\n  border-radius: 5px;\r\n  .title {\r\n    position: absolute;\r\n    left: 4px;\r\n    top: 0;\r\n    transform: translateY(-50%);\r\n    padding: 5px 10px;\r\n    line-height: 1;\r\n    color: #fff;\r\n    background-color: #2b7de9;\r\n    border-radius: 4px;\r\n  }\r\n  .field {\r\n    display: flex;\r\n    margin: 2px 0;\r\n    &-name {\r\n      width: 30%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledMainProfile = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  .sidebar {\r\n    width: 20%;\r\n    margin: 0 auto 5%;\r\n    .title {\r\n      margin: 20px 0;\r\n    }\r\n    .avatar {\r\n      display: block;\r\n      max-width: 200px;\r\n      width: 100%;\r\n      height: auto;\r\n      margin: 0 auto;\r\n    }\r\n    .button {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n  .meta {\r\n    width: 75%;\r\n    margin: auto;\r\n  }\r\n  @media (max-width: 768px) {\r\n    .sidebar,\r\n    .meta {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProfileData = ({ user, self, id }) => {\r\n  const gender = user.gender && (user.gender === 'MALE' ? 'муж.' : 'жен.');\r\n  const btn = self ? (\r\n    <>\r\n      <Link to=\"/profile/avatar\">\r\n        <Button type=\"primary\" block className=\"button\">\r\n          Загрузить аватар\r\n        </Button>\r\n      </Link>\r\n      <Link to=\"/profile/edit\">\r\n        <Button type=\"primary\" block className=\"button\">\r\n          Редактировать\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  ) : (\r\n    <Link to={`/private/${id}`}>\r\n      <Button type=\"primary\" block className=\"button\">\r\n        Написать\r\n      </Button>\r\n    </Link>\r\n  );\r\n\r\n  return (\r\n    <StyledMainProfile>\r\n      <div className=\"sidebar\">\r\n        <img src={`${BASE_IMG_URL}${user.avatar}`} alt=\"avatar\" className=\"avatar\" />\r\n        <h2 className=\"title\">\r\n          {user.firstName} {user.lastName}\r\n        </h2>\r\n        {btn}\r\n      </div>\r\n      <div className=\"meta\">\r\n        <StyledCard>\r\n          <h3 className=\"title\">Общее</h3>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Ник:</div>\r\n            <div className=\"field-value\">{user.nickName || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Имя:</div>\r\n            <div className=\"field-value\">{user.firstName || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Фамилия:</div>\r\n            <div className=\"field-value\">{user.lastName || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Город:</div>\r\n            <div className=\"field-value\">{user.city || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Страна:</div>\r\n            <div className=\"field-value\">{user.country || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Дата рождения:</div>\r\n            <div className=\"field-value\">{user.birthday || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Пол:</div>\r\n            <div className=\"field-value\">{gender || '-'}</div>\r\n          </div>\r\n        </StyledCard>\r\n        <StyledCard>\r\n          <h3 className=\"title\">Контакты</h3>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Email:</div>\r\n            <div className=\"field-value\">{user.email || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Моб. телефон:</div>\r\n            <div className=\"field-value\">{user.phoneNumber || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">VK:</div>\r\n            <div className=\"field-value\">{user.socialVk || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Facebook:</div>\r\n            <div className=\"field-value\">{user.socialFb || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Twitter:</div>\r\n            <div className=\"field-value\">{user.socialTw || '-'}</div>\r\n          </div>\r\n        </StyledCard>\r\n        <StyledCard>\r\n          <h3 className=\"title\">Статистика</h3>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Зарегистрирован:</div>\r\n            <div className=\"field-value\">\r\n              {user.regDate ? format(new Date(user.regDate), 'dd.MM.yyyy HH:mm') : '-'}\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Сообщений:</div>\r\n            <div className=\"field-value\">{user.messageCount || '-'}</div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Последнее сообщение:</div>\r\n            <div className=\"field-value\">\r\n              {user.lastComment ? format(new Date(user.lastComment), 'dd.MM.yyyy HH:mm') : '-'}\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Последний логин:</div>\r\n            <div className=\"field-value\">\r\n              {user.lastVisit\r\n                ? formatDistanceToNow(new Date(user.lastVisit), { locale: ru, addSuffix: true })\r\n                : '-'}\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"field-name\">Начал тем:</div>\r\n            <div className=\"field-value\">{user.topicStartCount || '-'}</div>\r\n          </div>\r\n        </StyledCard>\r\n        <StyledCard>\r\n          <h3 className=\"title\">Про меня</h3>\r\n          <div className=\"field\">{user.aboutMe}</div>\r\n        </StyledCard>\r\n      </div>\r\n    </StyledMainProfile>\r\n  );\r\n};\r\n\r\nProfileData.propTypes = {\r\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  self: PropTypes.bool,\r\n};\r\n\r\nProfileData.defaultProps = {\r\n  self: false,\r\n};\r\n\r\nexport default ProfileData;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport queries from '../../serverQueries';\r\n\r\nconst getData = async (url, { changeDataState, changeLoadingState }) => {\r\n  changeLoadingState(true);\r\n  const data = await queries.getData(url);\r\n  changeDataState(data);\r\n  changeLoadingState(false);\r\n};\r\n\r\nconst withGetData = (WrappedComponent, url) => {\r\n  return props => {\r\n    const [isLoading, changeLoadingState] = useState(true);\r\n    const [data, changeDataState] = useState({});\r\n\r\n    useEffect(() => {\r\n      getData(url, { changeDataState, changeLoadingState });\r\n    }, []);\r\n\r\n    return <WrappedComponent {...props} isLoading={isLoading} data={data} />;\r\n  };\r\n};\r\n\r\nexport default withGetData;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spin } from 'antd';\r\nimport ProfileData from './ProfileData';\r\nimport { withGetData } from '../hoc';\r\n\r\nconst MainProfile = ({ isLoading, data: user }) => {\r\n  if (isLoading) {\r\n    return <Spin />;\r\n  }\r\n  return <ProfileData self user={user} />;\r\n};\r\n\r\nMainProfile.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default withGetData(MainProfile, 'api/profile');\r\n","import React from 'react';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { Row, message } from 'antd';\r\n\r\nimport queries from '../../serverQueries';\r\nimport TopicCommentsList from '../Topic/TopicCommentsList';\r\nimport TopicCommentItem from '../Topic/TopicCommentItem';\r\n\r\nclass Messages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      hasMore: true,\r\n      page: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages = async () => {\r\n    const { page: oldPage } = this.state;\r\n    const newMessages = await queries.getProfileComments(oldPage);\r\n    if (newMessages.length === 0) {\r\n      return this.setState({ hasMore: false });\r\n    }\r\n\r\n    return this.setState(({ messages, page }) => ({\r\n      messages: [...messages, ...newMessages],\r\n      page: page + 1,\r\n    }));\r\n  };\r\n\r\n  handleUpdateMessage = updatedComment => {\r\n    this.setState(({ messages }) => {\r\n      const updatedComments = messages.map(mes =>\r\n        mes.commentId === updatedComment.commentId ? updatedComment : mes\r\n      );\r\n      return { messages: updatedComments };\r\n    });\r\n  };\r\n\r\n  handleDeleteMessage = commentId => {\r\n    queries\r\n      .deleteComment(commentId)\r\n      .then(() => {\r\n        this.setState(({ messages }) => {\r\n          const updatedComments = messages.filter(mes => mes.commentId !== commentId);\r\n          return { messages: updatedComments };\r\n        });\r\n        message.success('Сообщение удалено');\r\n      })\r\n      .catch(() => {\r\n        message.error('Похоже, что-то не так. Сообщение удалить не удалось.');\r\n      });\r\n  };\r\n\r\n  getPageComment = numberComment => {\r\n    return Math.ceil(numberComment / 10);\r\n  };\r\n\r\n  render() {\r\n    const { hasMore, messages } = this.state;\r\n\r\n    if (messages.length === 0 && !hasMore) {\r\n      return (\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <h4>Сообщений нет</h4>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <TopicCommentsList\r\n        itemComponent={item => (\r\n          <HashLink\r\n            to={`/topic/${item.topicId}?page=${this.getPageComment(item.positionInTopic)}#${\r\n              item.positionInTopic\r\n            }`}\r\n          >\r\n            <TopicCommentItem\r\n              comment={item}\r\n              updateComment={this.handleUpdateMessage}\r\n              deleteComment={this.handleDeleteMessage}\r\n            />\r\n          </HashLink>\r\n        )}\r\n        messages={messages}\r\n        title=\"\"\r\n        fetchMessages={this.loadMessages}\r\n        hasMore={hasMore}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { Row } from 'antd';\r\n\r\nimport queries from '../../serverQueries';\r\nimport TopicsList from '../Subsection/TopicsList';\r\nimport TopicsListItem from '../Subsection/TopicsListItem';\r\n\r\nclass Themes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topics: [],\r\n      hasMore: true,\r\n      page: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadTopics();\r\n  }\r\n\r\n  loadTopics = async () => {\r\n    const { page: oldPage } = this.state;\r\n    const newTopics = await queries.getProfileTopics(oldPage);\r\n\r\n    if (newTopics.length === 0) {\r\n      return this.setState({ hasMore: false });\r\n    }\r\n\r\n    const badApiAdaptationTopicsFixMePlease = newTopics.map(topic => ({\r\n      topic,\r\n      totalMessages: 0,\r\n      isSubscribed: false,\r\n      hasNewMessages: false,\r\n      newMessagesCount: 0,\r\n    }));\r\n\r\n    return this.setState(({ topics, page }) => ({\r\n      topics: [...topics, ...badApiAdaptationTopicsFixMePlease],\r\n      page: page + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { hasMore, topics } = this.state;\r\n\r\n    if (topics.length === 0 && !hasMore) {\r\n      return (\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <h4>Тем нет</h4>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <TopicsList\r\n        itemComponent={item => <TopicsListItem topicData={item} />}\r\n        items={topics}\r\n        title=\"\"\r\n        fetchMessages={this.loadTopics}\r\n        hasMore={hasMore}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Themes;\r\n","import React from 'react';\r\nimport { Row } from 'antd';\r\n\r\nimport queries from '../../serverQueries';\r\nimport TopicsList from '../Subsection/TopicsList';\r\nimport TopicsListItem from '../Subsection/TopicsListItem';\r\n\r\nclass Subscriptions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topics: [],\r\n      hasMore: true,\r\n      page: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadTopics();\r\n  }\r\n\r\n  loadTopics = async () => {\r\n    const { page: oldPage } = this.state;\r\n    const newTopics = await queries.getProfileSubscriptions(oldPage);\r\n\r\n    if (newTopics.length === 0) {\r\n      return this.setState({ hasMore: false });\r\n    }\r\n\r\n    const badApiAdaptationTopicsFixMePlease = newTopics.map(topic => ({\r\n      topic,\r\n      isSubscribed: false,\r\n      hasNewMessages: false,\r\n      newMessagesCount: 0,\r\n    }));\r\n\r\n    return this.setState(({ topics, page }) => ({\r\n      topics: [...topics, ...badApiAdaptationTopicsFixMePlease],\r\n      page: page + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { hasMore, topics } = this.state;\r\n\r\n    if (topics.length === 0 && !hasMore) {\r\n      return (\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <h4>Подписок нет</h4>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <TopicsList\r\n        itemComponent={item => <TopicsListItem topicData={item} />}\r\n        items={topics}\r\n        title=\"\"\r\n        fetchMessages={this.loadTopics}\r\n        hasMore={hasMore}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Subscriptions;\r\n","import React from 'react';\r\nimport { Row, Button, Divider, Input, Typography } from 'antd';\r\nimport { Form, Input as FormikInput } from 'formik-antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport styled from 'styled-components';\r\nimport queries from '../../serverQueries';\r\nimport FormItem from '../formItems/FormItem';\r\nimport { BASE_URL } from '../../constants';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst StyledWrapper = styled.div`\r\n  margin-bottom: 20px;\r\n  .ant-input {\r\n    max-width: 400px;\r\n  }\r\n`;\r\n\r\nconst formLayoutSchema = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 12 },\r\n  },\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  mail: Yup.string()\r\n    .email('Некорректный email адрес')\r\n    .required('Это поле обязательно'),\r\n});\r\n\r\nclass Invite extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      token: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const token = await queries.getInviteCode();\r\n    this.setState({ token });\r\n  }\r\n\r\n  submitForm = async (values, { setStatus }) => {\r\n    this.setState({ loading: true });\r\n    const status = await queries.sendInviteCode(values);\r\n\r\n    switch (status) {\r\n      case 1:\r\n        setStatus('Приглашение успешно отправлено.');\r\n        break;\r\n\r\n      default:\r\n        setStatus('Извините, но сервис отправки приглашений временно не работает.');\r\n        break;\r\n    }\r\n\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  render() {\r\n    const { loading, token } = this.state;\r\n    return (\r\n      <>\r\n        <StyledWrapper>\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <h4>Скопируйте ссылку и отправьте другу</h4>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Input value={`${BASE_URL}invite?key=${token}`} />\r\n          </Row>\r\n        </StyledWrapper>\r\n\r\n        <Divider>ИЛИ</Divider>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            mail: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={this.submitForm}\r\n        >\r\n          {({ handleSubmit, status }) => (\r\n            <Form onSubmit={handleSubmit} {...formLayoutSchema}>\r\n              <Row type=\"flex\" justify=\"center\">\r\n                <h4>Отправьте приглашение на почту</h4>\r\n              </Row>\r\n\r\n              {status && (\r\n                <Row type=\"flex\" justify=\"center\">\r\n                  <Title level={4} type=\"danger\">\r\n                    {status}\r\n                  </Title>\r\n                </Row>\r\n              )}\r\n\r\n              <FormItem label=\"Email\" name=\"mail\">\r\n                <FormikInput name=\"mail\" />\r\n              </FormItem>\r\n\r\n              <Row type=\"flex\" justify=\"center\">\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                  Отправить\r\n                </Button>\r\n              </Row>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Invite;\r\n","import { Button, Icon, message, Row, Upload } from 'antd';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport queries from '../../../serverQueries';\r\n\r\nconst UploadButton = styled(Button)`\r\n  @media (max-width: 479px) {\r\n    padding: 5px;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  @media (max-width: 479px) {\r\n    display: block !important;\r\n  }\r\n`;\r\nclass UploadPhoto extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fileList: [],\r\n      uploading: false,\r\n    };\r\n  }\r\n\r\n  handleUpload = async () => {\r\n    const { fileList } = this.state;\r\n    const { albumId, loadPhotos } = this.props;\r\n    const formData = new FormData();\r\n    fileList.forEach(file => {\r\n      formData.append('photos', file);\r\n    });\r\n    this.setState({\r\n      uploading: true,\r\n    });\r\n\r\n    try {\r\n      await queries.addPhotosInAlbum(albumId, formData);\r\n      this.setState({\r\n        fileList: [],\r\n        uploading: false,\r\n      });\r\n      message.success('upload successfully.');\r\n      loadPhotos();\r\n    } catch (error) {\r\n      this.setState({\r\n        uploading: true,\r\n      });\r\n      message.error('upload failed.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { fileList, uploading } = this.state;\r\n    const uploadProps = {\r\n      accept: '.jpg, .jpeg, .png',\r\n      multiple: true,\r\n      onRemove: file => {\r\n        const index = fileList.indexOf(file);\r\n        const newFileList = fileList.slice();\r\n        newFileList.splice(index, 1);\r\n        this.setState({\r\n          fileList: newFileList,\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [...state.fileList, file],\r\n        }));\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n    return (\r\n      <>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <Upload {...uploadProps} disabled={uploading}>\r\n            <UploadButton>\r\n              <Icon type=\"upload\" />\r\n              <StyledSpan>Перетащите сюда или выберите фотографии</StyledSpan>\r\n            </UploadButton>\r\n          </Upload>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.handleUpload}\r\n            disabled={fileList.length === 0}\r\n            loading={uploading}\r\n            style={{ margin: 16 }}\r\n          >\r\n            {uploading ? 'Загружаем' : 'Добавить Фотографии в альбом'}\r\n          </Button>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nUploadPhoto.propTypes = {\r\n  loadPhotos: PropTypes.func.isRequired,\r\n  albumId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default UploadPhoto;\r\n","import React from 'react';\r\nimport { Row, Button, Icon, message } from 'antd';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Carousel, { Modal, ModalGateway } from 'react-images';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\nimport queries from '../../../serverQueries';\r\nimport UploadPhoto from './UploadPhoto';\r\nimport { BASE_URL } from '../../../constants';\r\n\r\nconst CloseModalButton = styled(Button)`\r\nposition:absolute;\r\ntop:20px;\r\npadding:5px\r\nright:20px;\r\nwidth:44px;\r\nopacity: 0.7;\r\nz-index: 1;\r\n`;\r\n\r\nconst DeletePhotoModalButton = styled(Button)`\r\nposition:absolute;\r\ntop:20px;\r\nright:64px;\r\npadding:5px\r\nwidth:44px;\r\nopacity: 0.7;\r\nz-index: 1;\r\n`;\r\n\r\nconst DeletePhotoButton = styled(Button)`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: none;\r\n  padding: 2px 5px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 239px;\r\n  margin: 3px;\r\n  &:hover ${DeletePhotoButton} {\r\n    display: block;\r\n  }\r\n`;\r\nconst AlbumNavigation = styled.div`\r\n  margin-left: 5px;\r\n`;\r\nexport const StyledImage = styled.img`\r\n  object-fit: cover;\r\n  object-position: top center;\r\n  width: 239px;\r\n  height: 150px;\r\n`;\r\n\r\nconst AlbumWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: columns;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 50px;\r\n  margin-top: 30px;\r\n  @media (max-width: 1000px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst StyledRow = styled(Row)`\r\n  margin-bottom: 50px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nclass Album extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      photoTempUlr: `${BASE_URL}api/securedPhoto/photoFromAlbum/`,\r\n      photos: [],\r\n      selectedIndex: 0,\r\n      lightboxIsOpen: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadPhotos();\r\n  }\r\n\r\n  toggleLightbox = selectedIndex => {\r\n    this.setState(state => ({\r\n      lightboxIsOpen: !state.lightboxIsOpen,\r\n      selectedIndex,\r\n    }));\r\n  };\r\n\r\n  loadPhotos = async () => {\r\n    const {\r\n      location: { state },\r\n    } = this.props;\r\n\r\n    const albumId = state.photoAlbumId;\r\n    try {\r\n      const photos = await queries.getPhotosFromAlbum(albumId);\r\n      this.setState({ photos });\r\n    } catch (error) {\r\n      /* eslint-disable-next-line no-console */\r\n      console.error(error.response);\r\n      message.error('что-то пошло не так');\r\n    }\r\n  };\r\n\r\n  deletePhoto = id => async event => {\r\n    event.stopPropagation();\r\n    const { photos } = this.state;\r\n    try {\r\n      await queries.deletePhotoFromAlbum(id);\r\n      const newPhotos = photos.reduce((acc, item) => {\r\n        if (item.photoID !== id) {\r\n          acc.push(item);\r\n        }\r\n        return [...acc];\r\n      }, []);\r\n      this.setState({ photos: newPhotos });\r\n    } catch (error) {\r\n      /* eslint-disable-next-line no-console */\r\n      console.error(error.response);\r\n      message.error('что-то пошло не так');\r\n    }\r\n  };\r\n\r\n  onSortEnd = ({ oldIndex, newIndex }) => {\r\n    const { photos } = this.state;\r\n    this.setState({\r\n      photos: arrayMove(photos, oldIndex, newIndex),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { photos, lightboxIsOpen, selectedIndex, photoTempUlr } = this.state;\r\n    const {\r\n      location: {\r\n        state: { photoAlbumId, title },\r\n      },\r\n    } = this.props;\r\n    const images = photos.reduce((acc, photo) => {\r\n      return [...acc, { src: `${photoTempUlr}${photo.photoID}?type=original` }];\r\n    }, []);\r\n\r\n    const CustomHeader = ({ currentIndex, isModal, modalProps: { onClose } }) =>\r\n      isModal ? (\r\n        <div>\r\n          <CloseModalButton onClick={onClose} title=\"close\">\r\n            <Icon type=\"close\" />\r\n          </CloseModalButton>\r\n          <DeletePhotoModalButton\r\n            title=\"delete\"\r\n            onClick={event => {\r\n              this.deletePhoto(photos[currentIndex].photoID)(event);\r\n              onClose();\r\n            }}\r\n          >\r\n            <Icon type=\"delete\" title=\"delete\" />\r\n          </DeletePhotoModalButton>\r\n        </div>\r\n      ) : null;\r\n\r\n    if (window.matchMedia('(max-width: 479px)').matches) {\r\n      return (\r\n        <>\r\n          <AlbumNavigation>\r\n            <Link to=\"/profile/albums\">Альбомы</Link>\r\n            <span>{` > ${title}`}</span>\r\n          </AlbumNavigation>\r\n          <AlbumWrapper>\r\n            {photos.length > 0 ? (\r\n              <>\r\n                {photos.map((photo, index) => (\r\n                  <ImageWrapper onClick={() => this.toggleLightbox(index)} key={photo.photoID}>\r\n                    <StyledImage\r\n                      title={photo.title}\r\n                      alt=\"userPhoto\"\r\n                      src={`${photoTempUlr}${photo.photoID}?type=original`}\r\n                    />\r\n                    <DeletePhotoButton\r\n                      type=\"default\"\r\n                      title=\"Удалить Фотографию\"\r\n                      onClick={this.deletePhoto(photo.photoID)}\r\n                    >\r\n                      <Icon type=\"delete\" style={{ color: 'red' }} />\r\n                    </DeletePhotoButton>\r\n                  </ImageWrapper>\r\n                ))}\r\n                <ModalGateway>\r\n                  {lightboxIsOpen ? (\r\n                    <Modal onClose={this.toggleLightbox}>\r\n                      <Carousel\r\n                        views={images}\r\n                        currentIndex={selectedIndex}\r\n                        components={{ Header: CustomHeader }}\r\n                      />\r\n                    </Modal>\r\n                  ) : null}\r\n                </ModalGateway>\r\n              </>\r\n            ) : (\r\n              <StyledRow type=\"flex\" justify=\"center\">\r\n                <h4>Альбом пуст</h4>\r\n              </StyledRow>\r\n            )}\r\n          </AlbumWrapper>\r\n          <UploadPhoto albumId={photoAlbumId} loadPhotos={this.loadPhotos} />\r\n        </>\r\n      );\r\n    }\r\n\r\n    const SortableItem = SortableElement(({ value, photoNum }) => (\r\n      <ImageWrapper onClick={() => this.toggleLightbox(photoNum)}>\r\n        <StyledImage title={value.title} alt=\"userPhoto\" src={`${photoTempUlr}${value.photoID}`} />\r\n        <DeletePhotoButton\r\n          type=\"default\"\r\n          title=\"Удалить Фотографию\"\r\n          onClick={this.deletePhoto(value.photoID)}\r\n        >\r\n          <Icon type=\"delete\" style={{ color: 'red' }} />\r\n        </DeletePhotoButton>\r\n      </ImageWrapper>\r\n    ));\r\n\r\n    const SortableList = SortableContainer(({ items }) => (\r\n      <AlbumWrapper>\r\n        {items.map((photo, index) => (\r\n          <SortableItem key={photo.photoID} index={index} value={photo} photoNum={index} />\r\n        ))}\r\n      </AlbumWrapper>\r\n    ));\r\n    return (\r\n      <>\r\n        <AlbumNavigation>\r\n          <Link to=\"/profile/albums\">Альбомы</Link>\r\n          <span>{` > ${title}`}</span>\r\n        </AlbumNavigation>\r\n        {photos.length > 0 ? (\r\n          <>\r\n            <SortableList axis=\"xy\" items={photos} onSortEnd={this.onSortEnd} distance={1} />\r\n            <ModalGateway>\r\n              {lightboxIsOpen ? (\r\n                <Modal onClose={this.toggleLightbox}>\r\n                  <Carousel\r\n                    views={images}\r\n                    currentIndex={selectedIndex}\r\n                    components={{ Header: CustomHeader }}\r\n                  />\r\n                </Modal>\r\n              ) : null}\r\n            </ModalGateway>\r\n          </>\r\n        ) : (\r\n          <StyledRow type=\"flex\" justify=\"center\">\r\n            <h4>Альбом пуст</h4>\r\n          </StyledRow>\r\n        )}\r\n        <UploadPhoto albumId={photoAlbumId} loadPhotos={this.loadPhotos} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAlbum.propTypes = {\r\n  location: PropTypes.shape({\r\n    state: PropTypes.shape({\r\n      photoAlbumId: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      fileList: PropTypes.shape({\r\n        indexOf: PropTypes.func.isRequired,\r\n        slice: PropTypes.func.isRequired,\r\n      }),\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(Album);\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { message, Button, Input, Modal } from 'antd';\r\nimport styled from 'styled-components';\r\nimport queries from '../../../serverQueries';\r\nimport { StyledImage } from './Album';\r\nimport { BASE_URL } from '../../../constants';\r\n\r\nconst EditSection = styled.div`\r\n  justify-content: space-around;\r\n  margin-top: 50px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  @media (max-width: 830px) {\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\nconst ChooseNewCoverSectionImage = styled(StyledImage)`\r\n  width: 50%;\r\n`;\r\nconst EditMenu = styled.div`\r\n  width: 239px;\r\n  @media (max-width: 830px) {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\nconst SaveChanges = styled(Button)`\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n`;\r\nconst EditSectionAlbumTitle = styled.div`\r\n  margin-top: 20px;\r\n`;\r\nconst GaleryImages = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst EditAlbumImageWrapper = styled.div`\r\n  position: relative;\r\n  @media (max-width: 500px) {\r\n    padding-top: 5px;\r\n  }\r\n`;\r\nconst Galery = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst GaleryTitle = styled.div`\r\n  align-self: center;\r\n`;\r\nconst ChoosePhotoButton = styled(Button)`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  @media (max-width: 500px) {\r\n    top: 5px;\r\n  }\r\n`;\r\n\r\nclass EditAlbum extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // TODO: сделать нормально\r\n    const { title, photoAlbumId, thumbImageId } = props.location.state;\r\n    this.state = {\r\n      photos: [],\r\n      photosToDelete: [],\r\n      photoTempUlr: `${BASE_URL}api/securedPhoto/photoFromAlbum/`,\r\n      visible: false,\r\n      thumbImageId,\r\n      title,\r\n      photoAlbumId,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadPhotos();\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = photo => () => {\r\n    this.setState({\r\n      visible: false,\r\n      thumbImageId: photo.photoID,\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  loadPhotos = async () => {\r\n    const {\r\n      location: { state },\r\n    } = this.props;\r\n\r\n    const albumId = state.photoAlbumId;\r\n    try {\r\n      const photos = await queries.getPhotosFromAlbum(albumId);\r\n      this.setState({ photos });\r\n    } catch (error) {\r\n      /* eslint-disable-next-line no-console */\r\n      console.error(error.response);\r\n      message.error('что-то пошло не так');\r\n    }\r\n  };\r\n\r\n  handleDeletePhotos = async () => {\r\n    const { photosToDelete } = this.state;\r\n    try {\r\n      // await Promise.all(photosToDelete.map(id => queries.deletePhotoFromAlbum(id)));\r\n      await queries.deletePhotosFromAlbum(photosToDelete);\r\n      this.setState(({ photos, thumbImageId }) => {\r\n        const updatedPhotos = photos.filter(({ photoID }) => !photosToDelete.includes(photoID));\r\n        const updatedThumbImageId = () => {\r\n          if (updatedPhotos.length === 0) {\r\n            return '';\r\n          }\r\n          return updatedPhotos.includes(thumbImageId) ? thumbImageId : updatedPhotos[0].photoID;\r\n        };\r\n        return {\r\n          photos: updatedPhotos,\r\n          photosToDelete: [],\r\n          thumbImageId: updatedThumbImageId(),\r\n        };\r\n      });\r\n    } catch (error) {\r\n      // message.error('что-то пошло не так');\r\n      await this.loadPhotos();\r\n    }\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const { history } = this.props;\r\n    try {\r\n      const { photoAlbumId, title, thumbImageId } = this.state;\r\n      await queries.updateAlbum(photoAlbumId, { title, photoId: thumbImageId });\r\n      history.push('/profile/albums');\r\n    } catch (err) {\r\n      message.error('что-то пошло не так');\r\n    }\r\n  };\r\n\r\n  addPhotoToDeleteArray(photoId) {\r\n    this.setState(({ photosToDelete }) => {\r\n      const isIncludes = photosToDelete.includes(photoId);\r\n      return {\r\n        photosToDelete: isIncludes\r\n          ? photosToDelete.filter(id => id !== photoId)\r\n          : [...photosToDelete, photoId],\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      location: { state },\r\n    } = this.props;\r\n    // TODO: сделать нормально\r\n    const { photoAlbumId } = state;\r\n    const { photoTempUlr, photos, photosToDelete, thumbImageId, visible, title } = this.state;\r\n    return (\r\n      <div>\r\n        <Modal\r\n          title=\"Выберите новую абложку альбома\"\r\n          visible={visible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {photos.map(photo => (\r\n            <ChooseNewCoverSectionImage\r\n              src={`${photoTempUlr}${photo.photoID}`}\r\n              key={photo.photoID}\r\n              onClick={this.handleOk(photo)}\r\n            />\r\n          ))}\r\n        </Modal>\r\n\r\n        <div>\r\n          <Link to=\"/profile/albums\">Альбомы </Link>\r\n          {'>'}\r\n          <Link\r\n            to={{\r\n              pathname: `/profile/albums/${photoAlbumId}`,\r\n              state,\r\n            }}\r\n          >\r\n            {' '}\r\n            {`${title}`}{' '}\r\n          </Link>\r\n          {'>'} <span>Редактировать альбом</span>\r\n        </div>\r\n        <EditSection>\r\n          <EditMenu>\r\n            <div>Обложка альбома</div>\r\n            <StyledImage\r\n              src={thumbImageId ? `${photoTempUlr}${thumbImageId}` : `/defaultAlbumPicture.jpg`}\r\n              alt=\"обложка альбома\"\r\n            />\r\n            <Button block onClick={this.showModal}>\r\n              Изменить\r\n            </Button>\r\n            <EditSectionAlbumTitle>Название альбома</EditSectionAlbumTitle>\r\n            <Input onChange={evt => this.setState({ title: evt.target.value })} value={title} />\r\n            <SaveChanges onClick={this.handleSubmit} block>\r\n              Сохранить изменения\r\n            </SaveChanges>\r\n            {photosToDelete.length > 0 ? (\r\n              <Button block type=\"danger\" onClick={this.handleDeletePhotos}>\r\n                Удалить фотографии\r\n              </Button>\r\n            ) : null}\r\n          </EditMenu>\r\n\r\n          <Galery>\r\n            <GaleryTitle>Фотографии альбома</GaleryTitle>\r\n            <GaleryImages>\r\n              {photos.map(photo => (\r\n                <EditAlbumImageWrapper key={photo.photoID}>\r\n                  <StyledImage src={`${photoTempUlr}${photo.photoID}`} />\r\n                  <ChoosePhotoButton\r\n                    shape=\"circle\"\r\n                    icon={photosToDelete.includes(photo.photoID) ? 'check' : undefined}\r\n                    onClick={() => this.addPhotoToDeleteArray(photo.photoID)}\r\n                  />\r\n                </EditAlbumImageWrapper>\r\n              ))}\r\n            </GaleryImages>\r\n          </Galery>\r\n        </EditSection>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditAlbum.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  location: PropTypes.shape({\r\n    state: PropTypes.shape({\r\n      photoAlbumId: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      thumbImageId: PropTypes.number,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(EditAlbum);\r\n","import React, { useState } from 'react';\r\nimport { Switch, Route, useHistory, useRouteMatch, useLocation } from 'react-router-dom';\r\nimport { Radio } from 'antd';\r\n\r\nimport EditProfile from './EditProfile';\r\nimport EditAvatar from './EditAvatar';\r\n\r\nimport MainProfile from './MainProfile';\r\nimport Messages from './Messages';\r\nimport Themes from './Themes';\r\nimport Subscriptions from './Subscriptions';\r\nimport Invite from './Invite';\r\nimport Albums from './Albums/Albums';\r\nimport Album from './Albums/Album';\r\nimport EditAlbum from './Albums/EditAlbum';\r\n\r\nconst Profile = () => {\r\n  const { path } = useRouteMatch();\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n  const endPoint = pathname.split('/').pop();\r\n  const [currentPage, setPage] = useState(endPoint === 'profile' ? '' : endPoint);\r\n\r\n  const changePage = ({ target: { value } }) => {\r\n    history.push(`${path}/${value}`);\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}/edit`} component={EditProfile} />\r\n      <Route path={`${path}/avatar`} component={EditAvatar} />\r\n      <Route path=\"*\">\r\n        <h2>Профиль пользователя</h2>\r\n        <div>\r\n          <Radio.Group value={currentPage} onChange={changePage} style={{ marginBottom: 20 }}>\r\n            <Radio.Button value=\"\">Профиль</Radio.Button>\r\n            <Radio.Button value=\"messages\">Сообщения</Radio.Button>\r\n            <Radio.Button value=\"themes\">Темы</Radio.Button>\r\n            <Radio.Button value=\"subscriptions\">Подписки</Radio.Button>\r\n            <Radio.Button value=\"invite\">Пригласить друга</Radio.Button>\r\n            <Radio.Button value=\"albums\">Мои альбомы</Radio.Button>\r\n          </Radio.Group>\r\n        </div>\r\n        <Switch>\r\n          <Route exact path={`${path}/`} component={MainProfile} />\r\n          <Route path={`${path}/messages`} component={Messages} />\r\n          <Route path={`${path}/themes`} component={Themes} />\r\n          <Route path={`${path}/subscriptions`} component={Subscriptions} />\r\n          <Route path={`${path}/invite`} component={Invite} />\r\n          <Route exact path={`${path}/albums/:id`} component={Album} />\r\n          <Route exact path={`${path}/albums`} component={Albums} />\r\n          <Route exact path={`${path}/albums/editAlbum/:id`} component={EditAlbum} />\r\n        </Switch>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  overflow: auto;\r\n  overflow-y: scroll;\r\n  padding: 0 20px 0 20px;\r\n  height: 100%;\r\n  width: 80%;\r\n  border-left: 1px solid #e8e8e8;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  line-height: 1.5rem;\r\n  padding: 10px 20px;\r\n  margin: 0;\r\n  border-bottom: 1px solid #f4f4f4;\r\n`;\r\n\r\nexport const GreetingContainer = styled.div`\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin: 0 auto;\r\n  background: #fff;\r\n  box-shadow: 0 1px 11px rgba(0, 0, 0, 0.27);\r\n  border-radius: 2px;\r\n  max-width: 500px;\r\n`;\r\n\r\nexport const ChatContainer = styled.div`\r\n  max-width: 700px;\r\n  margin: 30px auto 0;\r\n  background-color: #fff;\r\n  box-shadow: 0 1px 11px rgba(0, 0, 0, 0.27);\r\n  height: calc(100% - 60px);\r\n  max-height: 700px;\r\n  position: relative;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  text-align: center;\r\n  padding: 15px;\r\n  padding-bottom: 0;\r\n  border-bottom: 1px solid #e8e8e8;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  background: none;\r\n  border: none;\r\n  right: 20px;\r\n  top: 15px;\r\n  width: 32px;\r\n  height: 32px;\r\n  opacity: 0.3;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n    cursor: pointer;\r\n  }\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 0;\r\n    content: ' ';\r\n    height: 33px;\r\n    width: 2px;\r\n    background-color: #333;\r\n  }\r\n  &:before {\r\n    transform: rotate(45deg);\r\n  }\r\n  &:after {\r\n    transform: rotate(-45deg);\r\n  }\r\n`;\r\n\r\nexport const Main = styled.div`\r\n  display: flex;\r\n  height: 350px;\r\n`;\r\n\r\nexport const UserListTitle = styled.h3`\r\n  margin: 20px 0 20px 5px;\r\n  font-weight: 300;\r\n  display: inline-block;\r\n`;\r\n\r\nconst pulse = keyframes`\r\n25% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.2);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const OnlineLED = styled.span`\r\n  background: #28b62c;\r\n  display: inline-block;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin-bottom: 2px;\r\n  margin-left: 20px;\r\n  border-radius: 50%;\r\n  animation: ${pulse} 2s infinite linear;\r\n`;\r\n\r\nexport const UserList = styled(Ul)`\r\n  border: none;\r\n  height: 80%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const User = styled(Li)`\r\n  border: none;\r\n  padding: 5px;\r\n`;\r\n\r\nexport const UserLink = styled.a`\r\n  color: #333;\r\n  &:hover {\r\n    color: #128ff2;\r\n  }\r\n`;\r\n\r\nexport const MessageList = styled(Ul)`\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  -webkit-overflow-scrolling: touch;\r\n  height: 100%;\r\n  position: relative;\r\n  scroll-behavior: smooth;\r\n`;\r\n\r\nexport const Message = styled(Li)`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px 20px 10px 68px;\r\n  color: black;\r\n  border-bottom-width: 1px;\r\n  border-bottom-style: solid;\r\n  border-bottom-color: ${props => (props.toMe ? '#128ff2' : '#f4f4f4')};\r\n`;\r\n\r\nexport const EventMessage = styled(Li)`\r\n  text-align: center;\r\n`;\r\n\r\nexport const MessageAvatar = styled.img`\r\n  position: absolute;\r\n  width: 42px;\r\n  height: 42px;\r\n  left: 10px;\r\n  top: 10px;\r\n  border: 1px solid #128ff2;\r\n  border-radius: 50%;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const MessageAuthor = styled.div`\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const MessageImage = styled.img`\r\n  margin: 10px 0;\r\n  max-height: 250px;\r\n`;\r\n\r\nexport const MessageDate = styled.span`\r\n  color: #888888;\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const MessageText = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nexport const MessageInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n\r\n  .message-delete {\r\n    cursor: pointer;\r\n    padding: none;\r\n    background: inherit;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const ScrollToTopButton = styled.button`\r\n  position: fixed;\r\n  top: 170px;\r\n  left: 50%;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  padding: 0;\r\n  background-color: #fff;\r\n  border: 1px solid #128ff2;\r\n  cursor: pointer;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const Arrow = styled.span`\r\n  border: solid #128ff2;\r\n  border-width: 0 3px 3px 0;\r\n  display: inline-block;\r\n  padding: 3px;\r\n  transform: rotate(-135deg);\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport throttle from 'lodash/throttle';\r\nimport { Input, Button, message as systemMessage, Icon, Tooltip } from 'antd';\r\nimport { BASE_URL } from '../../constants';\r\nimport {\r\n  ChatContainer,\r\n  Header,\r\n  CloseButton,\r\n  Main,\r\n  UserListTitle,\r\n  OnlineLED,\r\n  UserList,\r\n  User,\r\n  UserLink,\r\n  MessageList,\r\n  Message,\r\n  EventMessage,\r\n  MessageAvatar,\r\n  MessageAuthor,\r\n  MessageImage,\r\n  MessageDate,\r\n  MessageText,\r\n  MessageInner,\r\n  ScrollToTopButton,\r\n  Arrow,\r\n  Form,\r\n  Footer,\r\n} from './styled';\r\n\r\nconst url = BASE_URL;\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { message: '', file: null, filePath: '', replyTo: null, hasScrolled: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.trottledFunction = throttle(this.onScroll, 150);\r\n    this.scrollingWrapper.addEventListener('scroll', this.trottledFunction);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.scrollingWrapper.removeEventListener('scroll', this.trottledFunction);\r\n  }\r\n\r\n  handleChangeMessage = event => {\r\n    this.setState({ message: event.target.value });\r\n  };\r\n\r\n  handleChangeFile = async event => {\r\n    const { size } = event.target.files[0];\r\n    if (size / 1024 / 1024 > 20) {\r\n      systemMessage.error('Отправляемый файл не может быть больше 20 Мб');\r\n      return;\r\n    }\r\n    this.setState({ filePath: event.target.value });\r\n  };\r\n\r\n  uploadFile = async () => {\r\n    const { filePath } = this.state;\r\n    const { postFile } = this.props;\r\n    if (!filePath) return;\r\n    const form = document.querySelector('.message-form');\r\n    const formData = new FormData(form);\r\n    const file = await postFile(formData);\r\n    this.setState({ file });\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ message: '', file: null, filePath: '' });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    await this.uploadFile();\r\n    const { sendMessage } = this.props;\r\n    const { message, file, replyTo } = this.state;\r\n    sendMessage(message, file, replyTo);\r\n    this.resetForm();\r\n  };\r\n\r\n  handleShowFull = () => {\r\n    const { getMessages } = this.props;\r\n    getMessages(true);\r\n    this.scrollingWrapper.scrollTop = 0;\r\n  };\r\n\r\n  wrapLink = text => {\r\n    const reg = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\r\n    const textSplitOfLinks = text.split(reg);\r\n    const result = textSplitOfLinks.map((el, index) =>\r\n      index % 2 === 0 ? (\r\n        el\r\n      ) : (\r\n        <a href={el} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {el}\r\n        </a>\r\n      )\r\n    );\r\n    return result;\r\n  };\r\n\r\n  drawMessage = msg => {\r\n    const { user, deleteCurrentMessage } = this.props;\r\n    const isSender = user.nickName === msg.sender;\r\n    if (msg.type === 'MESSAGE') {\r\n      const urlAvatar = msg.senderAvatar === null ? 'default-sm.png' : msg.senderAvatar;\r\n      return (\r\n        <Message toMe={user.nickName === msg.replyTo} key={msg.id}>\r\n          <MessageAvatar\r\n            alt=\"avatar\"\r\n            src={`${url}img/${urlAvatar}`}\r\n            onClick={() => this.setState({ replyTo: msg.sender, message: `${msg.sender}, ` })}\r\n          />\r\n          <div>\r\n            <MessageAuthor>{msg.sender}</MessageAuthor>\r\n            {msg.originalImg ? (\r\n              <a\r\n                rel=\"noopener noreferrer\"\r\n                href={`${url}img/chat/${msg.originalImg}`}\r\n                target=\"_blank\"\r\n              >\r\n                <MessageImage\r\n                  alt=\"picture\"\r\n                  className=\"message-image\"\r\n                  src={`${url}img/chat/${msg.thumbnailImg}`}\r\n                />\r\n              </a>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {msg.filePath ? (\r\n              <div>\r\n                <a href={`${url}img/chat/${msg.filePath}`} download>\r\n                  {msg.fileName}\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <MessageText className=\"message-text\">{this.wrapLink(msg.text)}</MessageText>\r\n          </div>\r\n          <MessageInner>\r\n            {isSender ? (\r\n              <Tooltip placement=\"topRight\" title=\"Удалить\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"message-delete\"\r\n                  onClick={() => deleteCurrentMessage(msg.id)}\r\n                >\r\n                  <Icon type=\"delete\" theme=\"twoTone\" />\r\n                </button>\r\n              </Tooltip>\r\n            ) : null}\r\n            <MessageDate className=\"message-date\">{msg.messageDate}</MessageDate>\r\n          </MessageInner>\r\n        </Message>\r\n      );\r\n    }\r\n    return (\r\n      <EventMessage className=\"event-message\" key={msg.id}>\r\n        {`${msg.sender} ${msg.type === 'LEAVE' ? 'покинул чат' : 'присоединился'}`}\r\n      </EventMessage>\r\n    );\r\n  };\r\n\r\n  onScroll = () => {\r\n    const { hasScrolled } = this.state;\r\n    if (this.scrollingWrapper.scrollTop > 100 && !hasScrolled) {\r\n      this.setState({ hasScrolled: true });\r\n    } else if (this.scrollingWrapper.scrollTop < 100 && hasScrolled) {\r\n      this.setState({ hasScrolled: false });\r\n    }\r\n  };\r\n\r\n  reference = id => ref => {\r\n    this[id] = ref;\r\n  };\r\n\r\n  render() {\r\n    const { handleDisconnect, messages, usersOnline, label } = this.props;\r\n    const { message, filePath, hasScrolled } = this.state;\r\n    return (\r\n      <section>\r\n        <ChatContainer>\r\n          <Header>\r\n            <h2>{label}</h2>\r\n            <CloseButton onClick={handleDisconnect} />\r\n          </Header>\r\n          <Main>\r\n            <div style={{ width: '20%' }}>\r\n              <OnlineLED />\r\n              <UserListTitle>Online:</UserListTitle>\r\n              <UserList>\r\n                {Object.entries(usersOnline).map(user => {\r\n                  const [username, id] = user;\r\n                  return (\r\n                    <User key={user}>\r\n                      <UserLink href={`/anotheruser/${id}`}>{username}</UserLink>\r\n                    </User>\r\n                  );\r\n                })}\r\n              </UserList>\r\n            </div>\r\n            <div style={{ width: '80%' }}>\r\n              <MessageList className=\"message-list\" ref={this.reference('scrollingWrapper')}>\r\n                {hasScrolled && (\r\n                  <ScrollToTopButton onClick={this.handleShowFull}>\r\n                    <Arrow />\r\n                  </ScrollToTopButton>\r\n                )}\r\n                {messages.map(msg => this.drawMessage(msg))}\r\n              </MessageList>\r\n            </div>\r\n          </Main>\r\n\r\n          <Form className=\"message-form\" onSubmit={this.handleSubmit}>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Введите сообщение...\"\r\n              className=\"message-input\"\r\n              value={message}\r\n              onChange={this.handleChangeMessage}\r\n            />\r\n            <Footer>\r\n              <input\r\n                type=\"file\"\r\n                onChange={this.handleChangeFile}\r\n                value={filePath}\r\n                name=\"file-input\"\r\n              />\r\n              <Button type=\"primary\" className=\"send-button\" htmlType=\"submit\">\r\n                Отправить\r\n              </Button>\r\n            </Footer>\r\n          </Form>\r\n        </ChatContainer>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n\r\nChat.propTypes = {\r\n  sendMessage: PropTypes.func.isRequired,\r\n  deleteCurrentMessage: PropTypes.func.isRequired,\r\n  getMessages: PropTypes.func.isRequired,\r\n  handleDisconnect: PropTypes.func.isRequired,\r\n  user: PropTypes.shape({\r\n    nickName: PropTypes.string,\r\n  }),\r\n  usersOnline: PropTypes.shape({}),\r\n  messages: PropTypes.arrayOf(PropTypes.object),\r\n  postFile: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nChat.defaultProps = {\r\n  user: null,\r\n  usersOnline: {},\r\n  messages: [],\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { GreetingContainer } from './styled';\r\n\r\nconst Greeting = ({ handleConnect }) => (\r\n  <div className=\"greeting\">\r\n    <GreetingContainer>\r\n      <h1 className=\"title\">Общий Чат</h1>\r\n      <p>Познакомьтесь с Клубом и общайтесь с другими участниками!</p>\r\n      <div className=\"form-group\">\r\n        <Button\r\n          htmlType=\"submit\"\r\n          type=\"primary\"\r\n          className=\"accent greeting-submit\"\r\n          onClick={handleConnect}\r\n        >\r\n          Присоединиться\r\n        </Button>\r\n      </div>\r\n    </GreetingContainer>\r\n  </div>\r\n);\r\n\r\nexport default Greeting;\r\n\r\nGreeting.propTypes = {\r\n  handleConnect: PropTypes.func.isRequired,\r\n};\r\n","/* eslint-disable no-await-in-loop */\r\nimport uniqueId from 'lodash/uniqueId';\r\nimport React from 'react';\r\nimport Stomp from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport PropTypes from 'prop-types';\r\nimport { BASE_URL } from '../../constants';\r\nimport Chat from './Chat';\r\nimport Greeting from './Greeting';\r\nimport queries from '../../serverQueries';\r\n\r\nconst url = BASE_URL;\r\n\r\nclass ChatAuth extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { user } = this.props;\r\n    this.state = { isJoin: false, user, usersOnline: {}, messages: [] };\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.disconnect();\r\n  };\r\n\r\n  connect = async event => {\r\n    event.preventDefault();\r\n    const isForb = await queries.isForbidden();\r\n    if (isForb) {\r\n      // banned user\r\n    } else {\r\n      const currentUser = await queries.getCurrentUser();\r\n      if (currentUser.username) {\r\n        const socket = new SockJS(`${url}ws`, null, {});\r\n        this.stompClient = Stomp.over(socket);\r\n        this.stompClient.connect({}, this.onConnected, () => {});\r\n      }\r\n    }\r\n  };\r\n\r\n  disconnect = () => {\r\n    const { user } = this.state;\r\n    if (this.stompClient) {\r\n      this.stompClient.send(\r\n        `chat/delUser`,\r\n        {},\r\n        JSON.stringify({ sender: user.nickName, type: 'LEAVE' })\r\n      );\r\n      this.stompClient.unsubscribe(`/channel/public`);\r\n      this.stompClient.disconnect();\r\n    }\r\n    this.setState({ isJoin: false });\r\n  };\r\n\r\n  onConnected = () => {\r\n    this.setState({ isJoin: true });\r\n    this.stompClient.subscribe(`/channel/public`, this.onMessageRecieved, {});\r\n    const { user } = this.state;\r\n    this.getMessages();\r\n    this.stompClient.send(\r\n      `/chat/addUser`,\r\n      {},\r\n      JSON.stringify({ sender: user.nickName, type: 'JOIN' })\r\n    );\r\n  };\r\n\r\n  getUsersOnline = async () => {\r\n    // this.setState({ usersOnline: {} });\r\n    const usersOnline = await queries.getAllUsers();\r\n    this.setState({ usersOnline });\r\n  };\r\n\r\n  getMessages = async (isFull = false) => {\r\n    if (isFull) {\r\n      let status = 200;\r\n      let page = 0;\r\n      let messages = [];\r\n      while (status === 200) {\r\n        const response = await queries.getAllMessages(page);\r\n        status = response.status;\r\n        page += 1;\r\n        messages = [...messages, ...response.data];\r\n      }\r\n      this.setState({ messages: messages.slice().reverse() });\r\n    } else {\r\n      const { data } = await queries.getAllMessages(0);\r\n      this.setState({ messages: data ? data.slice().reverse() : [] });\r\n    }\r\n  };\r\n\r\n  sendMessage = (msg, file, replyTo = null) => {\r\n    if (msg || file) {\r\n      const { user } = this.props;\r\n      const message = {\r\n        sender: user.nickName,\r\n        text: msg,\r\n        senderAvatar: user.avatar,\r\n        replyTo,\r\n        type: 'MESSAGE',\r\n        ...file,\r\n      };\r\n      this.stompClient.send(`/chat/sendMessage`, {}, JSON.stringify(message));\r\n    }\r\n  };\r\n\r\n  onMessageRecieved = payload => {\r\n    const message = JSON.parse(payload.body);\r\n\r\n    // fakeId - это костыль, чтобы избежать постоянного перерендера\r\n    // т.к. уникального ключа для событий c type JOIN/LEAVE нет\r\n    if (!message.id) {\r\n      message.id = uniqueId('fakeId-');\r\n    }\r\n\r\n    this.setState(state => ({\r\n      messages: [...state.messages, message],\r\n    }));\r\n    this.getUsersOnline();\r\n    setTimeout(() => {\r\n      const lastMessage = document.querySelector('.message-list li:last-of-type');\r\n      lastMessage.scrollIntoView();\r\n    }, 200);\r\n  };\r\n\r\n  deleteCurrentMessage = async id => {\r\n    const { messages } = this.state;\r\n    queries.deleteMessage(id);\r\n    this.setState({ messages: messages.filter(msg => msg.id !== id) });\r\n  };\r\n\r\n  render() {\r\n    const { isJoin, messages, usersOnline } = this.state;\r\n    const { user } = this.props;\r\n    return !isJoin ? (\r\n      <Greeting handleConnect={this.connect} />\r\n    ) : (\r\n      <Chat\r\n        handleDisconnect={this.disconnect}\r\n        deleteCurrentMessage={this.deleteCurrentMessage}\r\n        usersOnline={usersOnline}\r\n        messages={messages}\r\n        sendMessage={this.sendMessage}\r\n        user={user}\r\n        getMessages={this.getMessages}\r\n        postFile={queries.postFile}\r\n        label=\"Общий чат\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatAuth;\r\n\r\nChatAuth.propTypes = {\r\n  user: PropTypes.shape({\r\n    nickName: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n  }),\r\n};\r\n\r\nChatAuth.defaultProps = {\r\n  user: null,\r\n};\r\n","/* eslint-disable no-await-in-loop */\r\nimport uniqueId from 'lodash/uniqueId';\r\nimport React from 'react';\r\nimport Stomp from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { BASE_URL } from '../../constants';\r\nimport queries from '../../serverQueries';\r\nimport Chat from './Chat';\r\n\r\nconst url = BASE_URL;\r\n\r\nclass PrivateChat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { user } = this.props;\r\n    this.state = { user, anotherUserId: null, anotherUserNick: '', messages: [], show: false };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const { user } = this.state;\r\n    const { match = {} } = this.props;\r\n    const { id = null } = match.params;\r\n    if (Number(user.id) === Number(id)) {\r\n      return;\r\n    }\r\n    const anotherUser = await queries.getAnotherUserData(id);\r\n    if (anotherUser) {\r\n      const chatToken = await queries.getPersonalToken(anotherUser.userId, user);\r\n      this.setState({\r\n        chatToken,\r\n        anotherUserId: anotherUser.userId,\r\n        anotherUserNick: anotherUser.nickName,\r\n        show: true,\r\n      });\r\n      this.connect(chatToken);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    const { anotherUserId } = this.state;\r\n    if (anotherUserId) {\r\n      this.disconnect();\r\n    }\r\n  };\r\n\r\n  connect = async token => {\r\n    const socket = new SockJS(`${url}ws`, null, {});\r\n    this.stompClient = Stomp.over(socket);\r\n    this.stompClient.connect({}, () => {\r\n      this.stompClient.subscribe(`/channel/private/${token}`, this.onMessageRecieved, {});\r\n      this.getMessages();\r\n    });\r\n  };\r\n\r\n  disconnect = () => {\r\n    const { chatToken } = this.state;\r\n    const { history } = this.props;\r\n    this.stompClient.unsubscribe(`/channel/private/${chatToken}`);\r\n    this.stompClient.disconnect();\r\n    history.push(`/`);\r\n  };\r\n\r\n  sendMessage = async (msg, file, replyTo = null) => {\r\n    const { chatToken, user } = this.state;\r\n    if (msg || file) {\r\n      const message = {\r\n        sender: user.nickName,\r\n        text: msg,\r\n        senderAvatar: user.avatar,\r\n        replyTo,\r\n        type: 'MESSAGE',\r\n        ...file,\r\n      };\r\n      this.stompClient.send(`/chat/send/${chatToken}`, {}, JSON.stringify(message));\r\n    }\r\n  };\r\n\r\n  getMessages = async (isFull = false) => {\r\n    const { chatToken } = this.state;\r\n    if (isFull) {\r\n      let status = 200;\r\n      let page = 0;\r\n      let messages = [];\r\n      while (status === 200) {\r\n        const response = await queries.getPersonalMessage(chatToken, page);\r\n        status = response.status;\r\n        page += 1;\r\n        messages = [...messages, ...response.data];\r\n      }\r\n      this.setState({ messages: messages.reverse() });\r\n    } else {\r\n      const { data } = await queries.getPersonalMessage(chatToken, 0);\r\n      this.setState({ messages: data ? data.reverse() : [] });\r\n    }\r\n  };\r\n\r\n  onMessageRecieved = payload => {\r\n    const message = JSON.parse(payload.body);\r\n    // fakeId - это костыль, чтобы избежать постоянного перерендера\r\n    // т.к. уникального ключа для событий c type JOIN/LEAVE нет\r\n    if (!message.id) {\r\n      message.id = uniqueId('fakeId-');\r\n    }\r\n    this.setState(state => ({ messages: [...state.messages, message] }));\r\n    setTimeout(() => {\r\n      const lastMessage = document.querySelector('.message-list li:last-of-type');\r\n      lastMessage.scrollIntoView();\r\n    }, 200);\r\n  };\r\n\r\n  postFile = chatToken => async formData => queries.postFilePersonalChat(formData, chatToken);\r\n\r\n  deleteCurrentMessage = async () => {\r\n    // TO-DO на беке нет функционала\r\n  };\r\n\r\n  render() {\r\n    const { messages, user, chatToken, anotherUserNick, show } = this.state;\r\n    if (!show) {\r\n      return '';\r\n    }\r\n    return (\r\n      <>\r\n        <Chat\r\n          handleDisconnect={this.disconnect}\r\n          deleteCurrentMessage={this.deleteCurrentMessage}\r\n          messages={messages}\r\n          sendMessage={this.sendMessage}\r\n          user={user}\r\n          postFile={this.postFile(chatToken)}\r\n          label={`Персональный чат с ${anotherUserNick}`}\r\n          getMessages={this.getMessages}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PrivateChat);\r\n\r\nPrivateChat.propTypes = {\r\n  user: PropTypes.shape({\r\n    nickName: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n  }),\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  }),\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nPrivateChat.defaultProps = {\r\n  user: null,\r\n  match: { params: { id: null } },\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isEmpty } from 'lodash';\r\nimport { Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport serverQueries from '../../serverQueries';\r\n\r\nconst LinkToUserPage = ({ id }) => {\r\n  const [user, setUser] = useState({});\r\n  useEffect(() => {\r\n    serverQueries.getUserById(id).then(setUser);\r\n  }, [id]);\r\n\r\n  const { nickName, accountNonLocked } = user;\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/admin-panel/users/${id}`}>{nickName}</Link>{' '}\r\n      {!isEmpty(user) && !accountNonLocked && <Icon type=\"lock\" style={{ color: '#eb2f96' }} />}\r\n    </>\r\n  );\r\n};\r\n\r\nLinkToUserPage.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default LinkToUserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table } from 'antd';\r\nimport serverQueries from '../../serverQueries';\r\nimport { dateToDateDistance } from '../../utils';\r\nimport LinkToUserPage from './LinkToUserPage';\r\n\r\nconst UsersList = () => {\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [pageParams, setPageParams] = useState({ total: 0, pageSize: 5, currentPage: 0 });\r\n\r\n  useEffect(() => {\r\n    serverQueries.getUsersList(0).then(({ users, usersCount }) => {\r\n      setUsersList(users);\r\n      setPageParams({ total: usersCount });\r\n    });\r\n  }, []);\r\n\r\n  const handlepageChange = ({ current }) => {\r\n    serverQueries.getUsersList(current - 1).then(({ users }) => {\r\n      setUsersList(users);\r\n    });\r\n    setPageParams({ currentPage: current });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Никнейм',\r\n      dataIndex: 'nickName',\r\n      render: (text, { userStatisticId }) => <LinkToUserPage id={userStatisticId} />,\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Зарегистрирован',\r\n      dataIndex: 'registered',\r\n      render: dt => dateToDateDistance(dt),\r\n    },\r\n    {\r\n      title: 'Последний визит',\r\n      dataIndex: 'lastVizit',\r\n      render: dt => dateToDateDistance(dt),\r\n    },\r\n    {\r\n      title: 'Роль',\r\n      dataIndex: 'role',\r\n      render: roleName =>\r\n        roleName\r\n          .split('ROLE_')\r\n          .join('')\r\n          .toLowerCase(),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      rowKey=\"email\"\r\n      columns={columns}\r\n      dataSource={usersList}\r\n      pagination={pageParams}\r\n      onChange={handlepageChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Tree, Icon } from 'antd';\r\n\r\nconst InvitedUsersBlock = styled.div`\r\n  display: flex;\r\n  align-items: top;\r\n`;\r\n\r\nconst InvitedUsersTree = ({ treeData }) => {\r\n  const currentElem = treeData.find(item => item.deepTree === 0) || {};\r\n  const { userParentId = null } = currentElem;\r\n\r\n  const constructTree = (data, parentId) => {\r\n    return data\r\n      .filter(item => item.userParentId === parentId)\r\n      .map(item => ({\r\n        ...item,\r\n        key: item.userId,\r\n        title: item.nickName,\r\n        icon: <Icon type=\"user\" />,\r\n        children: constructTree(data, item.userId),\r\n      }));\r\n  };\r\n\r\n  return (\r\n    treeData.length > 1 && (\r\n      <InvitedUsersBlock>\r\n        <span>Дерево приглашённых пользователей:</span>\r\n        {\r\n          <Tree\r\n            style={{ display: 'inline-block' }}\r\n            showIcon\r\n            treeData={constructTree(treeData, userParentId)}\r\n          />\r\n        }\r\n      </InvitedUsersBlock>\r\n    )\r\n  );\r\n};\r\n\r\nInvitedUsersTree.propTypes = {\r\n  treeData: PropTypes.instanceOf(Array).isRequired,\r\n};\r\n\r\nexport default InvitedUsersTree;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport serverQueries from '../../serverQueries';\r\nimport AdminMenu from '../AdminMenu';\r\nimport InvitedUsersTree from './InvitedUsersTree';\r\n\r\nconst UserInfoBlock = styled.div`\r\n  padding: 20px;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Clear = styled.span`\r\n  color: green;\r\n`;\r\n\r\nconst Banned = styled.span`\r\n  color: red;\r\n`;\r\n\r\nconst UserInfo = () => {\r\n  const [user, setUser] = useState({});\r\n  const [tree, setTree] = useState([]);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    serverQueries.getUsersTree(id, 5).then(setTree);\r\n    serverQueries.getUserById(id).then(setUser);\r\n  }, [id]);\r\n\r\n  const { nickName, accountNonLocked } = user;\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={() => history.go(-1)}>\r\n        Назад\r\n      </Button>\r\n      <UserInfoBlock>\r\n        <p>\r\n          Никнейм: <b>{nickName}</b>\r\n        </p>\r\n        <p>\r\n          Статус бана: {accountNonLocked ? <Clear>Отсутствует</Clear> : <Banned>Забанен</Banned>}\r\n        </p>\r\n        <AdminMenu user={user} updateUser={setUser} />\r\n        <InvitedUsersTree treeData={tree} />\r\n      </UserInfoBlock>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Form, Input, Icon, Button, Alert } from 'antd';\r\nimport serverQueries from '../../serverQueries';\r\n\r\nconst SendMailBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst SubmitButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst formStyles = { width: '500px' };\r\n\r\nconst MailingLetters = () => {\r\n  const [sendingStatus, setSendingStatus] = useState('');\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    subject: Yup.string().required('Обязательное поле'),\r\n    message: Yup.string().required('Обязательное поле'),\r\n  });\r\n\r\n  return (\r\n    <SendMailBlock>\r\n      <h2>Отправить сообщение всем пользователям</h2>\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        initialValues={{ subject: '', message: '' }}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          setSubmitting(true);\r\n          serverQueries\r\n            .sendMailToAllUsers(values)\r\n            .then(() => {\r\n              setSendingStatus('success');\r\n              setSubmitting(false);\r\n              resetForm();\r\n            })\r\n            .catch(err => {\r\n              setSendingStatus('error');\r\n              setSubmitting(false);\r\n              throw err;\r\n            });\r\n        }}\r\n      >\r\n        {({ values, errors, touched, isSubmitting, handleBlur, handleChange, handleSubmit }) => (\r\n          <Form onSubmit={handleSubmit} style={formStyles}>\r\n            <Form.Item\r\n              validateStatus={touched.subject && errors.subject ? 'error' : null}\r\n              help={touched.subject && errors.subject ? errors.subject : null}\r\n            >\r\n              <Input\r\n                type=\"subject\"\r\n                id=\"subject\"\r\n                prefix={<Icon type=\"mail\" />}\r\n                placeholder=\"Введите заголовок\"\r\n                value={values.subject}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              validateStatus={touched.message && errors.message ? 'error' : null}\r\n              help={touched.message && errors.message ? errors.message : null}\r\n            >\r\n              <Input.TextArea\r\n                autoSize={{ minRows: 8, maxRows: 8 }}\r\n                type=\"message\"\r\n                id=\"message\"\r\n                prefix={<Icon type=\"mail\" />}\r\n                placeholder=\"Введите сообщение\"\r\n                value={values.message}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <SubmitButtonWrapper>\r\n                <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\r\n                  Отправить\r\n                </Button>\r\n              </SubmitButtonWrapper>\r\n            </Form.Item>\r\n            {sendingStatus === 'success' && <Alert type=\"success\" message=\"Сообщение отправлено\" />}\r\n            {sendingStatus === 'error' && <Alert type=\"error\" message=\"Сообщение не отправлено\" />}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </SendMailBlock>\r\n  );\r\n};\r\n\r\nexport default MailingLetters;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queries from '../../serverQueries';\r\nimport ArticleForm from '../forms/ArticleForm';\r\nimport { StyledHeader } from '../Articles/styled';\r\n\r\nconst createArticle = async values => {\r\n  const { title, text, ...params } = values;\r\n  const data = await queries.createArticle({ title, text }, params);\r\n  return data;\r\n};\r\n\r\nconst ArticleCreate = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <StyledHeader>Создание статьи</StyledHeader>\r\n      <ArticleForm\r\n        onSubmit={createArticle}\r\n        onSubmitSuccess={({ id }) => history.push(`/article/${id}`)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticleCreate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from 'antd';\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\n\r\nconst validationSchema = Yup.object({\r\n  text: Yup.string()\r\n    .required('Это поле обязательно')\r\n    .max(20, 'Слишком длинное поле'),\r\n});\r\n\r\nconst TagsForm = ({ text, onSubmit, left }) => {\r\n  const onSubmitWrapper = async (data, { resetForm, setSubmitting }) => {\r\n    try {\r\n      await onSubmit(data);\r\n      setSubmitting(false);\r\n      resetForm();\r\n    } catch (error) {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik initialValues={{ text }} validationSchema={validationSchema} onSubmit={onSubmitWrapper}>\r\n      {({ touched, errors, handleSubmit, submitting }) => {\r\n        return (\r\n          <Form onSubmit={handleSubmit} style={{ marginLeft: left }}>\r\n            <Field name=\"text\" />\r\n            <ErrorMessage name=\"text\" component=\"div\" style={{ color: 'tomato' }} />\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                disabled={!!touched.message && !!errors.message}\r\n                loading={submitting}\r\n              >\r\n                Отправить\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nTagsForm.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  left: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TagsForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, Spin, Icon } from 'antd';\r\nimport styled from 'styled-components';\r\nimport queries from '../../serverQueries/index';\r\nimport TagsForm from '../forms/TagsForm';\r\n\r\nconst ShowEditorForm = ({ text, left, onSubmit }) => (\r\n  <TagsForm text={text} left={left} onSubmit={onSubmit} />\r\n);\r\n\r\nShowEditorForm.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  left: PropTypes.string.isRequired,\r\n};\r\n\r\nconst EditIcon = ({ onClick }) => (\r\n  <Icon type=\"edit\" theme=\"outlined\" onClick={onClick} style={{ marginRight: '10px' }} />\r\n);\r\n\r\nEditIcon.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst DeleteIcon = ({ onClick }) => <Icon type=\"delete\" theme=\"outlined\" onClick={onClick} />;\r\n\r\nDeleteIcon.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ArticlesTagsEdit = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [editTagsId, setEditTagsId] = useState(-1);\r\n  const [eventType, setEventType] = useState('add');\r\n  const blankTag = { id: -1, position: 1, parentId: -1 };\r\n\r\n  const fetchTags = async () => {\r\n    try {\r\n      const tags = await queries.getTagsDtoTree();\r\n      setMenuItems(tags);\r\n    } catch (err) {\r\n      setMenuItems([]);\r\n    }\r\n  };\r\n\r\n  const addTag = async data => {\r\n    await queries.addNewTagTree(data);\r\n    fetchTags();\r\n  };\r\n\r\n  const updateTag = async data => {\r\n    await queries.updateTagsTree(data);\r\n    fetchTags();\r\n  };\r\n\r\n  const delTag = id => async () => {\r\n    await queries.deleteTags({ id });\r\n    fetchTags();\r\n  };\r\n\r\n  const changeActiveTags = (id, eventT) => evt => {\r\n    evt.preventDefault();\r\n    setEventType(eventT);\r\n    setEditTagsId(id);\r\n  };\r\n\r\n  const handleTagsSubmit = ({ id, parentId, position }) => async ({ text }) => {\r\n    const checkParentId = parentId === null ? -1 : parentId;\r\n    try {\r\n      if (eventType === 'update') {\r\n        await updateTag({ id, parentId: checkParentId, tagName: text, position });\r\n      } else {\r\n        await addTag({ parentId: id, tagName: text, position });\r\n      }\r\n      setEditTagsId(-1);\r\n      setEventType('add');\r\n    } catch (err) {\r\n      // eslint-disable-next-line no-empty\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTags();\r\n  }, []);\r\n\r\n  const buildTreeTags = (tags, result = []) => {\r\n    if (tags.length === 0) {\r\n      return result;\r\n    }\r\n    const [first, ...rest] = tags;\r\n    const left = `${first.tagsHierarchy.length * 20}px`;\r\n    if (menuItems.some(el => el.parentId === first.id)) {\r\n      return buildTreeTags(rest, [\r\n        ...result,\r\n        <li key={`item-${first.id}`}>\r\n          <TagsItem left={left}>\r\n            <div>\r\n              <TagsLabel>{first.tag}</TagsLabel>\r\n              <EditIcon onClick={changeActiveTags(first.id, 'update')} />\r\n              <DeleteIcon onClick={delTag(first.id)} />\r\n            </div>\r\n            <TagsAdd role=\"button\" tabIndex=\"0\" onClick={changeActiveTags(first.id, 'add')}>\r\n              <span>добавить подраздел</span>\r\n            </TagsAdd>\r\n          </TagsItem>\r\n          {editTagsId === first.id && eventType === 'add' ? (\r\n            <ShowEditorForm text=\"\" left={left} onSubmit={handleTagsSubmit(first)} />\r\n          ) : (\r\n            ''\r\n          )}\r\n          {editTagsId === first.id && eventType === 'update' ? (\r\n            <ShowEditorForm text={first.tag} left={left} onSubmit={handleTagsSubmit(first)} />\r\n          ) : (\r\n            ''\r\n          )}\r\n          <ul>{buildTreeTags(menuItems.filter(elem => elem.parentId === first.id))}</ul>\r\n        </li>,\r\n      ]);\r\n    }\r\n    return buildTreeTags(rest, [\r\n      ...result,\r\n      <li key={`item-${first.id}`}>\r\n        <TagsItem left={left}>\r\n          <div>\r\n            <TagsLabel>{first.tag}</TagsLabel>\r\n            <EditIcon onClick={changeActiveTags(first.id, 'update')} />\r\n            <DeleteIcon onClick={delTag(first.id)} />\r\n          </div>\r\n          <TagsAdd role=\"button\" tabIndex=\"0\" onClick={changeActiveTags(first.id, 'add')}>\r\n            <span>добавить подраздел</span>\r\n          </TagsAdd>\r\n        </TagsItem>\r\n        {editTagsId === first.id && eventType === 'add' ? (\r\n          <ShowEditorForm text=\"\" left={left} onSubmit={handleTagsSubmit(first)} />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {editTagsId === first.id && eventType === 'update' ? (\r\n          <ShowEditorForm text={first.tag} left={left} onSubmit={handleTagsSubmit(first)} />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </li>,\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: '1px solid lightblue', padding: '20px' }}>\r\n      {menuItems.length > 0 ? (\r\n        <Menu mode=\"inline\">\r\n          {buildTreeTags(menuItems.filter(el => el.parentId === null))}\r\n          <TagsAddFirst role=\"button\" tabIndex=\"0\" onClick={changeActiveTags(-1, 'add')}>\r\n            <span>Добавить новый раздел</span>\r\n          </TagsAddFirst>\r\n          {editTagsId === -1 && eventType === 'add' ? (\r\n            <ShowEditorForm text=\"\" left=\"20px\" onSubmit={handleTagsSubmit(blankTag)} />\r\n          ) : (\r\n            ''\r\n          )}\r\n        </Menu>\r\n      ) : (\r\n        <Spin />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticlesTagsEdit;\r\n\r\nconst TagsItem = styled.div`\r\n  margin: 0;\r\n  display: flex;\r\n  height: 60px;\r\n  flex-direction: column;\r\n  padding-left: ${props => `${props.left}`};\r\n`;\r\nconst TagsLabel = styled.span`\r\n  fontsize: 16px;\r\n  margin-right: 15px;\r\n`;\r\nconst TagsAdd = styled.p`\r\n  font-size: 10px;\r\n  margin-top: 15px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: lightblue;\r\n  }\r\n`;\r\nconst TagsAddFirst = styled.p`\r\n  cursor: pointer;\r\n  margin-left: 20px;\r\n  &:hover {\r\n    color: lightblue;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Switch, Route, useRouteMatch, useHistory } from 'react-router-dom';\r\nimport { Radio } from 'antd';\r\nimport styled from 'styled-components';\r\nimport UsersList from './UsersList';\r\nimport UserInfo from './UserInfo';\r\nimport MailingLetters from './MailingLetters';\r\nimport ArticleCreate from './ArticleCreate';\r\nimport ArticlesTagsEdit from './ArticlesTagsEdit';\r\n\r\nconst AdminPanelHeader = styled.div`\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst AdminPanel = () => {\r\n  const { path } = useRouteMatch();\r\n  const history = useHistory();\r\n  const [selectedUrl, setUrl] = useState('');\r\n\r\n  const changeUrl = ({ target: { value } }) => {\r\n    history.push(`${path}/${value}`);\r\n    setUrl(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AdminPanelHeader>\r\n        <h1>Панель управления</h1>\r\n        <Radio.Group value={selectedUrl} onChange={changeUrl}>\r\n          <Radio.Button value=\"\">Список пользователей</Radio.Button>\r\n          <Radio.Button value=\"mail\">Рассылка сообщений</Radio.Button>\r\n          <Radio.Button value=\"article-create\">Создать статью</Radio.Button>\r\n          <Radio.Button value=\"tags\">Разделы статей</Radio.Button>\r\n        </Radio.Group>\r\n      </AdminPanelHeader>\r\n      <Switch>\r\n        <Route path={`${path}/`} exact component={UsersList} />\r\n        <Route path={`${path}/users/:id`} exact component={UserInfo} />\r\n        <Route path={`${path}/mail`} exact component={MailingLetters} />\r\n        <Route path={`${path}/article-create`} exact component={ArticleCreate} />\r\n        <Route path={`${path}/tags`} exact component={ArticlesTagsEdit} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport ProfileData from './ProfileData';\r\nimport queries from '../../serverQueries/index';\r\n\r\nconst ProfileAnotherUser = props => {\r\n  const { match } = props;\r\n  const { id } = match.params;\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    queries.getAnotherUserData(id).then(el => {\r\n      setUser(el);\r\n    });\r\n  }, []);\r\n  return <ProfileData user={user} id={id} />;\r\n};\r\n\r\nProfileAnotherUser.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  }),\r\n};\r\n\r\nProfileAnotherUser.defaultProps = {\r\n  match: { params: { id: null } },\r\n};\r\n\r\nexport default withRouter(ProfileAnotherUser);\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport queries from './serverQueries';\r\nimport {\r\n  PrivateRoute,\r\n  CommonRoute,\r\n  AuthRoute,\r\n  TopicRoute,\r\n  SubsectionRoute,\r\n  SearchRoute,\r\n  ArticlesRoute,\r\n  ChatRoute,\r\n} from './routes';\r\nimport Context from './components/Context';\r\nimport Header from './components/layouts/Header';\r\nimport Profile from './components/Profile';\r\nimport ChatAuth from './components/Chat/ChatAuth';\r\nimport PrivateChat from './components/Chat/PrivateChat';\r\nimport AdminPanel from './components/AdminPanel';\r\nimport ProfileAnotherUser from './components/Profile/ProfileAnotherUser';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let initialState = { user: {}, isLogin: false };\r\n    if (localStorage.getItem('user')) {\r\n      const user = JSON.parse(localStorage.getItem('user') || {});\r\n      initialState = {\r\n        user,\r\n        isLogin: true,\r\n      };\r\n    }\r\n    this.state = { ...initialState };\r\n  }\r\n\r\n  changeLoginState = () => {\r\n    this.setState(({ isLogin }) => ({\r\n      isLogin: !isLogin,\r\n    }));\r\n  };\r\n\r\n  changeUserState = data => {\r\n    this.setState({ user: { ...data } });\r\n  };\r\n\r\n  logOut = async () => {\r\n    localStorage.removeItem('user');\r\n    queries.logOut();\r\n    this.setState({ isLogin: false, user: {} });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isLogin,\r\n      user: { role },\r\n      user,\r\n    } = this.state;\r\n    return (\r\n      <Context.Provider\r\n        value={{\r\n          changeUserState: this.changeUserState,\r\n          changeLoginState: this.changeLoginState,\r\n          logOut: this.logOut,\r\n          ...this.state,\r\n        }}\r\n      >\r\n        <Header />\r\n        <CommonRoute />\r\n        <AuthRoute isLogin={isLogin} />\r\n        <PrivateRoute isAllowed={isLogin} path=\"/profile\" component={Profile} />\r\n        <PrivateRoute\r\n          isAllowed={isLogin}\r\n          exact\r\n          path=\"/anotheruser/:id\"\r\n          component={ProfileAnotherUser}\r\n        />\r\n        <PrivateRoute\r\n          isAllowed={isLogin && role === 'ROLE_ADMIN'}\r\n          path=\"/admin-panel\"\r\n          component={AdminPanel}\r\n        />\r\n        <TopicRoute isLogin={isLogin} />\r\n        <SubsectionRoute />\r\n        <SearchRoute />\r\n        <ArticlesRoute isLogin={isLogin} role={role} />\r\n        {/* TODO delete eslint disable */}\r\n        {/* eslint-disable-next-line no-undef */}\r\n        <ChatRoute path=\"/chat\" isLogin={isLogin} user={user} component={ChatAuth} />\r\n        <ChatRoute\r\n          exact\r\n          path=\"/private/:id\"\r\n          isLogin={isLogin}\r\n          user={user}\r\n          component={PrivateChat}\r\n        />\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './media/fonts/fonts.css';\r\nimport './index.scss';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
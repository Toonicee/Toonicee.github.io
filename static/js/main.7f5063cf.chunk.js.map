{"version":3,"sources":["services/services.js","redux/reducers/auth.js","redux/reducers/article-list.js","redux/reducers/profile.js","redux/reducers/article.js","redux/reducers/comments.js","redux/reducers/index.js","redux/store.js","modules/Form-article/Form-article.jsx","redux/actions/article/article.js","redux/actions/article/async-article.js","redux/actions/auth/auth.js","redux/actions/comment/comment.js","modules/Form-edit-article/Form-edit-article.jsx","redux/actions/profile.js","components/Block/Block.jsx","components/Add-post/Add-post.jsx","components/Button/Button.jsx","components/Container/Container.jsx","components/List-pagination/List-pagination.jsx","components/Link-auth-page/Link-auth-page.jsx","components/User-name/User-name.jsx","components/Link-home-page/Link-home-page.jsx","components/Loading/loading.jsx","components/Favorites-count/Favorites-count.jsx","components/result-registration/result-registration.jsx","components/Edit-section/Edit-section.jsx","components/Date-creation/Date-creation.jsx","components/Tag-list/Tag-list.jsx","components/Profile-link/Profile-link.jsx","modules/Header/Header.jsx","modules/Signup-form/Signup-form.jsx","redux/actions/auth/async-auth.js","modules/Login-form/Login-form.jsx","modules/Article-item/Article-item.jsx","modules/Article-all/Article-all.jsx","modules/Profile-preview/Profile-preview.jsx","modules/Article-preview/Article-preview.jsx","modules/Comment-item/Comment-item.jsx","modules/Add-comment/Add-comment.jsx","modules/Comment-list/Comment-list.jsx","redux/actions/comment/async-comment.js","modules/Form-create-article/From-create-article.jsx","pages/Auth/Auth.jsx","pages/Home/Home.jsx","pages/Create-Post/Create-Post.jsx","pages/Profile/Profile.jsx","pages/Article/Article.jsx","pages/Edit-article/Edit-article.jsx","components/App/App.jsx","serviceWorker.js","index.jsx"],"names":["axios","defaults","baseURL","setToken","token","headers","common","Authorization","initialState","currentUser","error","isAuthorizedUser","inProgress","isSuccess","auth","handleActions","FETCH_USER_REQUEST","state","FETCH_USER_SUCCESS","payload","user","FETCH_USER_FAILURE","FETCH_REGISTER_REQUEST","FETCH_REGISTER_SUCCESS","FETCH_REGISTER_FAILURE","FETCH_AUTH_REQUEST","FETCH_AUTH_SUCCESS","FETCH_AUTH_FAILURE","LOGOUT","localStorage","setItem","RESET_FORM","isRegistered","setValueArticle","articles","map","article","slug","favorited","favoritesCount","FETCH_ARTICLES_REQUEST","isProgress","FETCH_ARTICLES_SUCCESS","articlesCount","currentPage","page","FETCH_ARTICLES_FAILURE","ARTICLE_FAVORITED","ARTICLE_UNFAVORITED","inicialState","isLoading","profile","userProfile","action","type","articleState","articleCurrent","author","FETCH_ARTICLE_REQUEST","FETCH_ARTICLE_SUCCESS","FETCH_ARTICLE_FAILURE","FETCH_CREATE_ARTICLE_REQUEST","FETCH_CREATE_ARTICLE_SUCCESS","FETCH_CREATE_ARTICLE_FAILURE","FETCH_UPDATE_REQUEST","FETCH_UPDATE_SUCCESS","FETCH_UPDATE_FAILURE","ARTICLE_FAVORITED_FAILURE","ARTICLE_UNFAVORITED_FAILURE","DELETE_ARTICLE","DELETE_ARTICLE_FAILURE","RESET_STATE","comments","FETCH_COMMENTS_REQUEST","FETCH_COMMENTS_SUCCESS","commentList","FETCH_ADD_COMMENTS_REQUEST","FETCH_ADD_COMMENTS_SUCCESS","FETCH_COMMENTS_DELETE_SUCCESS","filter","id","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","WrapperButton","styled","div","FormArticle","onSubmit","initialValues","validation","console","log","validationSchema","Item","name","placeholder","TextArea","rows","size","fetchArticlesRequest","createAction","fetchArticlesSuccess","fetchArticlesFailure","fetchArticleRequest","fetchArticleSuccess","fetchArticleFailure","fetchCreateArticleRequest","fetchCreateArticleSuccess","fetchCreateArticleFailure","fetchUpdateRequest","fetchUpdateSuccess","fetchUpdateFailure","articleFavorited","articleFavoritedFailure","articleUnfavorited","articleUnfavoritedFailure","deleteArticle","deleteArticleFailure","resetState","getAllArticles","dispatch","actions","limit","get","params","offset","getArticles","then","res","articleData","data","catch","fetchRegisterRequest","fetchRegisterSuccess","fetchRegisterFailure","fetchAuthRequest","fetchAuthSuccess","fetchAuthFailure","fetchUserRequest","fetchUserSuccess","fetchUserFailure","logout","fetchCommentsRequest","fetchCommentsSuccess","fetchCommentsFailure","fetchCommentDeleteRequest","fetchCommentDeleteSuccess","fetchAddCommentsRequest","fetchAddCommentsSuccess","Yup","shape","title","required","description","body","mapDispatchToProps","articleEditConnect","values","value","put","editArticle","err","resetStateConnect","FormEditArticle","tagList","to","WrapperForm","defaultProps","connect","getProfile","username","fetchProfileSuccess","Block","children","backcolor","BlockStyle","className","props","AddPost","useLocation","pathname","Button","ContainerWrapper","Container","getAllArticlesConnect","ListPagination","Nav","onChange","total","nav","WrapperLink","Span","span","LinkAuthPage","UserName","profileName","onClick","LinkHomePage","HomeOutlined","Loading","favoriteConnect","post","setFavorite","unfavoriteConnect","delete","setUnfavorite","FavoritesCount","count","valueStyle","color","fontSize","prefix","HeartTwoTone","twoToneColor","button","ResultRegistration","success","resetFormState","WrapperResult","icon","CheckCircleTwoTone","extra","articleDeleteConnect","Wrapper","DateCreation","date","formattedDate","formatDistanceToNow","Date","locale","ruLocale","addSuffix","dateTime","TagList","tags","length","TagsWrapper","tag","key","ul","ProfileLink","logoutConnect","getProfileConnect","Header","HeaderWrapper","aria-hidden","header","password","repeatPassword","test","this","parent","email","registrationUserConnect","fetchRegisterFailureConnect","SignupForm","useState","changeState","setSubmitting","setErrors","errors","response","Password","block","min","max","userLoginConnect","userData","fetchAuthFailureConnect","LoginForm","ArticleBody","Inner","ArticleHeader","ArticleItem","setArticleSlug","style","width","marginTop","loading","Meta","avatar","src","image","createdAt","ArticleAll","WrapperArticle","getProfileName","WrapperPagination","React","Component","ProfilePreview","alt","height","ArticlePreview","canModify","bio","Article","CommentItem","comment","commentId","deleteComment","content","datetime","CommentHeader","AddComment","addComment","event","addNewComment","preventDefault","setState","onChangeValue","target","htmlType","addNewCommentConnect","postComment","deleteCommentConnect","delComment","CommentList","renderList","List","WrapperComments","articleCreateConnect","createArticle","FormCreateArticle","formattedValue","split","Auth","exact","path","component","Main","main","Home","CreatePost","resetProfile","Profile","getItem","getArticleConnect","getCurrentArticle","getAllCommentsConnect","getAll","articleSlug","EditArticle","setUserDataConnect","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7f5063cf.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\r\nexport const setToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common.Authorization = `Token ${token}`;\r\n  }\r\n};\r\n\r\n// API articles\r\nexport const getArticles = (page = 0, limit = 10) =>\r\n  axios.get('/articles', {\r\n    params: {\r\n      limit,\r\n      offset: page,\r\n    },\r\n  });\r\nexport const deleteArticle = slug => axios.delete(`/articles/${slug}`);\r\nexport const getCurrentArticle = slug => axios.get(`/articles/${slug}`);\r\nexport const setFavorite = slug => axios.post(`/articles/${slug}/favorite`);\r\nexport const setUnfavorite = slug => axios.delete(`/articles/${slug}/favorite`);\r\nexport const createArticle = article => axios.post('/articles', { article });\r\nexport const editArticle = (slug, value) => axios.put(`/articles/${slug}`, { article: value });\r\n\r\n// API registration and authorization\r\nexport const getCurrentUser = () => axios.get('/user');\r\nexport const registerUser = body => axios.post('/users', body);\r\nexport const loginUser = body => axios.post('/users/login', body);\r\n\r\n// API profile\r\nexport const follow = username => axios.post(`/profiles/${username}/follow`);\r\nexport const getCurrentProfile = username => axios.get(`/profiles/${username}`);\r\nexport const unfollow = username => axios.delete(`/profiles/${username}/follow`);\r\n\r\n// API comments\r\nexport const getAll = slug => axios.get(`/articles/${slug}/comments`);\r\nexport const postComment = (slug, comment) => axios.post(`/articles/${slug}/comments`, comment);\r\nexport const delComment = (slug, id) => axios.delete(`/articles/${slug}/comments/${id}`);\r\n","import { handleActions } from 'redux-actions';\r\nimport { setToken } from '../../services/services';\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  error: false,\r\n  isAuthorizedUser: false,\r\n  inProgress: false,\r\n  isSuccess: false,\r\n};\r\n\r\nconst auth = handleActions(\r\n  {\r\n    FETCH_USER_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_USER_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        currentUser: payload.user,\r\n        inProgress: false,\r\n        isAuthorizedUser: true,\r\n      };\r\n    },\r\n    FETCH_USER_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    FETCH_REGISTER_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_REGISTER_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        currentUser: payload,\r\n      };\r\n    },\r\n    FETCH_REGISTER_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    FETCH_AUTH_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_AUTH_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        currentUser: payload.user,\r\n        inProgress: false,\r\n        isAuthorizedUser: true,\r\n      };\r\n    },\r\n    FETCH_AUTH_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    LOGOUT: () => {\r\n      localStorage.setItem('jwt', '');\r\n      setToken(null);\r\n      return { ...initialState };\r\n    },\r\n    RESET_FORM: state => {\r\n      return {\r\n        ...state,\r\n        isRegistered: false,\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default auth;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n  articles: [],\r\n  error: false,\r\n  isProgress: false,\r\n};\r\n\r\nconst setValueArticle = (articles, payload) =>\r\n  articles.map(article => {\r\n    if (article.slug === payload.article.slug) {\r\n      return {\r\n        ...article,\r\n        favorited: payload.article.favorited,\r\n        favoritesCount: payload.article.favoritesCount,\r\n      };\r\n    }\r\n    return article;\r\n  });\r\n\r\nconst articles = handleActions(\r\n  {\r\n    FETCH_ARTICLES_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_ARTICLES_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articles: payload.articles,\r\n        articlesCount: payload.articlesCount,\r\n        currentPage: payload.page,\r\n        isProgress: false,\r\n      };\r\n    },\r\n    FETCH_ARTICLES_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    ARTICLE_FAVORITED: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articles: setValueArticle(state.articles, payload),\r\n      };\r\n    },\r\n    ARTICLE_UNFAVORITED: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articles: setValueArticle(state.articles, payload),\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default articles;\r\n","const inicialState = {\r\n  isLoading: false,\r\n  profile: {},\r\n};\r\n\r\nconst userProfile = (state = inicialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_PROFILE_REQUEST':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case 'FETCH_PROFILE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        profile: action.payload.profile,\r\n        isLoading: false,\r\n      };\r\n    case 'RESET_PROFILE':\r\n      return {\r\n        ...inicialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userProfile;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n  isProgress: false,\r\n  articleState: '',\r\n  error: false,\r\n  articleCurrent: {\r\n    author: {},\r\n  },\r\n};\r\nconst article = handleActions(\r\n  {\r\n    FETCH_ARTICLE_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_ARTICLE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n        isProgress: false,\r\n      };\r\n    },\r\n\r\n    FETCH_ARTICLE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    FETCH_CREATE_ARTICLE_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_CREATE_ARTICLE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n        isProgress: false,\r\n        articleState: 'create',\r\n      };\r\n    },\r\n    FETCH_CREATE_ARTICLE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    FETCH_UPDATE_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n    },\r\n    FETCH_UPDATE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n        isProgress: false,\r\n        articleState: 'update',\r\n      };\r\n    },\r\n    FETCH_UPDATE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        error: true,\r\n      };\r\n    },\r\n    ARTICLE_FAVORITED: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n      };\r\n    },\r\n    ARTICLE_FAVORITED_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    },\r\n    ARTICLE_UNFAVORITED: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        articleCurrent: payload.article,\r\n      };\r\n    },\r\n    ARTICLE_UNFAVORITED_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    },\r\n    DELETE_ARTICLE: () => {\r\n      return {\r\n        ...initialState,\r\n        articleState: 'delete',\r\n      };\r\n    },\r\n    DELETE_ARTICLE_FAILURE: state => {\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    },\r\n    RESET_STATE: state => {\r\n      return {\r\n        ...state,\r\n        articleState: '',\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default article;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n  commentList: [],\r\n  error: true,\r\n  inProgress: false,\r\n};\r\n\r\nconst comments = handleActions(\r\n  {\r\n    FETCH_COMMENTS_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_COMMENTS_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        commentList: payload.comments,\r\n      };\r\n    },\r\n    FETCH_ADD_COMMENTS_REQUEST: state => {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    },\r\n    FETCH_ADD_COMMENTS_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        commentList: [payload, ...state.commentList],\r\n        inProgress: false,\r\n      };\r\n    },\r\n    FETCH_COMMENTS_DELETE_SUCCESS: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        commentList: state.commentList.filter(({ id }) => id !== payload),\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default comments;\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nimport articles from './article-list';\r\nimport userProfile from './profile';\r\nimport article from './article';\r\nimport comments from './comments';\r\n\r\nexport default combineReducers({ auth, articles, article, userProfile, comments });\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\nimport { Formik } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst FormArticle = ({ onSubmit, initialValues, validation }) => {\r\n  console.log(validation);\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validation}>\r\n      <Form>\r\n        <Form.Item name=\"title\">\r\n          <Input name=\"title\" placeholder=\"Заголовок поста\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"description\">\r\n          <Input name=\"description\" placeholder=\"о чем этот пост?\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"body\">\r\n          <Input.TextArea rows={5} name=\"body\" placeholder=\"напишите свой пост\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"tagList\">\r\n          <Input name=\"tagList\" placeholder=\"введите теги\" />\r\n        </Form.Item>\r\n        <WrapperButton>\r\n          <SubmitButton size=\"large\">Опубликовать</SubmitButton>\r\n        </WrapperButton>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nFormArticle.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  initialValues: PropTypes.instanceOf(Object).isRequired,\r\n  validation: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nconst WrapperButton = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default FormArticle;\r\n","import { createAction } from 'redux-actions';\r\n\r\n// аctions getting all the articles\r\nexport const fetchArticlesRequest = createAction('FETCH_ARTICLES_REQUEST');\r\nexport const fetchArticlesSuccess = createAction('FETCH_ARTICLES_SUCCESS');\r\nexport const fetchArticlesFailure = createAction('FETCH_ARTICLES_FAILURE');\r\n\r\n// actions to get the current article\r\nexport const fetchArticleRequest = createAction('FETCH_ARTICLE_REQUEST');\r\nexport const fetchArticleSuccess = createAction('FETCH_ARTICLE_SUCCESS');\r\nexport const fetchArticleFailure = createAction('FETCH_ARTICLE_FAILURE');\r\n\r\n// action article creation\r\nexport const fetchCreateArticleRequest = createAction('FETCH_CREATE_ARTICLE_REQUEST');\r\nexport const fetchCreateArticleSuccess = createAction('FETCH_CREATE_ARTICLE_SUCCESS');\r\nexport const fetchCreateArticleFailure = createAction('FETCH_CREATE_ARTICLE_FAILURE');\r\n\r\n// action article update\r\nexport const fetchUpdateRequest = createAction('FETCH_UPDATE_REQUEST');\r\nexport const fetchUpdateSuccess = createAction('FETCH_UPDATE_SUCCESS');\r\nexport const fetchUpdateFailure = createAction('FETCH_UPDATE_FAILURE');\r\n\r\n// action like dislike\r\nexport const articleFavorited = createAction('ARTICLE_FAVORITED');\r\nexport const articleFavoritedFailure = createAction('ARTICLE_FAVORITED_FAILURE');\r\nexport const articleUnfavorited = createAction('ARTICLE_UNFAVORITED');\r\nexport const articleUnfavoritedFailure = createAction('ARTICLE_UNFAVORITED_FAILURE');\r\n\r\nexport const deleteArticle = createAction('DELETE_ARTICLE');\r\nexport const deleteArticleFailure = createAction('DELETE_ARTICLE_FAILURE');\r\n\r\nexport const resetState = createAction('RESET_STATE');\r\n","import {\r\n  getArticles,\r\n  setFavorite,\r\n  setUnfavorite,\r\n  getCurrentArticle,\r\n  createArticle,\r\n  editArticle,\r\n  deleteArticle,\r\n} from '../../../services/services';\r\nimport * as actions from './article';\r\n\r\nconst getAllArticles = page => dispatch => {\r\n  dispatch(actions.fetchArticlesRequest());\r\n  getArticles(page)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchArticlesSuccess(articleData));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchArticlesFailure());\r\n    });\r\n};\r\n\r\nconst getArticle = slug => dispatch => {\r\n  localStorage.setItem('articleSlug', slug);\r\n  dispatch(actions.fetchArticleRequest());\r\n  getCurrentArticle(slug)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchArticleSuccess(articleData));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchArticleFailure());\r\n    });\r\n};\r\n\r\nconst favorite = slug => dispatch => {\r\n  setFavorite(slug)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.articleFavorited(articleData));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.articleFavoritedFailure());\r\n    });\r\n};\r\n\r\nconst unfavorite = slug => dispatch => {\r\n  setUnfavorite(slug)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.articleUnfavorited(articleData));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.articleUnfavoritedFailure());\r\n    });\r\n};\r\n\r\nconst articleCreate = article => dispatch => {\r\n  dispatch(actions.fetchCreateArticleRequest());\r\n  return createArticle(article).then(res => {\r\n    const articleData = res.data;\r\n    dispatch(actions.fetchCreateArticleSuccess(articleData));\r\n    dispatch(actions.resetState());\r\n  });\r\n};\r\nconst articleEdit = (slug, values) => dispatch => {\r\n  dispatch(actions.fetchUpdateRequest());\r\n  editArticle(slug, values)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchUpdateSuccess(articleData));\r\n      dispatch(actions.resetState());\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch(actions.fetchUpdateFailure());\r\n    });\r\n};\r\n\r\nconst articleDelete = slug => dispatch => {\r\n  deleteArticle(slug)\r\n    .then(() => {\r\n      dispatch(actions.deleteArticle());\r\n      dispatch(actions.resetState());\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.deleteArticleFailure());\r\n    });\r\n};\r\n\r\nexport {\r\n  getAllArticles,\r\n  favorite,\r\n  unfavorite,\r\n  getArticle,\r\n  articleCreate,\r\n  articleEdit,\r\n  articleDelete,\r\n};\r\n","import { createAction } from 'redux-actions';\r\n\r\n// registration actions\r\nexport const fetchRegisterRequest = createAction('FETCH_REGISTER_REQUEST');\r\nexport const fetchRegisterSuccess = createAction('FETCH_REGISTER_SUCCESS');\r\nexport const fetchRegisterFailure = createAction('FETCH_REGISTER_FAILURE');\r\n\r\n// authorization actions\r\nexport const fetchAuthRequest = createAction('FETCH_AUTH_REQUEST');\r\nexport const fetchAuthSuccess = createAction('FETCH_AUTH_SUCCESS');\r\nexport const fetchAuthFailure = createAction('FETCH_AUTH_FAILURE');\r\n\r\n// current user actions\r\nexport const fetchUserRequest = createAction('FETCH_USER_REQUEST');\r\nexport const fetchUserSuccess = createAction('FETCH_USER_SUCCESS');\r\nexport const fetchUserFailure = createAction('FETCH_USER_FAILURE');\r\n\r\nexport const logout = createAction('LOGOUT');\r\nexport const resetFormState = createAction('RESET_FORM');\r\n","import { createAction } from 'redux-actions';\r\n\r\n// get comments from an Article\r\nexport const fetchCommentsRequest = createAction('FETCH_COMMENTS_REQUEST');\r\nexport const fetchCommentsSuccess = createAction('FETCH_COMMENTS_SUCCESS');\r\nexport const fetchCommentsFailure = createAction('FETCH_COMMENTS_FAILURE');\r\n\r\n// delete comment\r\nexport const fetchCommentDeleteRequest = createAction('FETCH_COMMENTS_DELETE_REQUEST');\r\nexport const fetchCommentDeleteSuccess = createAction('FETCH_COMMENTS_DELETE_SUCCESS');\r\nexport const fetchCommentDeleteFailure = createAction('FETCH_COMMENTS_DELETE_FAILURE');\r\n\r\n// add comments to an article\r\nexport const fetchAddCommentsRequest = createAction('FETCH_ADD_COMMENTS_REQUEST');\r\nexport const fetchAddCommentsSuccess = createAction('FETCH_ADD_COMMENTS_SUCCESS');\r\nexport const fetchAddCommentsFailure = createAction('FETCH_ADD_COMMENTS_FAILURE');\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\nimport FormArticle from '../Form-article/Form-article';\r\nimport { articleEdit, resetState } from '../../redux/actions';\r\n\r\nconst validation = Yup.object().shape({\r\n  title: Yup.string().required('Required'),\r\n  description: Yup.string().required('Required'),\r\n  body: Yup.string().required('Required'),\r\n});\r\n\r\nconst mapStateToProps = ({ article: { articleCurrent, articleState } }) => ({\r\n  articleCurrent: {\r\n    title: articleCurrent.title,\r\n    description: articleCurrent.description,\r\n    body: articleCurrent.body,\r\n    tagList: articleCurrent.tagList,\r\n    slug: articleCurrent.slug,\r\n  },\r\n  articleState,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  articleEditConnect: articleEdit,\r\n  resetStateConnect: resetState,\r\n};\r\n\r\nconst FormEditArticle = ({ articleEditConnect, articleCurrent, articleState }) => {\r\n  const onSubmit = values => {\r\n    articleEditConnect(articleCurrent.slug, values);\r\n  };\r\n\r\n  const initialValues = {\r\n    title: articleCurrent.title,\r\n    description: articleCurrent.description,\r\n    body: articleCurrent.body,\r\n    tagList: articleCurrent.tagList,\r\n  };\r\n  if (articleState === 'update') {\r\n    return <Redirect to={`/articles/${articleCurrent.slug}`} />;\r\n  }\r\n  return (\r\n    <WrapperForm>\r\n      <FormArticle onSubmit={onSubmit} initialValues={initialValues} validation={validation} />\r\n    </WrapperForm>\r\n  );\r\n};\r\n\r\nFormEditArticle.defaultProps = {\r\n  articleState: '',\r\n};\r\n\r\nFormEditArticle.propTypes = {\r\n  articleEditConnect: PropTypes.func.isRequired,\r\n  articleState: PropTypes.string,\r\n  articleCurrent: PropTypes.objectOf(PropTypes.string).isRequired,\r\n};\r\n\r\nconst WrapperForm = styled.div`\r\n  width: 50%;\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormEditArticle);\r\n","import { getCurrentProfile } from '../../services/services';\r\n\r\nconst fetchProfileRequest = () => ({\r\n  type: 'FETCH_PROFILE_REQUEST',\r\n});\r\n\r\nconst fetchProfileSuccess = profile => ({\r\n  type: 'FETCH_PROFILE_SUCCESS',\r\n  payload: profile,\r\n});\r\n\r\nconst resetProfile = () => ({\r\n  type: 'RESET_PROFILE',\r\n});\r\n\r\nconst getProfile = name => dispatch => {\r\n  localStorage.setItem('ProfileName', name);\r\n  dispatch(fetchProfileRequest());\r\n  getCurrentProfile(name).then(res => {\r\n    const profile = res.data;\r\n    dispatch(fetchProfileSuccess(profile));\r\n  });\r\n};\r\n\r\nexport { getProfile, resetProfile };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Block = ({ children, backcolor }) => (\r\n  <BlockStyle backcolor={backcolor} className=\"block\">\r\n    {children}\r\n  </BlockStyle>\r\n);\r\n\r\nBlock.defaultProps = {\r\n  backcolor: '',\r\n};\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  backcolor: PropTypes.string,\r\n};\r\n\r\nconst BlockStyle = styled.div`\r\n  padding: 45px;\r\n  background-color: ${props => props.backcolor};\r\n  box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.04204);\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default Block;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst AddPost = () => {\r\n  const { pathname } = useLocation();\r\n  if (pathname === '/add') {\r\n    return null;\r\n  }\r\n  return <Link to=\"/add\">Добавить новый пост</Link>;\r\n};\r\n\r\nexport default AddPost;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button as ButtonMain } from 'antd';\r\n\r\nconst Button = ({ children, type }) => <ButtonMain type={type}>{children}</ButtonMain>;\r\n\r\nButton.defaultProps = {\r\n  type: '',\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => <ContainerWrapper>{children}</ContainerWrapper>;\r\n\r\nconst ContainerWrapper = styled.div`\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Pagination } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { getAllArticles } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ articles }) => ({\r\n  articles: articles.articles,\r\n  articlesCount: articles.articlesCount,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAllArticlesConnect: getAllArticles,\r\n};\r\n\r\nconst ListPagination = ({ getAllArticlesConnect, articlesCount }) => {\r\n  if (articlesCount <= 10) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Nav>\r\n      <Pagination\r\n        onChange={value => getAllArticlesConnect((value - 1) * 10)}\r\n        total={articlesCount}\r\n      />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nListPagination.defaultProps = {\r\n  articlesCount: 0,\r\n};\r\n\r\nListPagination.propTypes = {\r\n  getAllArticlesConnect: PropTypes.func.isRequired,\r\n  articlesCount: PropTypes.number,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPagination);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst LinkAuthPage = () => {\r\n  return (\r\n    <WrapperLink>\r\n      <Link to=\"/login\">Войти</Link>\r\n      <Span>или</Span>\r\n      <Link to=\"/signup\">зарегистрироваться</Link>\r\n    </WrapperLink>\r\n  );\r\n};\r\n\r\nconst WrapperLink = styled.div``;\r\n\r\nconst Span = styled.span`\r\n  margin: 0 5px;\r\n`;\r\nexport default LinkAuthPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserName = ({ profileName, username }) => {\r\n  const getProfile = () => {\r\n    localStorage.setItem('ProfileName', username);\r\n\r\n    profileName(username);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <Link onClick={getProfile} to={`/${username}`}>\r\n          {username}\r\n        </Link>\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserName.defaultProps = {\r\n  username: '',\r\n};\r\n\r\nUserName.propTypes = {\r\n  username: PropTypes.string,\r\n  profileName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserName;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\n\r\nconst LinkHomePage = () => {\r\n  const { pathname } = useLocation();\r\n  if (pathname === '/') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <HomeOutlined />\r\n        Главная\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkHomePage;\r\n","import React from 'react';\r\n\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-spinner-223z6fdkjge\">\r\n      <div className=\"ldio-vwhx2ilfl4e\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { HeartTwoTone } from '@ant-design/icons';\r\nimport { Statistic } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { favorite, unfavorite } from '../../redux/actions';\r\n\r\nconst mapDispatchToProps = {\r\n  favoriteConnect: favorite,\r\n  unfavoriteConnect: unfavorite,\r\n};\r\nconst FavoritesCount = ({ count, favoriteConnect, unfavoriteConnect, slug, favorited }) => {\r\n  const like = () => {\r\n    if (favorited) {\r\n      return unfavoriteConnect(slug);\r\n    }\r\n    return favoriteConnect(slug);\r\n  };\r\n\r\n  return (\r\n    <Button favorited={favorited} type=\"button\" onClick={like}>\r\n      <Statistic\r\n        value={count}\r\n        valueStyle={{ color: favorited ? '#cc2939' : null, fontSize: '16px' }}\r\n        prefix={\r\n          <HeartTwoTone className=\"icon-favorites\" twoToneColor={favorited ? '#cc2939' : null} />\r\n        }\r\n      />\r\n    </Button>\r\n  );\r\n};\r\n\r\nFavoritesCount.defaultProps = {\r\n  count: 0,\r\n  slug: '',\r\n  favorited: false,\r\n};\r\n\r\nFavoritesCount.propTypes = {\r\n  count: PropTypes.number,\r\n  slug: PropTypes.string,\r\n  favoriteConnect: PropTypes.func.isRequired,\r\n  unfavoriteConnect: PropTypes.func.isRequired,\r\n  favorited: PropTypes.bool,\r\n};\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  background: inherit;\r\n  outline: none;\r\n  border: none;\r\n  padding: 0;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(FavoritesCount);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Result } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\nconst ResultRegistration = ({ success, resetFormState }) => {\r\n  return (\r\n    <WrapperResult success={success}>\r\n      <Result\r\n        icon={<CheckCircleTwoTone twoToneColor=\"#52c41a\" />}\r\n        title=\"Вы успешно зарегистрировались!\"\r\n        extra={\r\n          <Link onClick={() => resetFormState(false)} to=\"/login\" type=\"primary\">\r\n            Войти\r\n          </Link>\r\n        }\r\n      />\r\n    </WrapperResult>\r\n  );\r\n};\r\n\r\nResultRegistration.defaultProps = {\r\n  success: false,\r\n};\r\n\r\nResultRegistration.propTypes = {\r\n  resetFormState: PropTypes.func.isRequired,\r\n  success: PropTypes.bool,\r\n};\r\n\r\nconst WrapperResult = styled.div`\r\n  width: 300px;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport default ResultRegistration;\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { articleDelete } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ article }) => ({\r\n  slug: article.articleCurrent.slug,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  articleDeleteConnect: articleDelete,\r\n};\r\n\r\nconst EditSection = ({ slug, articleDeleteConnect }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Link className=\"management_link btn\" to={`/articles/${slug}/edit`}>\r\n        <Icon type=\"edit\" />\r\n        Редактировать\r\n      </Link>\r\n      <button\r\n        className=\"management_btn btn\"\r\n        onClick={() => articleDeleteConnect(slug)}\r\n        type=\"button\"\r\n      >\r\n        <Icon type=\"delete\" />\r\n        Удалить\r\n      </button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nEditSection.propTypes = {\r\n  slug: PropTypes.string.isRequired,\r\n  articleDeleteConnect: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  .management_btn {\r\n    color: #b85c5c;\r\n    border: 1px solid #b85c5c;\r\n    margin: 0 15px;\r\n\r\n    &:hover {\r\n      color: #fff;\r\n      background: #b85c5c;\r\n    }\r\n    &:focus {\r\n      color: #fff;\r\n      background: #b85c5c;\r\n    }\r\n    &:active {\r\n      color: #fff;\r\n      background: #b85c5c;\r\n    }\r\n  }\r\n  .management_link {\r\n    color: #1890ff;\r\n    border: 1px solid #1890ff;\r\n\r\n    &:hover {\r\n      color: #fff;\r\n      background: #1890ff;\r\n    }\r\n    &:focus {\r\n      color: #fff;\r\n      background: #1890ff;\r\n    }\r\n    &:active {\r\n      color: #fff;\r\n      background: #1890ff;\r\n    }\r\n  }\r\n  .btn {\r\n    padding: 0.25rem 0.5rem;\r\n    font-size: 0.875rem;\r\n    border-radius: 0.2rem;\r\n    display: inline-block;\r\n    font-weight: 400;\r\n    line-height: 1.25;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    vertical-align: middle;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditSection);\r\n","import React from 'react';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DateCreation = ({ date }) => {\r\n  if (!date) {\r\n    return null;\r\n  }\r\n  const formattedDate = formatDistanceToNow(new Date(date), {\r\n    locale: ruLocale,\r\n    addSuffix: true,\r\n  });\r\n\r\n  return (\r\n    <p>\r\n      <time dateTime={date}>{formattedDate}</time>\r\n    </p>\r\n  );\r\n};\r\n\r\nDateCreation.defaultProps = {\r\n  date: '',\r\n};\r\n\r\nDateCreation.propTypes = {\r\n  date: PropTypes.string,\r\n};\r\n\r\nexport default DateCreation;\r\n","import React from 'react';\r\nimport { Tag } from 'antd';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TagList = ({ tags }) => {\r\n  if (tags.length === 0) return null;\r\n  return (\r\n    <div>\r\n      <TagsWrapper>\r\n        {tags.map(tag => (\r\n          <li key={tag}>\r\n            <Tag>{tag}</Tag>\r\n          </li>\r\n        ))}\r\n      </TagsWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nTagList.defaultProps = {\r\n  tags: [],\r\n};\r\n\r\nTagList.propTypes = {\r\n  tags: PropTypes.instanceOf(Array),\r\n};\r\n\r\nconst TagsWrapper = styled.ul`\r\n  display: flex;\r\n  margin: 0;\r\n  list-style: none;\r\n  padding: 0;\r\n  opacity: 0.7;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileLink = ({ username, children }) => {\r\n  const setUserName = () => {\r\n    localStorage.setItem('ProfileName', username);\r\n  };\r\n  return (\r\n    <Link onClick={setUserName} to={`/${username}`}>\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nProfileLink.defaultProps = {\r\n  username: '',\r\n  children: null,\r\n};\r\n\r\nProfileLink.propTypes = {\r\n  username: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ProfileLink;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { logout } from '../../redux/actions/auth/auth';\r\nimport { getProfile } from '../../redux/actions/profile';\r\nimport {\r\n  AddPost,\r\n  Container,\r\n  LinkAuthPage,\r\n  UserName,\r\n  LinkHomePage,\r\n  Loading,\r\n} from '../../components';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  username: auth.currentUser.username,\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n  inProgress: auth.inProgress,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logoutConnect: logout,\r\n  getProfileConnect: getProfile,\r\n};\r\n\r\nconst Header = ({ getProfileConnect, isAuthorizedUser, logoutConnect, username, inProgress }) => {\r\n  if (inProgress) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <HeaderWrapper>\r\n      <Container>\r\n        <div>\r\n          <LinkHomePage />\r\n          {isAuthorizedUser ? (\r\n            <>\r\n              <UserName profileName={getProfileConnect} username={username} />\r\n              <AddPost />\r\n            </>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          {isAuthorizedUser ? (\r\n            <Button onClick={logoutConnect}>\r\n              <i className=\"fa fa-sign-in\" aria-hidden=\"true\" /> выход\r\n            </Button>\r\n          ) : (\r\n            <LinkAuthPage />\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  isAuthorizedUser: false,\r\n  inProgress: false,\r\n  username: '',\r\n};\r\n\r\nHeader.propTypes = {\r\n  logoutConnect: PropTypes.func.isRequired,\r\n  getProfileConnect: PropTypes.func.isRequired,\r\n  isAuthorizedUser: PropTypes.bool,\r\n  inProgress: PropTypes.bool,\r\n  username: PropTypes.string,\r\n};\r\n\r\nconst HeaderWrapper = styled.header`\r\n  background: #eee;\r\n  padding: 30px 0;\r\n\r\n  > div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { useState } from 'react';\r\nimport { Form, SubmitButton, Input } from 'formik-antd';\r\nimport { Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Block, ResultRegistration } from '../../components';\r\nimport { fetchRegisterFailure } from '../../redux/actions/auth/auth';\r\nimport { registrationUser } from '../../redux/actions';\r\n\r\nconst validation = Yup.object().shape({\r\n  username: Yup.string().required('Введите ваше имя'),\r\n  password: Yup.string().required('Введите пароль'),\r\n  repeatPassword: Yup.string()\r\n    .test('passwords-match', 'Пароли не совподают', function(value) {\r\n      return this.parent.password === value;\r\n    })\r\n    .required('Required'),\r\n  email: Yup.string().required('Введите ваш E-mail'),\r\n});\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  username: auth.currentUser.username,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  registrationUserConnect: registrationUser,\r\n  fetchRegisterFailureConnect: fetchRegisterFailure,\r\n};\r\n\r\nconst SignupForm = ({ registrationUserConnect, username, fetchRegisterFailureConnect }) => {\r\n  const [isRegistered, changeState] = useState(false);\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    registrationUserConnect(values).catch(error => {\r\n      const { errors } = error.response.data;\r\n      fetchRegisterFailureConnect();\r\n      setErrors(errors);\r\n      setSubmitting(false);\r\n    });\r\n    changeState(true);\r\n  };\r\n\r\n  if (username && isRegistered) {\r\n    return <ResultRegistration success resetFormState={changeState} />;\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2 className=\"auth__title\">Регистрация</h2>\r\n        <p className=\"auth__text\">Для входа, вам нужно зарегистрироваться</p>\r\n      </div>\r\n      <Block backcolor=\"#fff\">\r\n        <Formik\r\n          initialValues={{\r\n            username: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n            email: '',\r\n          }}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          <Form>\r\n            <Form.Item name=\"email\">\r\n              <Input\r\n                prefix={<Icon type=\"mail\" />}\r\n                size=\"large\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"E-mail\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"username\">\r\n              <Input\r\n                prefix={<Icon type=\"user\" />}\r\n                size=\"large\"\r\n                name=\"username\"\r\n                placeholder=\"Ваше имя\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\">\r\n              <Input.Password\r\n                prefix={<Icon type=\"lock\" />}\r\n                size=\"large\"\r\n                name=\"password\"\r\n                placeholder=\"Пароль\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"repeatPassword\">\r\n              <Input.Password\r\n                prefix={<Icon type=\"lock\" />}\r\n                size=\"large\"\r\n                name=\"repeatPassword\"\r\n                placeholder=\"Повторите пароль\"\r\n              />\r\n            </Form.Item>\r\n            <div>\r\n              <SubmitButton size=\"large\" block>\r\n                Зарегистрироваться\r\n              </SubmitButton>\r\n            </div>\r\n            <div className=\"form__link\">\r\n              <Link to=\"/login\">Войти в аккаунт</Link>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </Block>\r\n    </>\r\n  );\r\n};\r\n\r\nSignupForm.defaultProps = {\r\n  username: '',\r\n};\r\n\r\nSignupForm.propTypes = {\r\n  username: PropTypes.string,\r\n  registrationUserConnect: PropTypes.func.isRequired,\r\n  fetchRegisterFailureConnect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupForm);\r\n","import { getCurrentUser, registerUser, loginUser, setToken } from '../../../services/services';\r\nimport * as actions from './auth';\r\n\r\nconst registrationUser = values => dispatch => {\r\n  dispatch(actions.fetchRegisterRequest());\r\n  return registerUser({\r\n    user: {\r\n      username: values.username,\r\n      email: values.email,\r\n      password: values.password,\r\n    },\r\n  }).then(res => {\r\n    const { user } = res.data;\r\n    dispatch(actions.fetchRegisterSuccess(user));\r\n  });\r\n};\r\n\r\nconst userLogin = values => dispatch => {\r\n  dispatch(actions.fetchAuthRequest());\r\n  return loginUser({\r\n    user: {\r\n      email: values.email,\r\n      password: values.password,\r\n    },\r\n  }).then(res => {\r\n    const userData = res.data.user;\r\n    localStorage.setItem('jwt', userData.token);\r\n    setToken(userData.token);\r\n    dispatch(actions.fetchAuthSuccess({ user: userData }));\r\n  });\r\n};\r\n\r\nconst setUserData = () => dispatch => {\r\n  const token = localStorage.getItem('jwt');\r\n  if (token) {\r\n    setToken(token);\r\n  }\r\n  dispatch(actions.fetchUserRequest());\r\n  getCurrentUser()\r\n    .then(res => {\r\n      const user = res.data;\r\n      dispatch(actions.fetchUserSuccess(user));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchUserFailure());\r\n    });\r\n};\r\n\r\nexport { setUserData, userLogin, registrationUser };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, SubmitButton, Input } from 'formik-antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Icon } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Block } from '../../components';\r\nimport { userLogin } from '../../redux/actions/auth/async-auth';\r\nimport { fetchAuthFailure } from '../../redux/actions/auth/auth';\r\n\r\nconst validation = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(8, 'Must be 8 characters or more')\r\n    .max(40, 'Must be 40 characters or less')\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email('Введите коректные E-mail')\r\n    .required('Введите ваш E-mail'),\r\n});\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  email: auth.currentUser.email,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  userLoginConnect: userLogin,\r\n  fetchAuthFailureConnect: fetchAuthFailure,\r\n};\r\n\r\nconst LoginForm = ({ userLoginConnect, email, fetchAuthFailureConnect }) => {\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    userLoginConnect(values).catch(error => {\r\n      const { errors } = error.response.data;\r\n      fetchAuthFailureConnect();\r\n      setSubmitting(false);\r\n      setErrors(errors);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2 className=\"auth__title\">Войти в аккаунт</h2>\r\n        <p className=\"auth__text\">Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block backcolor=\"#fff\">\r\n        <Formik\r\n          initialValues={{\r\n            password: '',\r\n            email: `${email || ''}`,\r\n          }}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          <Form>\r\n            <Form.Item name=\"email\">\r\n              <Input\r\n                prefix={<Icon type=\"user\" />}\r\n                size=\"large\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"E-mail\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\">\r\n              <Input.Password\r\n                prefix={<Icon type=\"lock\" />}\r\n                size=\"large\"\r\n                name=\"password\"\r\n                placeholder=\"Пароль\"\r\n              />\r\n            </Form.Item>\r\n            <div>\r\n              <SubmitButton size=\"large\" block>\r\n                Войти в аккаунт\r\n              </SubmitButton>\r\n            </div>\r\n            <div className=\"form__link\">\r\n              <Link to=\"/signup\">Зарегистрироваться</Link>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </Block>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n  email: '',\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  fetchAuthFailureConnect: PropTypes.func.isRequired,\r\n  userLoginConnect: PropTypes.func.isRequired,\r\n  email: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Skeleton, Switch, Card, Avatar } from 'antd';\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\n\r\nimport { FavoritesCount, DateCreation, TagList, ProfileLink } from '../../components';\r\n\r\nconst ArticleItem = ({ article, isProgress }) => {\r\n  const setArticleSlug = () => {\r\n    localStorage.setItem('articleSlug', article.slug);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ width: 700, marginTop: 16 }} loading={isProgress}>\r\n        <Card.Meta\r\n          avatar={\r\n            <ProfileLink username={article.author.username}>\r\n              <Avatar src={article.author.image} />\r\n            </ProfileLink>\r\n          }\r\n          title={\r\n            <Link onClick={setArticleSlug} to={`/articles/${article.slug}`}>\r\n              <div>\r\n                <h3 className=\"article__title\">{article.title}</h3>\r\n              </div>\r\n            </Link>\r\n          }\r\n          description={article.description}\r\n        />\r\n        <div>\r\n          <ArticleHeader>\r\n            <TagList tags={article.tagList} />\r\n          </ArticleHeader>\r\n          <ArticleBody>\r\n            <Inner>\r\n              <DateCreation date={article.createdAt} />\r\n\r\n              <FavoritesCount\r\n                favorited={article.favorited}\r\n                count={article.favoritesCount}\r\n                slug={article.slug}\r\n              />\r\n            </Inner>\r\n            <div>\r\n              <Link\r\n                className=\"article__link\"\r\n                onClick={setArticleSlug}\r\n                to={`/articles/${article.slug}`}\r\n              >\r\n                Читать далее…\r\n              </Link>\r\n            </div>\r\n          </ArticleBody>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nArticleItem.propTypes = {\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nconst ArticleBody = styled.div`\r\n  margin-top: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  p {\r\n    margin: 0;\r\n  }\r\n  .article__title {\r\n    color: #333;\r\n    font-weight: 500;\r\n    font-size: 28px;\r\n    line-height: 36.4px;\r\n\r\n    &:hover {\r\n      color: #548eaa;\r\n    }\r\n    &:active {\r\n      color: #5790ac;\r\n    }\r\n  }\r\n\r\n  .article__link {\r\n    color: rgba(0, 0, 0, 0.54);\r\n    font-size: 12px;\r\n    &:hover {\r\n      color: rgba(0, 0, 0, 0.9);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Inner = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ArticleHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n  .article__author {\r\n    color: #548eaa;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    text-decoration: none;\r\n    margin: 0 15px 0 0;\r\n  }\r\n  .article__desc {\r\n    margin-right: 10px;\r\n  }\r\n  p {\r\n    margin: 0;\r\n    font-weight: 700;\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport default ArticleItem;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getProfile } from '../../redux/actions/profile';\r\nimport { getAllArticles } from '../../redux/actions';\r\nimport ArticleItem from '../Article-item/Article-item';\r\nimport { ListPagination } from '../../components';\r\n\r\nconst mapStateToProps = ({ articles }) => {\r\n  return {\r\n    articles: articles.articles,\r\n    isProgress: articles.isProgress,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getProfileConnect: getProfile,\r\n  getAllArticlesConnect: getAllArticles,\r\n};\r\n\r\nclass ArticleAll extends React.Component {\r\n  componentDidMount() {\r\n    const { getAllArticlesConnect } = this.props;\r\n    getAllArticlesConnect();\r\n  }\r\n\r\n  render() {\r\n    const { articles, getProfileConnect, isProgress } = this.props;\r\n    return (\r\n      <>\r\n        <WrapperArticle>\r\n          {articles.map(article => {\r\n            return (\r\n              <ArticleItem\r\n                article={article}\r\n                getProfileName={getProfileConnect}\r\n                key={article.slug}\r\n                isProgress={isProgress}\r\n              />\r\n            );\r\n          })}\r\n        </WrapperArticle>\r\n        <WrapperPagination isProgress={isProgress}>\r\n          <ListPagination />\r\n        </WrapperPagination>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nArticleAll.defaultProps = {\r\n  isProgress: false,\r\n};\r\n\r\nArticleAll.propTypes = {\r\n  articles: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isProgress: PropTypes.bool,\r\n  getProfileConnect: PropTypes.func.isRequired,\r\n  getAllArticlesConnect: PropTypes.func.isRequired,\r\n};\r\n\r\nconst WrapperPagination = styled.div`\r\n  opacity: ${props => (props.isProgress ? 0.5 : 1)};\r\n  margin: 50px 0 0 0;\r\n`;\r\n\r\nconst WrapperArticle = styled.div`\r\n  max-width: 700px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleAll);\r\n","import React from 'react';\r\n\r\nimport { Loading } from '../../components';\r\n\r\nconst ProfilePreview = ({ profile, isLoading }) => {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img alt={profile.username} width=\"128\" height=\"128\" src={profile.image} />\r\n      </div>\r\n      <div>\r\n        <h1>{profile.username}</h1>\r\n        <div>\r\n          <span>Редактировать профиль</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePreview;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// import { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Loading,\r\n  FavoritesCount,\r\n  EditSection,\r\n  DateCreation,\r\n  TagList,\r\n  ProfileLink,\r\n} from '../../components';\r\n\r\nconst ArticlePreview = ({ article, isProgress, username }) => {\r\n  if (isProgress) {\r\n    return <Loading />;\r\n  }\r\n  const canModify = username === article.author.username;\r\n  return (\r\n    <Article>\r\n      <ArticleHeader>\r\n        <div className=\"article__profile-info\">\r\n          <div className=\"article__inner\">\r\n            <ProfileLink username={article.author.username}>\r\n              <img\r\n                className=\"article__profile-img\"\r\n                src={article.author.image}\r\n                alt={article.author.username}\r\n                width=\"40\"\r\n                height=\"40\"\r\n              />\r\n            </ProfileLink>\r\n            <div>\r\n              <ProfileLink username={article.author.username}>\r\n                {article.author.username}\r\n              </ProfileLink>\r\n              <div>\r\n                <DateCreation date={article.createdAt} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <span>{article.author.bio}</span>\r\n        </div>\r\n        {canModify && <EditSection slug={article.slug} />}\r\n      </ArticleHeader>\r\n      <ArticleBody>\r\n        <h3 className=\"article__title\">{article.title}</h3>\r\n        <TagList tags={article.tagList} />\r\n        <p>{article.body}</p>\r\n        <div>{article.description}</div>\r\n        <div>\r\n          <FavoritesCount\r\n            count={article.favoritesCount}\r\n            slug={article.slug}\r\n            favorited={article.favorited}\r\n          />\r\n        </div>\r\n      </ArticleBody>\r\n    </Article>\r\n  );\r\n};\r\n\r\nArticlePreview.defaultProps = {\r\n  isProgress: false,\r\n  username: '',\r\n};\r\n\r\nArticlePreview.propTypes = {\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n  isProgress: PropTypes.bool,\r\n  username: PropTypes.string,\r\n};\r\n\r\nconst ArticleHeader = styled.div`\r\n  padding: 25px;\r\n  background: #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 30px;\r\n  .article__profile-img {\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  .article__profile-link {\r\n    font-size: 14px;\r\n  }\r\n  .article__inner {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst Article = styled.div`\r\n  border-top: 2px solid #d5dddf;\r\n  border-bottom: 2px solid #d5dddf;\r\n  color: #343434;\r\n  width: 900px;\r\n  padding: 30px 0;\r\n  max-width: 100%;\r\n`;\r\nconst ArticleBody = styled.div`\r\n  .article__title {\r\n    font-weight: 500;\r\n    font-size: 32px;\r\n    line-height: 40px;\r\n  }\r\n`;\r\nexport default ArticlePreview;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Icon, Comment, Avatar } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { DateCreation, ProfileLink } from '../../components';\r\n\r\nconst CommentItem = ({ comment, commentId, slug, deleteComment, username }) => {\r\n  const canModify = username === comment.author.username;\r\n  return (\r\n    <Wrapper>\r\n      <Comment\r\n        author={\r\n          <ProfileLink username={comment.author.username}>\r\n            <span className=\"comment__author-img\">{comment.author.username}</span>\r\n          </ProfileLink>\r\n        }\r\n        avatar={\r\n          <ProfileLink username={comment.author.username}>\r\n            <Avatar src={comment.author.image} alt={comment.author.username} />\r\n          </ProfileLink>\r\n        }\r\n        content={<p>{comment.body}</p>}\r\n        datetime={<DateCreation date={comment.createdAt} />}\r\n      />\r\n      {canModify ? (\r\n        <CommentHeader>\r\n          <button\r\n            onClick={() => deleteComment(slug, commentId)}\r\n            className=\"comment__btn-delete\"\r\n            type=\"button\"\r\n          >\r\n            <Icon className=\"comment__icon-delete\" type=\"delete\" />\r\n          </button>\r\n        </CommentHeader>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nCommentItem.defaultProps = {\r\n  commentId: 0,\r\n  slug: '',\r\n  username: '',\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  comment: PropTypes.instanceOf(Object).isRequired,\r\n  commentId: PropTypes.number,\r\n  slug: PropTypes.string,\r\n  deleteComment: PropTypes.func.isRequired,\r\n  username: PropTypes.string,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n`;\r\nconst CommentHeader = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  .comment__btn-delete {\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 1px 4px;\r\n    background: inherit;\r\n    color: #b85c5c;\r\n\r\n    &:hover {\r\n      color: #c72424;\r\n    }\r\n    &:focus {\r\n      color: #c72424;\r\n    }\r\n    &:active {\r\n      color: #c72424;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CommentItem;\r\n","import React from 'react';\r\nimport { Input, Button, Form, Comment, Avatar } from 'antd';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { ProfileLink } from '../../components';\r\n\r\nclass AddComment extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  addComment = event => {\r\n    const { addNewComment, slug } = this.props;\r\n    const { value } = this.state;\r\n    event.preventDefault();\r\n    addNewComment(slug, value);\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n  onChangeValue = ({ target }) => {\r\n    this.setState({ value: target.value });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const { currentUser, isAuthorizedUser, inProgress } = this.props;\r\n    if (!isAuthorizedUser) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        <Comment\r\n          avatar={\r\n            <ProfileLink username={currentUser.username}>\r\n              <Avatar src={currentUser.image} alt=\"Han Solo\" />\r\n            </ProfileLink>\r\n          }\r\n          content={\r\n            <div>\r\n              <Form.Item>\r\n                <Input.TextArea rows={4} onChange={this.onChangeValue} value={value} />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  type=\"primary\"\r\n                  loading={inProgress}\r\n                  onClick={this.addComment}\r\n                >\r\n                  Добавить комментарий\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddComment.defaultProps = {\r\n  slug: '',\r\n  isAuthorizedUser: false,\r\n};\r\n\r\nAddComment.propTypes = {\r\n  addNewComment: PropTypes.func.isRequired,\r\n  slug: PropTypes.string,\r\n  currentUser: PropTypes.instanceOf(Object).isRequired,\r\n  isAuthorizedUser: PropTypes.bool,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n  background: #eee;\r\n  padding: 10px 15px;\r\n  margin-bottom: 20px;\r\n\r\n  .comment__author-img {\r\n    border-radius: 50%;\r\n    margin-right: 15px;\r\n  }\r\n  .comment__form {\r\n    display: flex;\r\n    align-items: baseline;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default AddComment;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport CommentItem from '../Comment-item/Comment-item';\r\nimport AddComment from '../Add-comment/Add-comment';\r\nimport { addNewComment, deleteComment } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ article, auth, comments }) => ({\r\n  slug: article.articleCurrent.slug,\r\n  inProgress: comments.inProgress,\r\n  currentUser: auth.currentUser,\r\n  comments: comments.commentList,\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addNewCommentConnect: addNewComment,\r\n  deleteCommentConnect: deleteComment,\r\n};\r\n\r\nconst CommentList = ({\r\n  comments,\r\n  currentUser,\r\n  addNewCommentConnect,\r\n  slug,\r\n  deleteCommentConnect,\r\n  inProgress,\r\n  isAuthorizedUser,\r\n}) => {\r\n  const renderList = (\r\n    <List>\r\n      {comments.map(comment => (\r\n        <li key={comment.id}>\r\n          <CommentItem\r\n            username={currentUser.username}\r\n            deleteComment={deleteCommentConnect}\r\n            comment={comment}\r\n            slug={slug}\r\n            commentId={comment.id}\r\n          />\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n  return (\r\n    <WrapperComments>\r\n      <AddComment\r\n        inProgress={inProgress}\r\n        isAuthorizedUser={isAuthorizedUser}\r\n        addNewComment={addNewCommentConnect}\r\n        slug={slug}\r\n        currentUser={currentUser}\r\n      />\r\n      {renderList}\r\n    </WrapperComments>\r\n  );\r\n};\r\n\r\nCommentList.defaultProps = {\r\n  slug: '',\r\n  isProgress: false,\r\n  isAuthorizedUser: false,\r\n};\r\n\r\nCommentList.propTypes = {\r\n  comments: PropTypes.instanceOf(Array).isRequired,\r\n  currentUser: PropTypes.instanceOf(Object).isRequired,\r\n  addNewCommentConnect: PropTypes.func.isRequired,\r\n  deleteCommentConnect: PropTypes.func.isRequired,\r\n  slug: PropTypes.string,\r\n  isProgress: PropTypes.bool,\r\n  isAuthorizedUser: PropTypes.bool,\r\n};\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst WrapperComments = styled.div`\r\n  width: 700px;\r\n  max-width: 100%;\r\n  margin: 30px 0;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentList);\r\n","import { getAll, postComment, delComment } from '../../../services/services';\r\nimport * as actions from './comment';\r\n\r\nexport const getAllComments = slug => dispatch => {\r\n  dispatch(actions.fetchCommentsRequest());\r\n  getAll(slug)\r\n    .then(res => {\r\n      const articleData = res.data;\r\n      dispatch(actions.fetchCommentsSuccess(articleData));\r\n    })\r\n    .catch(() => {\r\n      dispatch(actions.fetchCommentsFailure());\r\n    });\r\n};\r\n\r\nexport const deleteComment = (slug, id) => dispatch => {\r\n  dispatch(actions.fetchCommentDeleteRequest());\r\n  delComment(slug, id).then(() => {\r\n    dispatch(actions.fetchCommentDeleteSuccess(id));\r\n  });\r\n};\r\n\r\nexport const addNewComment = (slug, value) => dispatch => {\r\n  dispatch(actions.fetchAddCommentsRequest());\r\n  postComment(slug, {\r\n    comment: {\r\n      body: value,\r\n    },\r\n  }).then(res => {\r\n    const { comment } = res.data;\r\n    dispatch(actions.fetchAddCommentsSuccess(comment));\r\n  });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\nimport FormArticle from '../Form-article/Form-article';\r\nimport { articleCreate } from '../../redux/actions';\r\nimport { fetchCreateArticleFailure } from '../../redux/actions/article/article';\r\n\r\nconst validation = Yup.object().shape({\r\n  title: Yup.string().required('Required'),\r\n  description: Yup.string().required('Required'),\r\n  body: Yup.string().required('Required'),\r\n});\r\n\r\nconst mapStateToProps = ({ article }) => ({\r\n  articleState: article.articleState,\r\n  slug: article.articleCurrent.slug,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  articleCreateConnect: articleCreate,\r\n};\r\n\r\nconst FormCreateArticle = ({ articleCreateConnect, articleState, slug }) => {\r\n  const onSubmit = (values, { setSubmitting, setErrors }) => {\r\n    const formattedValue = {\r\n      ...values,\r\n      tagList: values.tagList.split(' '),\r\n    };\r\n    articleCreateConnect(formattedValue).catch(error => {\r\n      const { errors } = error.response.data;\r\n      setErrors(errors);\r\n      fetchCreateArticleFailure();\r\n      setSubmitting(false);\r\n    });\r\n  };\r\n\r\n  const initialValues = {\r\n    title: '',\r\n    description: '',\r\n    body: '',\r\n    tagList: '',\r\n  };\r\n\r\n  if (articleState === 'create') {\r\n    localStorage.setItem('articleSlug', slug);\r\n    return <Redirect to={`/articles/${slug}`} />;\r\n  }\r\n  return (\r\n    <WrapperForm>\r\n      <FormArticle onSubmit={onSubmit} initialValues={initialValues} validation={validation} />\r\n    </WrapperForm>\r\n  );\r\n};\r\n\r\nFormCreateArticle.defaultProps = {\r\n  articleState: '',\r\n  slug: '',\r\n};\r\n\r\nFormCreateArticle.propTypes = {\r\n  articleCreateConnect: PropTypes.func.isRequired,\r\n  articleState: PropTypes.string,\r\n  slug: PropTypes.string,\r\n};\r\n\r\nconst WrapperForm = styled.div`\r\n  width: 50%;\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormCreateArticle);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LoginForm, SignupForm } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst Auth = ({ isAuthorizedUser }) => {\r\n  if (isAuthorizedUser) return <Redirect to=\"/\" />;\r\n  return (\r\n    <WrapperForm>\r\n      <div>\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/signup\" component={SignupForm} />\r\n      </div>\r\n    </WrapperForm>\r\n  );\r\n};\r\n\r\nAuth.defaultProps = {\r\n  isAuthorizedUser: false,\r\n};\r\n\r\nAuth.propTypes = {\r\n  isAuthorizedUser: PropTypes.bool,\r\n};\r\n\r\nconst WrapperForm = styled.div`\r\n  text-align: center;\r\n  color: #202002;\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  > div {\r\n    width: 400px;\r\n    max-width: 75%;\r\n  }\r\n\r\n  .auth__title {\r\n    font-size: 28px;\r\n    line-height: 33px;\r\n    margin-bottom: 5px;\r\n  }\r\n  .form__link {\r\n    margin-top: 30px;\r\n\r\n    a {\r\n      font-size: 16px;\r\n      line-height: 19px;\r\n      color: #adadad;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n      &:focus {\r\n        color: #1890ff;\r\n      }\r\n      &:active {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .auth__text {\r\n    opacity: 0.5;\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n  .btn {\r\n    width: 200px;\r\n    height: 200px;\r\n    background: #000;\r\n  }\r\n  .btn-2 {\r\n    background: red;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps)(Auth);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Header, ArticleAll } from '../../modules';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main>\r\n        <ArticleAll />\r\n      </Main>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Main = styled.main`\r\n  margin-top: 30px;\r\n  padding-bottom: 50px;\r\n`;\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FormCreateArticle, Header } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst CreatePost = ({ isAuthorizedUser }) => {\r\n  if (!isAuthorizedUser) return <Redirect to=\"/login\" />;\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Wrapper>\r\n        <FormCreateArticle />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nCreatePost.defaultProps = {\r\n  isAuthorizedUser: false,\r\n};\r\n\r\nCreatePost.propTypes = {\r\n  isAuthorizedUser: PropTypes.bool,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px 0;\r\n`;\r\n\r\nexport default connect(mapStateToProps)(CreatePost);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Header, ProfilePreview } from '../../modules';\r\nimport { Container } from '../../components';\r\nimport { getProfile, resetProfile } from '../../redux/actions/profile';\r\n\r\nconst mapStateToProps = ({ userProfile }) => ({\r\n  profile: userProfile.profile,\r\n  isLoading: userProfile.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProfile,\r\n  resetProfile,\r\n};\r\n\r\nclass Profile extends React.Component {\r\n  componentDidMount() {\r\n    const { getProfile } = this.props;\r\n    const profileName = localStorage.getItem('ProfileName');\r\n    getProfile(profileName);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetProfile } = this.props;\r\n    resetProfile();\r\n  }\r\n\r\n  render() {\r\n    const { profile, isLoading } = this.props;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <ProfilePreview profile={profile} isLoading={isLoading} />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Header, ArticlePreview, CommentList } from '../../modules';\r\nimport { Container } from '../../components';\r\nimport { getArticle, getAllComments, resetState } from '../../redux/actions';\r\n\r\nconst mapStateToProps = ({ article, auth }) => ({\r\n  article: article.articleCurrent,\r\n  isProgress: article.isProgress,\r\n  username: auth.currentUser.username,\r\n  articleState: article.articleState,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getArticleConnect: getArticle,\r\n  getAllCommentsConnect: getAllComments,\r\n  resetStateConnect: resetState,\r\n};\r\n\r\nclass Article extends React.Component {\r\n  componentDidMount() {\r\n    const { getArticleConnect, getAllCommentsConnect } = this.props;\r\n    const articleSlug = localStorage.getItem('articleSlug');\r\n    getArticleConnect(articleSlug);\r\n    getAllCommentsConnect(articleSlug);\r\n  }\r\n\r\n  render() {\r\n    const { article, isProgress, username, articleState } = this.props;\r\n    if (articleState === 'delete') {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <Main>\r\n            <ArticlePreview username={username} article={article} isProgress={isProgress} />\r\n            <CommentList />\r\n          </Main>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nArticle.defaultProps = {\r\n  isProgress: false,\r\n  username: '',\r\n  articleState: '',\r\n};\r\n\r\nArticle.propTypes = {\r\n  getArticleConnect: PropTypes.func.isRequired,\r\n  getAllCommentsConnect: PropTypes.func.isRequired,\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n  articleState: PropTypes.string,\r\n  isProgress: PropTypes.bool,\r\n  username: PropTypes.string,\r\n};\r\n\r\nconst Main = styled.div`\r\n  margin-top: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Header, FormEditArticle } from '../../modules';\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuthorizedUser: auth.isAuthorizedUser,\r\n});\r\n\r\nconst EditArticle = ({ isAuthorizedUser }) => {\r\n  if (!isAuthorizedUser) return <Redirect to=\"/login\" />;\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Wrapper>\r\n        <FormEditArticle />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nEditArticle.defaultProps = {\r\n  isAuthorizedUser: false,\r\n};\r\n\r\nEditArticle.propTypes = {\r\n  isAuthorizedUser: PropTypes.bool,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px 0;\r\n`;\r\nexport default connect(mapStateToProps)(EditArticle);\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Home, Auth, CreatePost, Profile, Article, EditArticle } from '../../pages';\nimport { setUserData } from '../../redux/actions';\n\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\n\nconst mapDispatchToProps = {\n  setUserDataConnect: setUserData,\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { setUserDataConnect } = this.props;\n    setUserDataConnect();\n  }\n\n  render() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path={['/login', '/signup']} component={Auth} />\n          <Route path=\"/add\" component={CreatePost} />\n          <Route exact path=\"/:username\" component={Profile} />\n          <Route exact path=\"/articles/:slug\" component={Article} />\n          <Route path=\"/articles/:slug/edit\" component={EditArticle} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  setUserDataConnect: PropTypes.func.isRequired,\n};\n\nexport default connect(() => ({}), mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}